--- origsrc/OpenCOLLADA-1.6.70-maya/CMakeLists.txt	2022-06-06 08:37:03.468426300 +0900
+++ src/OpenCOLLADA-1.6.70-maya/CMakeLists.txt	2022-06-06 10:15:30.473816400 +0900
@@ -192,7 +192,7 @@ set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}
 
 set(OPENCOLLADA_INST_INCLUDE ${INCLUDE_INSTALL_DIR})
 set(OPENCOLLADA_INST_LIBRARY ${LIB_INSTALL_DIR})
-set(OPENCOLLADA_INST_CMAKECONFIG ${OPENCOLLADA_INST_LIBRARY}/cmake)
+set(OPENCOLLADA_INST_CMAKECONFIG ${CMAKECONFIG_INSTALL_DIR})
 
 
 #-----------------------------------------------------------------------------
--- origsrc/OpenCOLLADA-1.6.70-maya/COLLADABaseUtils/src/COLLADABUNativeString.cpp	2020-04-29 05:49:24.000000000 +0900
+++ src/OpenCOLLADA-1.6.70-maya/COLLADABaseUtils/src/COLLADABUNativeString.cpp	2022-06-06 08:53:05.841025500 +0900
@@ -57,7 +57,7 @@ namespace COLLADABU
 		WideCharToMultiByte( CP_ACP, 0, (LPCWSTR)wideString.c_str(), -1, dest, multibyteLength, 0, 0 );
 		this->assign( dest );
 		delete[] dest;
-#elif defined (COLLADABU_OS_LINUX) || defined (COLLADABU_OS_MAC) || defined (__GLIBC__)
+#elif defined (COLLADABU_OS_LINUX) || defined (COLLADABU_OS_MAC) || defined (__GLIBC__) || defined(__CYGWIN__)
 //# error check if this really works on linux
 		size_t maxStringLength = wcstombs( 0, wideString.c_str(), 0 ) + 1; // wideString.length()*MB_CUR_MAX + 1;
 		char* dest = new char[ maxStringLength ];
@@ -80,7 +80,7 @@ namespace COLLADABU
 		WideString returnValue( dest );
 		delete[] dest;
 		return returnValue;
-#elif defined (COLLADABU_OS_LINUX) || defined (COLLADABU_OS_MAC) || defined (__GLIBC__)
+#elif defined (COLLADABU_OS_LINUX) || defined (COLLADABU_OS_MAC) || defined (__GLIBC__) || defined(__CYGWIN__)
 //# error check if this really works on linux
 
 		size_t maxStringLength = length() + 1;
--- origsrc/OpenCOLLADA-1.6.70-maya/GeneratedSaxParser/include/GeneratedSaxParserPrerequisites.h	2020-04-29 05:49:24.000000000 +0900
+++ src/OpenCOLLADA-1.6.70-maya/GeneratedSaxParser/include/GeneratedSaxParserPrerequisites.h	2022-06-06 08:59:08.788847300 +0900
@@ -62,7 +62,7 @@ namespace GeneratedSaxParser
     typedef unsigned int uint32;
     typedef unsigned long long uint64;
 
-#elif defined COLLADABU_OS_LINUX || defined __GLIBC__
+#elif defined COLLADABU_OS_LINUX || defined __GLIBC__ || defined(__CYGWIN__)
     typedef signed char sint8;
     typedef signed short sint16;
     typedef signed int sint32;
--- origsrc/OpenCOLLADA-1.6.70-maya/common/libBuffer/src/CommonFWriteBufferFlusher.cpp	2020-04-29 05:49:24.000000000 +0900
+++ src/OpenCOLLADA-1.6.70-maya/common/libBuffer/src/CommonFWriteBufferFlusher.cpp	2022-06-06 08:48:30.842577200 +0900
@@ -90,7 +90,7 @@ namespace Common
 		FilePosType currentPos = ftello64(mStream);
 #elif defined( _WIN32)
 		FilePosType currentPos = _ftelli64(mStream);
-#elif defined (__APPLE__) || defined(__FreeBSD__)
+#elif defined (__APPLE__) || defined(__FreeBSD__) || defined(__CYGWIN__)
 		FilePosType currentPos = ftello(mStream);
 #else
 		FilePosType currentPos = ftello64(mStream);
@@ -115,7 +115,7 @@ namespace Common
   			return (fseeko64(mStream,0,SEEK_END) == 0);
 #elif defined( _WIN32)
 			return (_fseeki64(mStream, 0, SEEK_END) == 0);
-#elif defined (__APPLE__) || defined(__FreeBSD__)
+#elif defined (__APPLE__) || defined(__FreeBSD__) || defined(__CYGWIN__)
 			return (fseeko(mStream, 0, SEEK_END) == 0);
 #else
 			return (fseeko64(mStream, 0, SEEK_END) == 0);
@@ -135,7 +135,7 @@ namespace Common
   				bool success = (fseeko64(mStream,pos,SEEK_SET) == 0);
 #elif defined( _WIN32)
 				bool success = (_fseeki64(mStream, pos, SEEK_SET) == 0);
-#elif defined (__APPLE__) || defined(__FreeBSD__)
+#elif defined (__APPLE__) || defined(__FreeBSD__) || defined(__CYGWIN__)
 				bool success = (fseeko(mStream, pos, SEEK_SET) == 0);
 #else
 				bool success = (fseeko64(mStream, pos, SEEK_SET) == 0);
