--- origsrc/drawtk-drawtk-1.0b/src/fonttex.c	2011-11-02 23:16:08.000000000 +0900
+++ src/drawtk-drawtk-1.0b/src/fonttex.c	2016-04-27 19:03:58.784695200 +0900
@@ -21,10 +21,10 @@
 #endif
 
 #include <ft2build.h>
-#include <freetype/freetype.h>
-#include <freetype/ftglyph.h>
-#include <freetype/ftoutln.h>
-#include <freetype/fttrigon.h>
+#include <freetype.h>
+#include <ftglyph.h>
+#include <ftoutln.h>
+#include <fttrigon.h>
 #include <fontconfig/fontconfig.h>
 #include <stdint.h>
 
@@ -42,7 +42,7 @@
 
 
 
-static 
+static
 void get_max_size(FT_Face face, unsigned int *h, unsigned int *w)
 {
 	unsigned int xmax, ymax, i, x, y;
@@ -94,7 +94,7 @@ void render_char(FT_Face face, uint8_t*
 	bmglyph = (FT_BitmapGlyph)glyph;
 	bitmap=&(bmglyph->bitmap);
 
-	
+
 	FT_Glyph_Get_CBox(glyph, FT_GLYPH_BBOX_UNSCALED, &bbox);
 	w = bitmap->width;
 	h = bitmap->rows;
@@ -115,7 +115,7 @@ void render_char(FT_Face face, uint8_t*
 	}
 
 	bmbits = bitmap->buffer;
-	for (j=0; j<h; j++) 
+	for (j=0; j<h; j++)
 		memcpy(bits + imin+(jmax-j)*cm_w, bmbits + w*j, w);
 
 	FT_Done_Glyph(glyph);
@@ -168,7 +168,7 @@ int load_glyph(void **bits, struct dtk_f
 	ppem = maxsc * ((SIZE * SIZE) / (max_size * maxsc));
 	//FT_Set_Pixel_Sizes(face, (unsigned int)ppem, (unsigned int)ppem);
 
-	for (i = 32; i < 256; i++) 
+	for (i = 32; i < 256; i++)
 		for (lvl = 0; lvl <= mxlvl; lvl++)
 			render_char(face, bits[lvl], i, font, ppem, lvl);
 
@@ -248,7 +248,7 @@ struct dtk_font* dtk_load_font(const cha
 	struct dtk_font* font = NULL;
 	char stringid[256];
 	void* bits[FONT_MXLVL+1];
-	
+
 	// Get new/precreated texture
 	snprintf(stringid, sizeof(stringid), "FONT:%s", fontname);
 	if ((tex = get_texture(stringid)) == NULL)
