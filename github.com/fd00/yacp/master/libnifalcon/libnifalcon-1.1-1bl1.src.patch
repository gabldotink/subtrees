--- origsrc/libnifalcon-1.1/BuildSysCMakeLib.cmake	2016-07-05 06:07:21.000000000 +0900
+++ src/libnifalcon-1.1/BuildSysCMakeLib.cmake	2018-07-13 16:57:36.643241200 +0900
@@ -315,12 +315,12 @@ FUNCTION(BUILDSYS_BUILD_LIB)
 
     # Installation commands
     IF(BUILDSYS_LIB_SHOULD_INSTALL AND NOT BUILDSYS_LIB_EXCLUDE_FROM_ALL)
-      INSTALL(TARGETS ${CURRENT_LIB} LIBRARY DESTINATION ${LIBRARY_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} FRAMEWORK DESTINATION ${FRAMEWORK_INSTALL_DIR})
+      INSTALL(TARGETS ${CURRENT_LIB} RUNTIME DESTINATION ${RUNTIME_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} FRAMEWORK DESTINATION ${FRAMEWORK_INSTALL_DIR})
     ELSEIF(BUILDSYS_LIB_SHOULD_INSTALL AND BUILDSYS_LIB_EXCLUDE_FROM_ALL)
       # Only install the output file if it exists. This doesn't work for targets under exclude from all, but we may build them anyways
       MESSAGE(STATUS "NOTE: Target ${BUILDSYS_LIB_NAME} will only be installed after target is specifically built (not build using all target)")
       GET_TARGET_PROPERTY(LIB_OUTPUT_NAME ${CURRENT_LIB} LOCATION)
-      INSTALL(FILES ${LIB_OUTPUT_NAME} LIBRARY DESTINATION ${LIBRARY_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} OPTIONAL)
+      INSTALL(FILES ${LIB_OUTPUT_NAME} RUNTIME DESTINATION ${RUNTIME_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} OPTIONAL)
     ENDIF()
 
     # Rewrite of install_name_dir in apple binaries
--- origsrc/libnifalcon-1.1/CMakeLists.txt	2016-07-05 06:07:21.000000000 +0900
+++ src/libnifalcon-1.1/CMakeLists.txt	2018-07-13 17:00:23.960373000 +0900
@@ -68,9 +68,9 @@ ENDIF(NOT LIBFTD2XX_FOUND AND NOT LIBUSB
 
 #library definitions
 SET(LIBNIFALCON_MAJOR_VERSION 1)
-SET(LIBNIFALCON_MINOR_VERSION 0)
-SET(LIBNIFALCON_BUILD_VERSION 2)
-SET(LIBNIFALCON_VERSION ${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION}.${LIBNIFALCON_BUILD_VERSION})
+SET(LIBNIFALCON_MINOR_VERSION 1)
+SET(LIBNIFALCON_BUILD_VERSION 0)
+SET(LIBNIFALCON_VERSION ${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION})
 
 # LibNiFalcon Include directory
 SET(LIBNIFALCON_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include")
