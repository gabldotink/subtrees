pcmsolver
------------------------------------------
PCMSolver is an API for solving the Polarizable Continuum Model electrostatic
problem.

Runtime requirements:
  cygwin-3.2.0-1
  libgcc1-10.2.0-1
  libgfortran5-10.2.0-1
  libpcm-devel-1.3.0-1bl1
  libpcm1-1.3.0-1bl1
  libstdc++6-10.2.0-1
  pkg-config-1.6.3-1
  zlib0-1.2.11-1

Build requirements:
(besides corresponding -devel packages)
  binutils-2.36.1-2
  cmake-3.20.0-1
  cygport-0.34.0-1
  gcc-core-10.2.0-1
  gcc-fortran-10.2.0-1
  gcc-g++-10.2.0-1
  ninja-1.10.2-1
  python27-2.7.18-4
  zlib-devel-1.2.11-1

Canonical website:
  https://github.com/PCMSolver/pcmsolver

Canonical download:
  https://github.com/PCMSolver/pcmsolver/archive/v1.3.0.tar.gz

-------------------------------------------

Build instructions:
  1. unpack pcmsolver-1.3.0-X-src.tar.xz
  2. if you use setup to install this src package,
     it will be unpacked under /usr/src automatically
        % cd /usr/src
        % cygport ./pcmsolver-1.3.0-X.cygport all

This will create:
  /usr/src/pcmsolver-1.3.0-X-src.tar.xz
  /usr/src/pcmsolver-1.3.0-X.tar.xz
  /usr/src/libpcm1-1.3.0-X.tar.xz
  /usr/src/libpcm-devel-1.3.0-X.tar.xz

-------------------------------------------

Files included in the binary package:

(pcmsolver)
  /usr/bin/go_pcm.py
  /usr/bin/plot_cavity.py
  /usr/bin/run_pcm.exe
  /usr/lib/python/pcmsolver/__init__.py
  /usr/lib/python/pcmsolver/external/__init__.py
  /usr/lib/python/pcmsolver/external/docopt.py
  /usr/lib/python/pcmsolver/getkw.py
  /usr/lib/python/pcmsolver/metadata.py
  /usr/lib/python/pcmsolver/pcmdata.py
  /usr/lib/python/pcmsolver/pcmparser.py
  /usr/lib/python/pcmsolver/pyparsing.py
  /usr/share/doc/Cygwin/pcmsolver.README
  /usr/share/doc/pcmsolver/AUTHORS.md
  /usr/share/doc/pcmsolver/CHANGELOG.md
  /usr/share/doc/pcmsolver/CONTRIBUTING.md
  /usr/share/doc/pcmsolver/LICENSE
  /usr/share/doc/pcmsolver/README.md

(libpcm1)
  /usr/bin/cygpcm-1.dll

(libpcm-devel)
  /usr/include/PCMSolver/Citation.hpp
  /usr/include/PCMSolver/Config.hpp
  /usr/include/PCMSolver/ErrorHandling.hpp
  /usr/include/PCMSolver/LoggerInterface.hpp
  /usr/include/PCMSolver/PCMInput.h
  /usr/include/PCMSolver/PCMSolverExport.h
  /usr/include/PCMSolver/PhysicalConstants.hpp
  /usr/include/PCMSolver/STLUtils.hpp
  /usr/include/PCMSolver/TimerInterface.hpp
  /usr/include/PCMSolver/VersionInfo.hpp
  /usr/include/PCMSolver/bi_operators/BIOperatorData.hpp
  /usr/include/PCMSolver/bi_operators/BoundaryIntegralOperator.hpp
  /usr/include/PCMSolver/bi_operators/Collocation.hpp
  /usr/include/PCMSolver/bi_operators/IBoundaryIntegralOperator.hpp
  /usr/include/PCMSolver/bi_operators/Numerical.hpp
  /usr/include/PCMSolver/bi_operators/Purisima.hpp
  /usr/include/PCMSolver/cavity/Cavity.hpp
  /usr/include/PCMSolver/cavity/CavityData.hpp
  /usr/include/PCMSolver/cavity/Element.hpp
  /usr/include/PCMSolver/cavity/GePolCavity.hpp
  /usr/include/PCMSolver/cavity/ICavity.hpp
  /usr/include/PCMSolver/cavity/RestartCavity.hpp
  /usr/include/PCMSolver/external/libtaylor/CMakeLists.txt
  /usr/include/PCMSolver/external/libtaylor/README
  /usr/include/PCMSolver/external/libtaylor/ctaylor.hpp
  /usr/include/PCMSolver/external/libtaylor/ctaylor_math.hpp
  /usr/include/PCMSolver/external/libtaylor/example.cpp
  /usr/include/PCMSolver/external/libtaylor/micromath.hpp
  /usr/include/PCMSolver/external/libtaylor/polymul.hpp
  /usr/include/PCMSolver/external/libtaylor/taylor.hpp
  /usr/include/PCMSolver/external/libtaylor/taylor_math.hpp
  /usr/include/PCMSolver/external/libtaylor/tmath.hpp
  /usr/include/PCMSolver/external/libtaylor/unittest_taylor.cpp
  /usr/include/PCMSolver/green/AnisotropicLiquid.hpp
  /usr/include/PCMSolver/green/DerivativeTypes.hpp
  /usr/include/PCMSolver/green/Green.hpp
  /usr/include/PCMSolver/green/GreenData.hpp
  /usr/include/PCMSolver/green/GreenUtils.hpp
  /usr/include/PCMSolver/green/GreensFunction.hpp
  /usr/include/PCMSolver/green/IGreensFunction.hpp
  /usr/include/PCMSolver/green/InterfacesImpl.hpp
  /usr/include/PCMSolver/green/IonicLiquid.hpp
  /usr/include/PCMSolver/green/SphericalDiffuse.hpp
  /usr/include/PCMSolver/green/SphericalSharp.hpp
  /usr/include/PCMSolver/green/UniformDielectric.hpp
  /usr/include/PCMSolver/green/Vacuum.hpp
  /usr/include/PCMSolver/interface/Input.hpp
  /usr/include/PCMSolver/interface/Meddle.hpp
  /usr/include/PCMSolver/mmfq/FQOhno.hpp
  /usr/include/PCMSolver/pcmsolver.f90
  /usr/include/PCMSolver/pcmsolver.h
  /usr/include/PCMSolver/solver/CPCMSolver.hpp
  /usr/include/PCMSolver/solver/IEFSolver.hpp
  /usr/include/PCMSolver/solver/ISolver.hpp
  /usr/include/PCMSolver/solver/Solver.hpp
  /usr/include/PCMSolver/solver/SolverData.hpp
  /usr/include/PCMSolver/solver/SolverImpl.hpp
  /usr/include/PCMSolver/utils/Atom.hpp
  /usr/include/PCMSolver/utils/ChargeDistribution.hpp
  /usr/include/PCMSolver/utils/Factory.hpp
  /usr/include/PCMSolver/utils/Legendre.hpp
  /usr/include/PCMSolver/utils/Logger.hpp
  /usr/include/PCMSolver/utils/LoggerImpl.hpp
  /usr/include/PCMSolver/utils/MMFQ.hpp
  /usr/include/PCMSolver/utils/MathUtils.hpp
  /usr/include/PCMSolver/utils/Molecule.hpp
  /usr/include/PCMSolver/utils/QuadratureRules.hpp
  /usr/include/PCMSolver/utils/Solvent.hpp
  /usr/include/PCMSolver/utils/Sphere.hpp
  /usr/include/PCMSolver/utils/SplineFunction.hpp
  /usr/include/PCMSolver/utils/Stencils.hpp
  /usr/include/PCMSolver/utils/Symmetry.hpp
  /usr/include/PCMSolver/utils/Timer.hpp
  /usr/include/PCMSolver/utils/cnpy.hpp
  /usr/include/PCMSolver/utils/getkw/Getkw.h
  /usr/include/PCMSolver/utils/getkw/GetkwError.h
  /usr/include/PCMSolver/utils/getkw/Keyword.h
  /usr/include/PCMSolver/utils/getkw/Section.h
  /usr/lib/cmake/PCMSolver/PCMSolverConfig.cmake
  /usr/lib/cmake/PCMSolver/PCMSolverConfigVersion.cmake
  /usr/lib/cmake/PCMSolver/PCMSolverTargets-shared-release.cmake
  /usr/lib/cmake/PCMSolver/PCMSolverTargets-shared.cmake
  /usr/lib/libpcm.dll.a
  /usr/lib/pkgconfig/pcmsolver.pc

------------------

Port Notes:

----- version 1.3.0-1bl1 -----
Version bump.

----- version 1.2.3-1bl1 -----
Version bump.

----- version 1.2.1-1bl1 -----
Initial release by fd0 <https://github.com/fd00/>
