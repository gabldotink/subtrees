--- origsrc/OpenCoarrays-2.10.1/CMakeLists.txt	2022-09-03 01:55:05.000000000 +0900
+++ src/OpenCoarrays-2.10.1/CMakeLists.txt	2022-12-22 11:43:21.027938500 +0900
@@ -536,7 +536,7 @@ endif()
 # Use standardized GNU install directory conventions
 #---------------------------------------------------
 include(GNUInstallDirs)
-set(mod_dir_tail "${OpenCoarrays_dist_string}_${CMAKE_Fortran_COMPILER_ID}-${CMAKE_Fortran_COMPILER_VERSION}")
+option(mod_dir_tail "mod_dir_tail" "${OpenCoarrays_dist_string}_${CMAKE_Fortran_COMPILER_ID}-${CMAKE_Fortran_COMPILER_VERSION}")
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/${OpenCoarrays_dist_string}-tests")
 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR}")
 set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR}")
@@ -577,10 +577,11 @@ function(caf_compile_executable target m
             ${includes} ${localDefs} ${config_Fortran_flags}
             -o "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${target}"
             "${CMAKE_CURRENT_SOURCE_DIR}/${main_depend}"
-            $<TARGET_FILE:opencoarrays_test_utilities>
-            $<TARGET_FILE:opencoarrays_mod>
+            $<TARGET_LINKER_FILE:opencoarrays_test_utilities>
+            $<TARGET_LINKER_FILE:opencoarrays_mod>
+            $<TARGET_LINKER_FILE:caf_mpi>
             ${ARGN}
-    DEPENDS "${main_depend}" ${ARGN} caf_mpi_static opencoarrays_test_utilities opencoarrays_mod
+    DEPENDS "${main_depend}" ${ARGN} caf_mpi opencoarrays_test_utilities opencoarrays_mod
     VERBATIM
     )
   add_custom_target("build_${target}" ALL
--- origsrc/OpenCoarrays-2.10.1/src/runtime-libraries/mpi/CMakeLists.txt	2022-09-03 01:55:05.000000000 +0900
+++ src/OpenCoarrays-2.10.1/src/runtime-libraries/mpi/CMakeLists.txt	2022-12-22 11:59:09.627426800 +0900
@@ -19,7 +19,7 @@ endif()
 #-----------------------------------------------------------
 # Add the actual library targets, then adjust them as needed
 #-----------------------------------------------------------
-add_library(opencoarrays_mod STATIC ./opencoarrays.F90)
+add_library(opencoarrays_mod SHARED ./opencoarrays.F90)
 set_target_properties(opencoarrays_mod
   PROPERTIES
   Fortran_MODULE_DIRECTORY "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_INCLUDEDIR}/${mod_dir_tail}"
@@ -32,23 +32,30 @@ target_link_libraries(opencoarrays_mod
   PUBLIC ${MPI_Fortran_LINK_FLAGS}
   PUBLIC ${MPI_Fortran_LIBRARIES})
 target_link_libraries(opencoarrays_mod
-  PUBLIC caf_mpi_static)
+  PUBLIC caf_mpi)
 target_include_directories(opencoarrays_mod PUBLIC
   $<$<COMPILE_LANGUAGE:Fortran>:${MPI_Fortran_INCLUDE_DIRS}>
   $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_INCLUDEDIR}/${mod_dir_tail}>
   $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${mod_dir_tail}>)
+if (DEFINED OC_SO_VERSION)
+  set_target_properties(opencoarrays_mod PROPERTIES SOVERSION "${OC_SO_VERSION}")
+endif()
 
 add_library(caf_mpi SHARED mpi_caf.c ../common/caf_auxiliary.c)
-add_library(caf_mpi_static STATIC  mpi_caf.c ../common/caf_auxiliary.c)
+if (BUILD_STATIC_LIBS)
+  add_library(caf_mpi_static STATIC  mpi_caf.c ../common/caf_auxiliary.c)
+endif()
 target_link_libraries(caf_mpi
   PUBLIC ${MPI_C_LINK_FLAGS}
   PUBLIC ${MPI_C_LIBRARIES})
-target_link_libraries(caf_mpi_static
-  PUBLIC ${MPI_C_LINK_FLAGS}
-  PUBLIC ${MPI_C_LIBRARIES})
-set_target_properties(caf_mpi_static
-  PROPERTIES
-  POSITION_INDEPENDENT_CODE TRUE)
+if (BUILD_STATIC_LIBS)
+  target_link_libraries(caf_mpi_static
+    PUBLIC ${MPI_C_LINK_FLAGS}
+    PUBLIC ${MPI_C_LIBRARIES})
+  set_target_properties(caf_mpi_static
+    PROPERTIES
+    POSITION_INDEPENDENT_CODE TRUE)
+endif()
 
 set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
@@ -61,27 +68,33 @@ target_link_libraries(caf_mpi
   PUBLIC Threads::Threads)
 set_target_properties(caf_mpi
   PROPERTIES LINKER_LANGUAGE Fortran)
+if (BUILD_STATIC_LIBS)
 target_link_libraries(caf_mpi_static
   PUBLIC Threads::Threads)
 target_link_libraries(caf_mpi_static
   PRIVATE gfortran)
+endif()
 
 target_include_directories(caf_mpi PUBLIC
   $<$<COMPILE_LANGUAGE:C>:${MPI_C_INCLUDE_DIRS}>
   $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/src>
   $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
-target_include_directories(caf_mpi_static PUBLIC
-  $<$<COMPILE_LANGUAGE:C>:${MPI_C_INCLUDE_DIRS}>
-  $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/src>
-  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+if (BUILD_STATIC_LIBS)
+  target_include_directories(caf_mpi_static PUBLIC
+    $<$<COMPILE_LANGUAGE:C>:${MPI_C_INCLUDE_DIRS}>
+    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/src>
+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+endif()
 target_compile_options(caf_mpi
   PUBLIC $<$<COMPILE_LANGUAGE:C>:${MPI_C_COMPILE_OPTIONS}>)
 target_compile_definitions(caf_mpi
   PUBLIC $<$<COMPILE_LANGUAGE:C>:${MPI_C_COMPILE_DEFINITIONS}>)
-target_compile_options(caf_mpi_static
-  PUBLIC $<$<COMPILE_LANGUAGE:C>:${MPI_C_COMPILE_OPTIONS}>)
-target_compile_definitions(caf_mpi_static
-  PUBLIC $<$<COMPILE_LANGUAGE:C>:${MPI_C_COMPILE_DEFINITIONS}>)
+if (BUILD_STATIC_LIB)
+  target_compile_options(caf_mpi_static
+    PUBLIC $<$<COMPILE_LANGUAGE:C>:${MPI_C_COMPILE_OPTIONS}>)
+  target_compile_definitions(caf_mpi_static
+    PUBLIC $<$<COMPILE_LANGUAGE:C>:${MPI_C_COMPILE_DEFINITIONS}>)
+endif()
 
 set(CAF_SO_VERSION 0)
 if(gfortran_compiler)
@@ -109,7 +122,7 @@ if(APPLE)
 endif()
 
 # Create a symlink in the include dir
-if(UNIX)
+if(UNIX AND NOT CYGWIN)
   add_custom_command(TARGET caf_mpi
     POST_BUILD
     COMMAND ${CMAKE_COMMAND} -E create_symlink "./${mod_dir_tail}/opencoarrays.mod" "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_INCLUDEDIR}/opencoarrays.mod"
@@ -119,22 +132,34 @@ endif()
 install(DIRECTORY "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_INCLUDEDIR}/" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
   FILES_MATCHING PATTERN "opencoarrays.mod")
 
-set_target_properties( caf_mpi_static
-  PROPERTIES
-  SOVERSION ${CAF_SO_VERSION}
-#  VERSION ${PROJECT_VERSION}
-)
+if (BUILD_STATIC_LIBS)
+  set_target_properties( caf_mpi_static
+    PROPERTIES
+    SOVERSION ${CAF_SO_VERSION}
+  #  VERSION ${PROJECT_VERSION}
+  )
+endif()
 
 if (gfortran_compiler)
   target_compile_options(caf_mpi INTERFACE $<$<COMPILE_LANGUAGE:Fortran>:-fcoarray=lib>)
-  target_compile_options(caf_mpi_static INTERFACE $<$<COMPILE_LANGUAGE:Fortran>:-fcoarray=lib>)
+  if (BUILD_STATIC_LIBS)
+    target_compile_options(caf_mpi_static INTERFACE $<$<COMPILE_LANGUAGE:Fortran>:-fcoarray=lib>)
+  endif()
 endif()
 
-install(TARGETS opencoarrays_mod caf_mpi caf_mpi_static EXPORT OpenCoarraysTargets
-  DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-  ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-  LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-)
+if (BUILD_STATIC_LIBS)
+  install(TARGETS opencoarrays_mod caf_mpi caf_mpi_static EXPORT OpenCoarraysTargets
+    DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+  )
+else()
+  install(TARGETS opencoarrays_mod caf_mpi EXPORT OpenCoarraysTargets
+    DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+  )
+endif()
 
 #----------------------------------
 # Determine if we're using Open MPI
@@ -180,14 +205,21 @@ CHECK_INCLUDE_FILE("alloca.h" HAVE_ALLOC
 if(NOT HAVE_ALLOCA)
   target_compile_definitions(caf_mpi
     PRIVATE -DALLOCA_MISSING)
-  target_compile_definitions(caf_mpi_static
-    PRIVATE -DALLOCA_MISSING)
+  if (BUILD_STATIC_LIBS)
+    target_compile_definitions(caf_mpi_static
+      PRIVATE -DALLOCA_MISSING)
+  endif()
   message(WARNING "Could not find <alloca.h>. Assuming functionality is provided elsewhere.")
 endif()
 
 #----------------------------------------------------------------------
 # Test if MPI implementation provides features needed for failed images
 #----------------------------------------------------------------------
+set(CAF_MPI_TARGETS caf_mpi)
+if (BUILD_STATIC_LIBS)
+  list(APPEND CAF_MPI_TARGETS caf_mpi_static)
+endif()
+
 set(MPI_HAS_FAULT_TOL_EXT YES)
 
 CHECK_INCLUDE_FILE("signal.h" HAVE_SIGNAL_H)
@@ -204,7 +236,7 @@ if(NOT HAVE_SIGKILL) # try -D_POSIX, nee
   CHECK_SYMBOL_EXISTS(SIGKILL "signal.h" HAVE_SIGKILL2)
   if(HAVE_SIGKILL2)
     set(HAVE_SIGKILL ${HAVE_SIGKILL2})
-    foreach(lib caf_mpi caf_mpi_static)
+    foreach(lib ${CAF_MPI_TARGETS})
       target_compile_definitions(${lib}
     	PUBLIC -D_POSIX)
     endforeach()
@@ -241,7 +273,7 @@ set(MPI_HEADERS mpi.h)
 include(CheckIncludeFiles)
 CHECK_INCLUDE_FILES("mpi.h;mpi-ext.h" HAVE_MPI_EXT)
 if(HAVE_MPI_EXT)
-    foreach(lib caf_mpi caf_mpi_static)
+    foreach(lib ${CAF_MPI_TARGETS})
       target_compile_definitions(${lib}
     	PRIVATE -DHAVE_MPI_EXT_H)
     endforeach()
@@ -279,7 +311,7 @@ else()
 endif()
 
 if(CAF_ENABLE_FAILED_IMAGES)
-  foreach(lib caf_mpi caf_mpi_static)
+  foreach(lib ${CAF_MPI_TARGETS})
     target_compile_definitions(${lib}
       PUBLIC -DUSE_FAILED_IMAGES)
   endforeach()
@@ -297,7 +329,7 @@ endif()
 CHECK_INCLUDE_FILES("mpi.h" HAVE_MPI_H)
 CHECK_SYMBOL_EXISTS(I_MPI_VERSION "mpi.h" HAVE_Intel_MPI)
 if(HAVE_Intel_MPI AND WIN32)
-  foreach(lib caf_mpi caf_mpi_static)
+  foreach(lib ${CAF_MPI_TARGETS})
     target_compile_definitions(${lib}
       PUBLIC -DUSE_GCC)
   endforeach()
@@ -334,11 +366,13 @@ foreach( fcflag IN LISTS MPI_Fortran_COM
   set(CAF_MPI_Fortran_COMPILE_FLAGS "${CAF_MPI_Fortran_COMPILE_FLAGS} ${fcflag}" )
 endforeach()
 string(STRIP "${CAF_MPI_Fortran_COMPILE_FLAGS}" CAF_MPI_Fortran_COMPILE_FLAGS)
-set_target_properties(caf_mpi_static
-  PROPERTIES OUTPUT_NAME caf_mpi)
-get_target_property(libcaf_static caf_mpi_static OUTPUT_NAME)
+if (BUILD_STATIC_LIBS)
+  set_target_properties(caf_mpi_static
+    PROPERTIES OUTPUT_NAME caf_mpi)
+  get_target_property(libcaf_static caf_mpi_static OUTPUT_NAME)
+endif()
 set(CAF_LIBS
-  "${CMAKE_INSTALL_LIBDIR}/${CMAKE_STATIC_LIBRARY_PREFIX}${libcaf_static}${CMAKE_STATIC_LIBRARY_SUFFIX}")
+  "${CMAKE_INSTALL_LIBDIR}/${CMAKE_IMPORT_LIBRARY_PREFIX}caf_mpi${CMAKE_IMPORT_LIBRARY_SUFFIX}")
 
 configure_file("${CMAKE_SOURCE_DIR}/src/script-templates/caf.in" "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/caf"
   @ONLY)
--- origsrc/OpenCoarrays-2.10.1/src/tests/integration/pde_solvers/coarrayBurgers/CMakeLists.txt	2022-09-03 01:55:05.000000000 +0900
+++ src/OpenCoarrays-2.10.1/src/tests/integration/pde_solvers/coarrayBurgers/CMakeLists.txt	2022-12-22 11:54:49.352158000 +0900
@@ -27,5 +27,5 @@ add_executable(coarray_burgers_pde
   ${library_directory}/object_interface.F90
   ${library_directory}/co_object_interface.F90
 )
-add_dependencies(coarray_burgers_pde caf_mpi_static)
+add_dependencies(coarray_burgers_pde caf_mpi)
 target_include_directories(coarray_burgers_pde PRIVATE ${config_directory})
--- origsrc/OpenCoarrays-2.10.1/src/tests/integration/pde_solvers/coarrayHeatSimplified/CMakeLists.txt	2022-09-03 01:55:05.000000000 +0900
+++ src/OpenCoarrays-2.10.1/src/tests/integration/pde_solvers/coarrayHeatSimplified/CMakeLists.txt	2022-12-22 11:54:16.132077300 +0900
@@ -1,11 +1,11 @@
 set(CMAKE_Fortran_COMPILER "${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/caf")
 add_library(local_field OBJECT local_field.f90)
 add_library(global_field OBJECT global_field.f90)
-add_dependencies(local_field caf_mpi_static)
-add_dependencies(global_field local_field caf_mpi_static)
+add_dependencies(local_field caf_mpi)
+add_dependencies(global_field local_field caf_mpi)
 add_executable(co_heat
   main.f90
   $<TARGET_OBJECTS:local_field>
   $<TARGET_OBJECTS:global_field>
 )
-add_dependencies(co_heat caf_mpi_static)
+add_dependencies(co_heat caf_mpi)
