--- origsrc/oneDNN-3.0/CMakeLists.txt	2022-12-20 02:12:17.000000000 +0900
+++ src/oneDNN-3.0/CMakeLists.txt	2022-12-21 19:08:27.934201900 +0900
@@ -199,3 +199,10 @@ else()
     install(FILES THIRD-PARTY-PROGRAMS DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${DNNL_LIBRARY_NAME})
     install(FILES ${PROJECT_BINARY_DIR}/README DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${DNNL_LIBRARY_NAME})
 endif()
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/oneDNN.pc.in ${CMAKE_BINARY_DIR}/oneDNN.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/oneDNN.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/oneDNN-3.0/cmake/SDL.cmake	2022-12-20 02:12:17.000000000 +0900
+++ src/oneDNN-3.0/cmake/SDL.cmake	2022-12-21 17:51:39.682989500 +0900
@@ -82,7 +82,7 @@ if(UNIX)
     if(APPLE)
         append(CMAKE_SHARED_LINKER_FLAGS "-Wl,-bind_at_load")
         append(CMAKE_EXE_LINKER_FLAGS "-Wl,-bind_at_load")
-    else()
+    elseif(NOT CYGWIN)
         append(CMAKE_EXE_LINKER_FLAGS "-pie")
         append(CMAKE_SHARED_LINKER_FLAGS "-Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now")
         append(CMAKE_EXE_LINKER_FLAGS "-Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now")
--- origsrc/oneDNN-3.0/oneDNN.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/oneDNN-3.0/oneDNN.pc.in	2022-12-21 19:08:51.618794600 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: oneDNN
+Description: Deep Neural Network Library
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -ldnnl
+Cflags: -I${includedir}
--- origsrc/oneDNN-3.0/src/common/tag_traits.hpp	2022-12-20 02:12:17.000000000 +0900
+++ src/oneDNN-3.0/src/common/tag_traits.hpp	2022-12-21 14:14:39.931092700 +0900
@@ -22,6 +22,13 @@
 #include "c_types_map.hpp"
 #include "utils.hpp"
 
+#if defined(_B)
+#undef _B
+#endif
+#if defined(_C)
+#undef _C
+#endif
+
 namespace dnnl {
 namespace impl {
 
