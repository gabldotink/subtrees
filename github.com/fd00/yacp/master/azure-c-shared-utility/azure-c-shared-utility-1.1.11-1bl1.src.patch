--- origsrc/azure-c-shared-utility-1.1.11/CMakeLists.txt	2018-11-21 05:55:57.000000000 +0900
+++ src/azure-c-shared-utility-1.1.11/CMakeLists.txt	2019-01-11 13:40:49.925673400 +0900
@@ -422,6 +422,9 @@ if(${build_as_dynamic})
         ${def_files}
     )
     set_target_properties(aziotsharedutil_dll PROPERTIES OUTPUT_NAME "aziotsharedutil_dll")
+    if (CYGWIN)
+        set_target_properties(aziotsharedutil_dll PROPERTIES SOVERSION 0)
+    endif()
 endif()
 
 set(aziotsharedutil_target_libs)
@@ -578,7 +581,11 @@ if(${use_installed_dependencies})
     endif()
 
     # Install Azure C Shared Utility
-    set(package_location "cmake")
+    if (CYGWIN)
+        set(package_location "${CMAKE_INSTALL_LIBDIR}/cmake/azure-c-shared-utility")
+    else()
+        set(package_location "cmake")
+    endif()
 
     if(${build_as_dynamic})
         set(targets aziotsharedutil aziotsharedutil_dll)
@@ -587,7 +594,6 @@ if(${use_installed_dependencies})
     endif(${build_as_dynamic})
 
     install (TARGETS ${targets} EXPORT aziotsharedutilTargets
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
         ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
         RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR}/../bin
         INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/azureiot
--- origsrc/azure-c-shared-utility-1.1.11/adapters/socketio_berkeley.c	2018-11-21 05:55:57.000000000 +0900
+++ src/azure-c-shared-utility-1.1.11/adapters/socketio_berkeley.c	2019-01-11 13:53:39.494287500 +0900
@@ -597,11 +597,13 @@ static int set_target_network_interface(
             LogError("Did not find a network interface matching MAC ADDRESS");
             result = __FAILURE__;
         }
+#if defined(SO_BINDTODEVICE)
         else if (setsockopt(socket, SOL_SOCKET, SO_BINDTODEVICE, current_nid->name, strlen(current_nid->name)) != 0)
         {
             LogError("setsockopt failed (%d)", errno);
             result = __FAILURE__;
         }
+#endif
         else
         {
             result = 0;
@@ -1083,16 +1085,18 @@ int socketio_setoption(CONCRETE_IO_HANDL
         {
 #ifdef __APPLE__
             result = setsockopt(socket_io_instance->socket, IPPROTO_TCP, TCP_KEEPALIVE, value, sizeof(int));
-#else
+#elif defined(TCP_KEEPIDLE)
             result = setsockopt(socket_io_instance->socket, SOL_TCP, TCP_KEEPIDLE, value, sizeof(int));
 #endif
             if (result == -1) result = errno;
         }
+#if defined(TCP_KEEPINTVL)
         else if (strcmp(optionName, "tcp_keepalive_interval") == 0)
         {
             result = setsockopt(socket_io_instance->socket, SOL_TCP, TCP_KEEPINTVL, value, sizeof(int));
             if (result == -1) result = errno;
         }
+#endif
         else if (strcmp(optionName, OPTION_NET_INT_MAC_ADDRESS) == 0)
         {
 #ifdef __APPLE__
--- origsrc/azure-c-shared-utility-1.1.11/configs/azure_iot_build_rules.cmake	2018-11-21 05:55:57.000000000 +0900
+++ src/azure-c-shared-utility-1.1.11/configs/azure_iot_build_rules.cmake	2019-01-11 13:46:44.756976700 +0900
@@ -77,8 +77,10 @@ if(MSVC)
         set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4")
     endif()
 elseif(UNIX) #LINUX OR APPLE
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
+    if(NOT CYGWIN)
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
+        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
+    endif()
     if(NOT (IN_OPENWRT OR APPLE))
         set (CMAKE_C_FLAGS "-D_POSIX_C_SOURCE=200112L ${CMAKE_C_FLAGS}")
     endif()
@@ -206,8 +208,10 @@ IF((WIN32) AND (NOT(MINGW)))
     ENDIF()
 ELSE()
     # Make warning as error
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
+    if(NOT CYGWIN)
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
+        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
+    endif()
 ENDIF()
 
 
