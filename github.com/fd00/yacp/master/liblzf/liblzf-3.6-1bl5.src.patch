--- origsrc/liblzf-3.6/Makefile.am	1970-01-01 09:00:00.000000000 +0900
+++ src/liblzf-3.6/Makefile.am	2022-12-16 15:18:43.413950000 +0900
@@ -0,0 +1,17 @@
+bin_PROGRAMS = lzf
+lzf_LDADD = liblzf.la
+lzf_SOURCES = lzf.c
+
+check_PROGRAMS = bench
+bench_LDADD = liblzf.la
+bench_SOURCES = bench.c
+TESTS = $(check_PROGRAMS)
+
+include_HEADERS = lzf.h
+
+lib_LTLIBRARIES = liblzf.la
+liblzf_la_LDFLAGS = -no-undefined
+liblzf_la_SOURCES = lzf_c.c lzf_d.c
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = $(PACKAGE).pc
--- origsrc/liblzf-3.6/bench.c	2022-12-16 15:18:42.003954600 +0900
+++ src/liblzf-3.6/bench.c	2022-12-16 15:18:43.417958500 +0900
@@ -45,7 +45,9 @@ static void sigu (int signum)
 #define DSIZE 17318440
 //#define DSIZE 32768
 
+#if !defined(__CYGWIN__)
 #include "lzf_c_best.c"
+#endif
 
 unsigned char data[DSIZE], data2[DSIZE*2], data3[DSIZE*2];
 
@@ -86,7 +88,7 @@ int main(void)
       //struct timeval tv; gettimeofday (&tv, 0);
       //void *x = mmap (0, 16384, PROT_READ|PROT_WRITE, MAP_ANONYMOUS|MAP_PRIVATE,-1,0);
 
-      l = lzf_compress_best (data, DSIZE, data2, DSIZE*2);
+      l = lzf_compress (data, DSIZE, data2, DSIZE*2);
       //for (k = 0; k < l; ++k)
         //printf ("1 %2d: %02x\n", k, data2[k]);
       assert(l);
--- origsrc/liblzf-3.6/configure.ac	2007-11-30 19:33:44.000000000 +0900
+++ src/liblzf-3.6/configure.ac	2022-12-16 15:18:43.420954400 +0900
@@ -1,12 +1,13 @@
-AC_INIT
+AC_INIT([liblzf], [3.6])
 AC_CONFIG_SRCDIR([lzfP.h])
 
 AC_CONFIG_HEADER(config.h)
+AM_INIT_AUTOMAKE
 
 AC_GNU_SOURCE
 AC_SYS_LARGEFILE
 AC_PROG_CC
-AC_PROG_RANLIB
+LT_INIT
 AC_PROG_INSTALL
 AC_HEADER_STDC
 
@@ -21,5 +22,5 @@ else
    AC_MSG_RESULT(no gcc)
 fi
 
-AC_CONFIG_FILES([Makefile])
+AC_CONFIG_FILES([liblzf.pc Makefile])
 AC_OUTPUT
--- origsrc/liblzf-3.6/liblzf.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/liblzf-3.6/liblzf.pc.in	2022-12-16 15:18:43.423966600 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: liblzf
+Description: Very small data compression library
+Version: @VERSION@
+Libs: -L${libdir} -llzf
+Cflags: -I${includedir}
