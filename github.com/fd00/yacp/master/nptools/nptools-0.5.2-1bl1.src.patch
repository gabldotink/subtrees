diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/nptools-0.5.2/CMakeLists.txt src/nptools-0.5.2/CMakeLists.txt
--- origsrc/nptools-0.5.2/CMakeLists.txt	2018-05-02 06:59:16.000000000 +0900
+++ src/nptools-0.5.2/CMakeLists.txt	2018-05-21 07:15:25.903786700 +0900
@@ -21,10 +21,13 @@ message(STATUS "Configuring nptools vers
 find_package(Boost REQUIRED COMPONENTS system filesystem)
 find_package(ZLIB REQUIRED)
 
+find_package(PkgConfig)
+pkg_check_modules(NPA libnpa REQUIRED)
+
 # libunshield doesn't work in MSVC, not a big deal,
 # npinstall isn't needed on Windows anyway.
 if (NOT WIN32)
-	find_package(LIBUNSHIELD)
+	pkg_check_modules(LIBUNSHIELD libunshield REQUIRED)
 	if (NOT LIBUNSHIELD_FOUND)
 		message(FATAL_ERROR "Could not find libunshield")
 	endif()
@@ -35,13 +38,12 @@ set(CMAKE_BUILD_TYPE Debug)
 add_definitions(-std=c++11)
 
 include_directories(
-${CMAKE_SOURCE_DIR}/../libnpa/include
 ${CMAKE_SOURCE_DIR}/src
 ${Boost_INCLUDE_DIRS}
+${NPA_INCLUDE_DIRS}
 )
 link_directories(
 ${Boost_LIBRARY_DIRS}
-${CMAKE_SOURCE_DIR}/../libnpa/
 )
 
 add_executable(npaextract src/npaextract.cpp)
@@ -57,15 +59,24 @@ if (NOT WIN32)
 	add_executable(npinstall src/npinstall.cpp)
 endif()
 
-target_link_libraries(npaextract npa ${ZLIB_LIBRARIES})
-target_link_libraries(npapack ${Boost_LIBRARIES} npa)
-target_link_libraries(nsbparse npa)
-target_link_libraries(nsbcompile2 npa)
-target_link_libraries(nsbparse2 npa)
-target_link_libraries(npcrypt npa)
-target_link_libraries(npfparse npa)
+target_link_libraries(npaextract ${NPA_LIBRARIES} ${ZLIB_LIBRARIES})
+target_link_libraries(npapack ${Boost_LIBRARIES} ${NPA_LIBRARIES})
+target_link_libraries(nsbparse ${NPA_LIBRARIES})
+target_link_libraries(nsbcompile2 ${NPA_LIBRARIES})
+target_link_libraries(nsbparse2 ${NPA_LIBRARIES})
+target_link_libraries(npcrypt ${NPA_LIBRARIES})
+target_link_libraries(npfparse ${NPA_LIBRARIES})
+
+install(TARGETS npaextract DESTINATION bin)
+install(TARGETS npapack DESTINATION bin)
+install(TARGETS nsbparse DESTINATION bin)
+install(TARGETS nsbcompile2 DESTINATION bin)
+install(TARGETS nsbparse2 DESTINATION bin)
+install(TARGETS npcrypt DESTINATION bin)
+install(TARGETS npfparse DESTINATION bin)
 
 # We don't need npinstall on Windows
 if (NOT WIN32)
-	target_link_libraries(npinstall npa -lunshield)
+	target_link_libraries(npinstall ${NPA_LIBRARIES} ${LIBUNSHIELD_LIBRARIES})
+	install(TARGETS npinstall DESTINATION bin)
 endif()
