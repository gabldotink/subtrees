--- origsrc/libnabo-1.0.7/CMakeLists.txt	2019-02-08 14:31:26.000000000 +0900
+++ src/libnabo-1.0.7/CMakeLists.txt	2019-04-06 13:39:30.960441200 +0900
@@ -153,7 +153,7 @@ set(NABO_SRC
 set(SHARED_LIBS FALSE CACHE BOOL "Set to TRUE to build shared library")
 if (SHARED_LIBS)
 	add_library(${LIB_NAME} SHARED ${NABO_SRC})
-	install(TARGETS ${LIB_NAME} LIBRARY DESTINATION lib)
+	install(TARGETS ${LIB_NAME} RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
 else (SHARED_LIBS)
 	add_library(${LIB_NAME} ${NABO_SRC})
 	add_definitions(-fPIC)
@@ -166,9 +166,10 @@ set(DOC_INSTALL_TARGET "share/doc/${PROJ
 install(FILES nabo/nabo.h DESTINATION include/nabo)
 install(FILES nabo/third_party/any.hpp DESTINATION include/nabo/third_party)
 install(FILES README.md DESTINATION share/doc/${PROJECT_NAME})
-if (DOXYGEN_FOUND)
+option(ENABLE_DOC "Enable doc" OFF)
+if (ENABLE_DOC AND DOXYGEN_FOUND)
 	install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html DESTINATION ${DOC_INSTALL_TARGET})
-endif (DOXYGEN_FOUND)
+endif (ENABLE_DOC AND DOXYGEN_FOUND)
 
 enable_testing()
 
@@ -231,7 +232,7 @@ configure_file(libnaboConfigVersion.cmak
 install(FILES
 	"${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/libnaboConfig.cmake"
 	"${PROJECT_BINARY_DIR}/libnaboConfigVersion.cmake"
-	DESTINATION share/libnabo/cmake COMPONENT dev)
+	DESTINATION lib/cmake/libnabo COMPONENT dev)
 
 
 #=============================================
@@ -244,3 +245,10 @@ configure_file(
 
 add_custom_target(uninstall
 	COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/libnabo.pc.in ${CMAKE_BINARY_DIR}/libnabo.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/libnabo.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/libnabo-1.0.7/libnabo.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libnabo-1.0.7/libnabo.pc.in	2019-04-06 14:06:17.061711300 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libnabo
+Description: Fast K Nearset Neighbor library for low-dimensional spaces
+Version: @VERSION@
+Libs: -L${libdir} -lnabo
+Cflags: -I${includedir}
--- origsrc/libnabo-1.0.7/python/CMakeLists.txt	2019-02-08 14:31:26.000000000 +0900
+++ src/libnabo-1.0.7/python/CMakeLists.txt	2019-04-06 13:51:51.835464900 +0900
@@ -4,9 +4,9 @@
 # First, allow add the user-specified version of python to our build
 set(Python_ADDITIONAL_VERSIONS ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR})
 
-find_package(PythonInterp)
+find_package(PythonInterp 3)
 message("Python version from interpreter is ${PYTHON_VERSION_STRING}")
-find_package(PythonLibs)
+find_package(PythonLibs 3)
 
 # Helper function to search for a module
 function(find_python_module module)
@@ -63,7 +63,7 @@ if (PYTHONLIBS_FOUND AND PYTHONINTERP_FO
 		# fix for old python_add_module
 		set_target_properties(pynabo PROPERTIES PREFIX "")
 		if (PYTHON_CUSTOM_TARGET)
-			install(TARGETS pynabo LIBRARY DESTINATION ${PYTHON_CUSTOM_TARGET})
+			install(TARGETS pynabo RUNTIME DESTINATION ${PYTHON_CUSTOM_TARGET})
 		else (PYTHON_CUSTOM_TARGET)
 			if (PYTHON_DEB_INSTALL_TARGET)
 				set(PYTHON_COMMAND "import sys; print('/usr/lib/python'+str(sys.version_info[0])+'.'+str(sys.version_info[1])+'/dist-packages')")
@@ -71,7 +71,7 @@ if (PYTHONLIBS_FOUND AND PYTHONINTERP_FO
 				set(PYTHON_COMMAND "from distutils.sysconfig import get_python_lib; print(get_python_lib(prefix='${CMAKE_INSTALL_PREFIX}'))")
 			endif (PYTHON_DEB_INSTALL_TARGET)
 			execute_process(COMMAND "${PYTHON_EXECUTABLE}" "-c" "${PYTHON_COMMAND}" OUTPUT_VARIABLE PYTHON_SITE_MODULES OUTPUT_STRIP_TRAILING_WHITESPACE)
-			install(TARGETS pynabo LIBRARY DESTINATION ${PYTHON_SITE_MODULES})
+			install(TARGETS pynabo RUNTIME DESTINATION ${PYTHON_SITE_MODULES})
 		endif (PYTHON_CUSTOM_TARGET)
 	elseif (Boost_FOUND AND NUMPY_FOUND)
 		message("You need numpy and boost::python to generate python bindings")
