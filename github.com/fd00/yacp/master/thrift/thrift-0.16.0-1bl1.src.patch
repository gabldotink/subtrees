--- origsrc/thrift-0.16.0/build/cmake/ConfigureChecks.cmake	2022-01-21 04:36:56.000000000 +0900
+++ src/thrift-0.16.0/build/cmake/ConfigureChecks.cmake	2022-07-22 13:09:11.842920700 +0900
@@ -58,11 +58,15 @@ check_include_file(strings.h HAVE_STRING
 # Check for afunix.h on Windows (since Windows 10 Insider Build 17063):
 check_cxx_source_compiles(
   "
+  #if defined(__CYGWIN__)
+  #error \"afunix.h should not be used on cygwin\"
+  #else
   #define WIN32_LEAN_AND_MEAN
   #include <winsock2.h>
   #include <windows.h>
   #include <afunix.h>
   int main(){(void)sizeof(((struct sockaddr_un *)0)->sun_path); return 0;}
+  #endif
   "
   HAVE_AF_UNIX_H)
 
--- origsrc/thrift-0.16.0/build/cmake/ThriftMacros.cmake	2022-01-21 04:36:56.000000000 +0900
+++ src/thrift-0.16.0/build/cmake/ThriftMacros.cmake	2022-07-22 14:11:52.203790800 +0900
@@ -29,6 +29,9 @@ macro(ADD_LIBRARY_THRIFT name)
     set_target_properties(${name} PROPERTIES
         OUTPUT_NAME ${name}${THRIFT_RUNTIME_POSTFIX}   # windows link variants (/MT, /MD, /MTd, /MDd) get different names
         VERSION ${thrift_VERSION})
+    if (DEFINED SOVERSION)
+        set_target_properties(${name} PROPERTIES SOVERSION ${SOVERSION})
+    endif()
 
     # set_target_properties(${name} PROPERTIES PUBLIC_HEADER "${thriftcpp_HEADERS}")
     install(TARGETS ${name} EXPORT "${name}Targets"
--- origsrc/thrift-0.16.0/configure.ac	2022-02-03 06:00:14.000000000 +0900
+++ src/thrift-0.16.0/configure.ac	2022-07-22 14:26:06.238874900 +0900
@@ -139,11 +139,11 @@ if test "$with_cpp" = "yes";  then
   AX_BOOST_BASE([1.56.0])
   if test "x$succeeded" = "xyes" ; then
     AC_SUBST([BOOST_LIB_DIR], [$(echo "$BOOST_LDFLAGS" | sed -e 's/^\-L//')])
-    AC_SUBST([BOOST_CHRONO_LDADD], [$(echo "$BOOST_LIB_DIR/libboost_chrono.a")])
-    AC_SUBST([BOOST_FILESYSTEM_LDADD], [$(echo "$BOOST_LIB_DIR/libboost_filesystem.a")])
-    AC_SUBST([BOOST_SYSTEM_LDADD], [$(echo "$BOOST_LIB_DIR/libboost_system.a")])
-    AC_SUBST([BOOST_TEST_LDADD], [$(echo "$BOOST_LIB_DIR/libboost_unit_test_framework.a")])
-    AC_SUBST([BOOST_THREAD_LDADD], [$(echo "$BOOST_LIB_DIR/libboost_thread.a")])
+    AC_SUBST([BOOST_CHRONO_LDADD], [-lboost_chrono])
+    AC_SUBST([BOOST_FILESYSTEM_LDADD], [-lboost_filesystem])
+    AC_SUBST([BOOST_SYSTEM_LDADD], [-lboost_system])
+    AC_SUBST([BOOST_TEST_LDADD], [-lboost_unit_test_framework])
+    AC_SUBST([BOOST_THREAD_LDADD], [-lboost_thread])
     have_cpp="yes"
   fi
 
@@ -319,16 +319,16 @@ if test "$with_php" = "yes"; then
 fi
 AM_CONDITIONAL(WITH_PHP, [test "$have_php" = "yes"])
 
-AX_THRIFT_LIB(php_extension, [PHP_EXTENSION], yes)
-if test "$with_php_extension" = "yes"; then
-  if test -f "lib/php/src/ext/thrift_protocol/configure"; then
-    AC_PATH_PROG([PHP_CONFIG], [php-config])
-    if test -n "$PHP_CONFIG" ; then
-      AC_CONFIG_SUBDIRS([lib/php/src/ext/thrift_protocol])
-      have_php_extension="yes"
-    fi
-  fi
-fi
+#AX_THRIFT_LIB(php_extension, [PHP_EXTENSION], yes)
+#if test "$with_php_extension" = "yes"; then
+#  if test -f "lib/php/src/ext/thrift_protocol/configure"; then
+#    AC_PATH_PROG([PHP_CONFIG], [php-config])
+#    if test -n "$PHP_CONFIG" ; then
+#      AC_CONFIG_SUBDIRS([lib/php/src/ext/thrift_protocol])
+#      have_php_extension="yes"
+#    fi
+#  fi
+#fi
 AM_CONDITIONAL(WITH_PHP_EXTENSION, [test "$have_php_extension" = "yes"])
 
 AX_THRIFT_LIB(dart, [DART], yes)
--- origsrc/thrift-0.16.0/lib/c_glib/Makefile.am	2021-08-04 05:11:21.000000000 +0900
+++ src/thrift-0.16.0/lib/c_glib/Makefile.am	2022-07-22 14:26:57.010690800 +0900
@@ -24,7 +24,7 @@ pkgconfigdir = $(libdir)/pkgconfig
 lib_LTLIBRARIES = libthrift_c_glib.la
 pkgconfig_DATA = thrift_c_glib.pc
 
-AM_CPPFLAGS = -Isrc -I src/thrift/c_glib
+AM_CPPFLAGS = -Isrc -I$(srcdir)/src -Isrc/thrift/c_glib
 AM_CFLAGS = -Wall -Wextra -pedantic
 
 # Define the source files for the module
@@ -63,7 +63,7 @@ libthrift_c_glib_la_SOURCES = src/thrift
                               src/thrift/c_glib/server/thrift_simple_server.c
 
 libthrift_c_glib_la_CFLAGS = $(AM_CFLAGS) $(GLIB_CFLAGS) $(GOBJECT_CFLAGS) $(OPENSSL_INCLUDES) -I$(top_builddir)/lib/c_glib/src/thrift
-libthrift_c_glib_la_LDFLAGS = $(AM_LDFLAGS) $(GLIB_LIBS) $(GOBJECT_LIBS)  $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS)
+libthrift_c_glib_la_LDFLAGS = -no-undefined $(AM_LDFLAGS) $(GLIB_LIBS) $(GOBJECT_LIBS)  $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS)
 
 include_thriftdir = $(includedir)/thrift/c_glib
 include_thrift_HEADERS = \
--- origsrc/thrift-0.16.0/lib/cpp/Makefile.am	2021-08-04 05:11:21.000000000 +0900
+++ src/thrift-0.16.0/lib/cpp/Makefile.am	2022-07-22 14:28:20.476929500 +0900
@@ -32,7 +32,7 @@ pkgconfigdir = $(libdir)/pkgconfig
 
 lib_LTLIBRARIES = libthrift.la
 pkgconfig_DATA = thrift.pc
-libthrift_la_LDFLAGS = -release $(VERSION)
+libthrift_la_LDFLAGS = -no-undefined -release $(VERSION)
 libthrift_la_LIBADD = $(BOOST_LDFLAGS) $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS)
 
 ## We only build the extra libraries if we have the dependencies,
@@ -51,7 +51,7 @@ pkgconfig_DATA += thrift-qt5.pc
 endif
 
 AM_CXXFLAGS = -Wall -Wextra -pedantic
-AM_CPPFLAGS = $(BOOST_CPPFLAGS) $(OPENSSL_INCLUDES) -I$(srcdir)/src -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
+AM_CPPFLAGS = -I$(builddir)/src $(BOOST_CPPFLAGS) $(OPENSSL_INCLUDES) -I$(srcdir)/src -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
 
 # Define the source files for the module
 
@@ -126,9 +126,12 @@ endif
 libthriftnb_la_CXXFLAGS = $(AM_CXXFLAGS)
 libthriftz_la_CXXFLAGS  = $(AM_CXXFLAGS)
 libthriftqt5_la_CXXFLAGS  = $(AM_CXXFLAGS)
-libthriftnb_la_LDFLAGS  = -release $(VERSION) $(BOOST_LDFLAGS)
-libthriftz_la_LDFLAGS   = -release $(VERSION) $(BOOST_LDFLAGS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS)
-libthriftqt5_la_LDFLAGS   = -release $(VERSION) $(BOOST_LDFLAGS) $(QT5_LIBS)
+libthriftnb_la_LDFLAGS  = -no-undefined -release $(VERSION) $(BOOST_LDFLAGS)
+libthriftz_la_LDFLAGS   = -no-undefined -release $(VERSION) $(BOOST_LDFLAGS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS)
+libthriftqt5_la_LDFLAGS   = -no-undefined -release $(VERSION) $(BOOST_LDFLAGS) $(QT5_LIBS)
+libthriftnb_la_LIBADD = libthrift.la $(LIBEVENT_LIBS)
+libthriftz_la_LIBADD = libthrift.la
+libthriftqt5_la_LIBADD = libthrift.la
 
 include_thriftdir = $(includedir)/thrift
 include_thrift_HEADERS = \
--- origsrc/thrift-0.16.0/lib/cpp/test/Makefile.am	2021-06-18 07:45:42.000000000 +0900
+++ src/thrift-0.16.0/lib/cpp/test/Makefile.am	2022-07-22 14:59:55.582593000 +0900
@@ -417,7 +417,7 @@ gen-cpp/OneWayService.cpp gen-cpp/OneWay
 gen-cpp/ChildService.cpp gen-cpp/ChildService.h gen-cpp/ParentService.cpp gen-cpp/ParentService.h gen-cpp/proc_types.cpp gen-cpp/proc_types.h: processor/proc.thrift
 	$(THRIFT) --gen cpp:templates,cob_style $<
 
-AM_CPPFLAGS = $(BOOST_CPPFLAGS) -I$(top_srcdir)/lib/cpp/src -I$(top_srcdir)/lib/cpp/src/thrift -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I.
+AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/lib/cpp/src $(BOOST_CPPFLAGS) -I$(top_srcdir)/lib/cpp/src -I$(top_srcdir)/lib/cpp/src/thrift -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I.
 AM_LDFLAGS = $(BOOST_LDFLAGS)
 AM_CXXFLAGS = -Wall -Wextra -pedantic
 
--- origsrc/thrift-0.16.0/lib/lua/Makefile.am	2021-06-18 07:45:42.000000000 +0900
+++ src/thrift-0.16.0/lib/lua/Makefile.am	2022-07-22 14:29:39.176914400 +0900
@@ -21,6 +21,8 @@ AUTOMAKE_OPTIONS = subdir-objects nostdi
 
 SUBDIRS = .
 
+AM_LDFLAGS = -no-undefined
+
 lib_LTLIBRARIES = \
 			libluasocket.la \
 			liblualongnumber.la \
@@ -31,7 +33,8 @@ libluasocket_la_SOURCES = \
 			src/luasocket.c \
 			src/usocket.c
 
-nobase_include_HEADERS = src/socket.h
+thriftluaincludedir = $(includedir)/thrift/lua
+thriftluainclude_HEADERS = src/socket.h
 
 libluasocket_la_CPPFLAGS = $(AM_CPPFLAGS) $(LUA_INCLUDE) -DLUA_COMPAT_MODULE
 libluasocket_la_LDFLAGS = $(AM_LDFLAGS)
--- origsrc/thrift-0.16.0/test/cpp/Makefile.am	2021-06-18 07:45:42.000000000 +0900
+++ src/thrift-0.16.0/test/cpp/Makefile.am	2022-07-22 14:30:09.525666200 +0900
@@ -106,7 +106,7 @@ gen-cpp/Service.cpp: $(top_srcdir)/test/
 gen-cpp/SpecificNameTest_types.cpp gen-cpp/EchoService.cpp: $(top_srcdir)/test/SpecificName.thrift $(THRIFT)
 	$(THRIFT) --gen cpp $<
 
-AM_CPPFLAGS = $(BOOST_CPPFLAGS) $(LIBEVENT_CPPFLAGS) -I$(top_srcdir)/lib/cpp/src -Igen-cpp -I.
+AM_CPPFLAGS = -I$(top_builddir)/lib/cpp/src $(BOOST_CPPFLAGS) $(LIBEVENT_CPPFLAGS) -I$(top_srcdir)/lib/cpp/src -Igen-cpp -I.
 AM_CXXFLAGS = -Wall -Wextra -pedantic -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
 AM_LDFLAGS = $(BOOST_LDFLAGS) $(LIBEVENT_LDFLAGS) $(ZLIB_LIBS)
 
--- origsrc/thrift-0.16.0/tutorial/c_glib/Makefile.am	2021-06-18 07:45:43.000000000 +0900
+++ src/thrift-0.16.0/tutorial/c_glib/Makefile.am	2022-07-22 14:30:32.003595500 +0900
@@ -25,7 +25,7 @@ BUILT_SOURCES = \
 	gen-c_glib/tutorial_types.h
 
 AM_CFLAGS = -g -Wall -Wextra -pedantic $(GLIB_CFLAGS) $(GOBJECT_CFLAGS) $(OPENSSL_INCLUDES) @GCOV_CFLAGS@ -I$(top_builddir)/lib/c_glib/src/thrift
-AM_CPPFLAGS = -I$(top_srcdir)/lib/c_glib/src -Igen-c_glib
+AM_CPPFLAGS = -I$(top_builddir)/tutorial/c_glib -I$(top_srcdir)/lib/c_glib/src -Igen-c_glib
 AM_LDFLAGS = $(GLIB_LIBS) $(GOBJECT_LIBS) $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS) @GCOV_LDFLAGS@
 
 noinst_LTLIBRARIES = \
--- origsrc/thrift-0.16.0/tutorial/cpp/Makefile.am	2021-06-18 07:45:43.000000000 +0900
+++ src/thrift-0.16.0/tutorial/cpp/Makefile.am	2022-07-22 14:30:55.349462300 +0900
@@ -62,7 +62,7 @@ TutorialClient_LDADD = \
 gen-cpp/Calculator.cpp gen-cpp/SharedService.cpp gen-cpp/shared_types.cpp gen-cpp/tutorial_constants.cpp gen-cpp/tutorial_types.cpp: $(top_srcdir)/tutorial/tutorial.thrift
 	$(THRIFT) --gen cpp -r $<
 
-AM_CPPFLAGS = $(BOOST_CPPFLAGS) $(LIBEVENT_CPPFLAGS) -I$(top_srcdir)/lib/cpp/src -Igen-cpp
+AM_CPPFLAGS = -I$(top_builddir)/lib/cpp/src $(BOOST_CPPFLAGS) $(LIBEVENT_CPPFLAGS) -I$(top_srcdir)/lib/cpp/src -Igen-cpp
 AM_CXXFLAGS = -Wall -Wextra -pedantic
 AM_LDFLAGS = $(BOOST_LDFLAGS) $(LIBEVENT_LDFLAGS)
 
