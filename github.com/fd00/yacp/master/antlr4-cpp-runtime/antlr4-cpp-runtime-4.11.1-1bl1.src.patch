--- origsrc/antlr4-cpp-runtime-4.11.1/CMakeLists.txt	2022-09-04 11:33:54.000000000 +0900
+++ src/antlr4-cpp-runtime-4.11.1/CMakeLists.txt	2022-09-20 22:17:39.844517300 +0900
@@ -220,16 +220,18 @@ if (ANTLR4_INSTALL)
 
 endif(ANTLR4_INSTALL)
 
-if(EXISTS LICENSE.txt)
-install(FILES LICENSE.txt
-        DESTINATION "share/doc/libantlr4")
-elseif(EXISTS ../../LICENSE.txt)
-install(FILES ../../LICENSE.txt
-    DESTINATION "share/doc/libantlr4")
-endif()
+if (NOT CYGWIN)
+  if(EXISTS LICENSE.txt)
+  install(FILES LICENSE.txt
+          DESTINATION "share/doc/libantlr4")
+  elseif(EXISTS ../../LICENSE.txt)
+  install(FILES ../../LICENSE.txt
+      DESTINATION "share/doc/libantlr4")
+  endif()
 
-install(FILES README.md VERSION
-    DESTINATION "share/doc/libantlr4")
+  install(FILES README.md VERSION
+      DESTINATION "share/doc/libantlr4")
+endif()
 
 set(CPACK_PACKAGE_CONTACT "antlr-discussion@googlegroups.com")
 set(CPACK_PACKAGE_VERSION ${ANTLR_VERSION})
--- origsrc/antlr4-cpp-runtime-4.11.1/runtime/CMakeLists.txt	2022-09-04 11:33:54.000000000 +0900
+++ src/antlr4-cpp-runtime-4.11.1/runtime/CMakeLists.txt	2022-09-20 22:15:25.963059100 +0900
@@ -26,28 +26,37 @@ file(GLOB libantlrcpp_SRC
 )
 
 add_library(antlr4_shared SHARED ${libantlrcpp_SRC})
-add_library(antlr4_static STATIC ${libantlrcpp_SRC})
+if (BUILD_STATIC_LIBS)
+  add_library(antlr4_static STATIC ${libantlrcpp_SRC})
+endif()
 
 # Make sure to link against threads (pthreads) library in order to be able to
 # make use of std::call_once in the code without producing runtime errors
 # (see also https://github.com/antlr/antlr4/issues/3708 and/or https://stackoverflow.com/q/51584960).
 find_package(Threads REQUIRED)
 target_link_libraries(antlr4_shared Threads::Threads)
-target_link_libraries(antlr4_static Threads::Threads)
+if (BUILD_STATIC_LIBS)
+  target_link_libraries(antlr4_static Threads::Threads)
+endif()
 
 if (ANTLR_BUILD_CPP_TESTS)
-  include(FetchContent)
-
-  FetchContent_Declare(
-    googletest
-    URL https://github.com/google/googletest/archive/e2239ee6043f73722e7aa812a459f54a28552929.zip
-  )
+  find_package(gtest)
+  if (NOT GTEST_FOUND)
+    include(FetchContent)
+
+    FetchContent_Declare(
+      googletest
+      URL https://github.com/google/googletest/archive/e2239ee6043f73722e7aa812a459f54a28552929.zip
+    )
+  endif()
 
   if(WITH_STATIC_CRT)
     set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
   endif()
 
-  FetchContent_MakeAvailable(googletest)
+  if (NOT GTEST_FOUND)
+    FetchContent_MakeAvailable(googletest)
+  endif()
 
   file(GLOB libantlrcpp_TESTS
     "${PROJECT_SOURCE_DIR}/runtime/tests/*.cpp"
@@ -60,7 +69,8 @@ if (ANTLR_BUILD_CPP_TESTS)
 
   target_link_libraries(
     antlr4_tests
-    antlr4_static
+    antlr4_shared
+    gtest
     gtest_main
   )
 
@@ -71,7 +81,9 @@ endif()
 
 if(APPLE)
   target_link_libraries(antlr4_shared ${COREFOUNDATION_LIBRARY})
-  target_link_libraries(antlr4_static ${COREFOUNDATION_LIBRARY})
+  if (BUILD_STATIC_LIBS)
+    target_link_libraries(antlr4_static ${COREFOUNDATION_LIBRARY})
+  endif()
 endif()
 
 if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
@@ -107,12 +119,14 @@ set_target_properties(antlr4_shared
                                  OUTPUT_NAME antlr4-runtime
                                  COMPILE_FLAGS "${disabled_compile_warnings} ${extra_share_compile_flags}")
 
-set_target_properties(antlr4_static
-                      PROPERTIES VERSION   ${ANTLR_VERSION}
-                                 SOVERSION ${ANTLR_VERSION}
-                                 OUTPUT_NAME "antlr4-runtime${static_lib_suffix}"
-                                 COMPILE_PDB_NAME "antlr4-runtime${static_lib_suffix}"
-                                 COMPILE_FLAGS "${disabled_compile_warnings} ${extra_static_compile_flags}")
+if (BUILD_STATIC_LIBS)
+  set_target_properties(antlr4_static
+                        PROPERTIES VERSION   ${ANTLR_VERSION}
+                                  SOVERSION ${ANTLR_VERSION}
+                                  OUTPUT_NAME "antlr4-runtime${static_lib_suffix}"
+                                  COMPILE_PDB_NAME "antlr4-runtime${static_lib_suffix}"
+                                  COMPILE_FLAGS "${disabled_compile_warnings} ${extra_static_compile_flags}")
+endif()
 
 if (ANTLR_BUILD_CPP_TESTS)
   # Copy the generated binaries to dist folder (required by test suite)
@@ -123,11 +137,13 @@ if (ANTLR_BUILD_CPP_TESTS)
     COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE:antlr4_shared> ${CMAKE_HOME_DIRECTORY}/dist
     COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_LINKER_FILE:antlr4_shared> ${CMAKE_HOME_DIRECTORY}/dist)
   
-  add_custom_command(
-    TARGET antlr4_static
-    POST_BUILD
-    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_HOME_DIRECTORY}/dist
-    COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE:antlr4_static> ${CMAKE_HOME_DIRECTORY}/dist)
+  if (BUILD_STATIC_LIBS)
+    add_custom_command(
+      TARGET antlr4_static
+      POST_BUILD
+      COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_HOME_DIRECTORY}/dist
+      COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE:antlr4_static> ${CMAKE_HOME_DIRECTORY}/dist)
+  endif()
 endif()
 
 install(TARGETS antlr4_shared
@@ -136,11 +152,13 @@ install(TARGETS antlr4_shared
         LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
         RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
 
-install(TARGETS antlr4_static
-        EXPORT antlr4-targets
-        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+if (BUILD_STATIC_LIBS)
+  install(TARGETS antlr4_static
+          EXPORT antlr4-targets
+          ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+          LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+          RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+endif()
 
 install(DIRECTORY "${PROJECT_SOURCE_DIR}/runtime/src/"
         DESTINATION "include/antlr4-runtime"
