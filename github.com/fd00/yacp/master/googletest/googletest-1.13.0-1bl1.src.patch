--- origsrc/googletest-1.13.0/googlemock/CMakeLists.txt	2023-01-18 03:36:43.000000000 +0900
+++ src/googletest-1.13.0/googlemock/CMakeLists.txt	2023-01-20 11:42:12.326374900 +0900
@@ -97,9 +97,15 @@ else()
   cxx_library(gmock "${cxx_strict}" src/gmock-all.cc)
   target_link_libraries(gmock PUBLIC gtest)
   set_target_properties(gmock PROPERTIES VERSION ${GOOGLETEST_VERSION})
+  if (DEFINED SOVERSION)
+    set_target_properties(gmock PROPERTIES SOVERSION ${SOVERSION})
+  endif()
   cxx_library(gmock_main "${cxx_strict}" src/gmock_main.cc)
   target_link_libraries(gmock_main PUBLIC gmock)
   set_target_properties(gmock_main PROPERTIES VERSION ${GOOGLETEST_VERSION})
+  if (DEFINED SOVERSION)
+    set_target_properties(gmock_main PROPERTIES SOVERSION ${SOVERSION})
+  endif()
 endif()
 # If the CMake version supports it, attach header directory information
 # to the targets for when we are part of a parent build (ie being pulled
--- origsrc/googletest-1.13.0/googletest/CMakeLists.txt	2023-01-18 03:36:43.000000000 +0900
+++ src/googletest-1.13.0/googletest/CMakeLists.txt	2023-01-20 11:41:20.238704600 +0900
@@ -125,6 +125,9 @@ include_directories(${gtest_build_includ
 # aggressive about warnings.
 cxx_library(gtest "${cxx_strict}" src/gtest-all.cc)
 set_target_properties(gtest PROPERTIES VERSION ${GOOGLETEST_VERSION})
+if (DEFINED SOVERSION)
+  set_target_properties(gtest PROPERTIES SOVERSION ${SOVERSION})
+endif()
 if(GTEST_HAS_ABSL)
   target_compile_definitions(gtest PUBLIC GTEST_HAS_ABSL=1)
   target_link_libraries(gtest PUBLIC
@@ -143,6 +146,9 @@ if(GTEST_HAS_ABSL)
 endif()
 cxx_library(gtest_main "${cxx_strict}" src/gtest_main.cc)
 set_target_properties(gtest_main PROPERTIES VERSION ${GOOGLETEST_VERSION})
+if (DEFINED SOVERSION)
+  set_target_properties(gtest_main PROPERTIES SOVERSION ${SOVERSION})
+endif()
 # If the CMake version supports it, attach header directory information
 # to the targets for when we are part of a parent build (ie being pulled
 # in via add_subdirectory() rather than being a standalone build).
