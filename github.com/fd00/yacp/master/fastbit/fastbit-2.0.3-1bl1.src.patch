--- origsrc/fastbit-2.0.3/Makefile.am	2014-10-24 15:39:49.000000000 +0900
+++ src/fastbit-2.0.3/Makefile.am	2019-05-31 15:44:26.783429500 +0900
@@ -43,3 +43,6 @@ maintainer-clean: maintainer-clean-am
 #	-rm -rf `find $(distdir) \( -name CVS -o \name .svn \)`
 
 .PHONY: docs more-check full-check
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = $(PACKAGE).pc
--- origsrc/fastbit-2.0.3/configure.ac	2016-02-29 16:09:20.000000000 +0900
+++ src/fastbit-2.0.3/configure.ac	2019-05-31 15:45:17.609989700 +0900
@@ -597,13 +597,13 @@ CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
 CXXFLAGS="$CXXFLAGS $PTHREAD_CFLAGS"
 
 AC_MSG_CHECKING([whether necessary to undefine __STRICT_ANSI__ for use of popen/pclose])
-if AC_TRY_COMMAND($CXX $CXXFLAGS -DFASTBIT_RMDIR_USE_RM -DWITHOUT_FASTBIT_CONFIG_H -c src/util.cpp) && test -s util.o; then
+if AC_TRY_COMMAND($CXX $CXXFLAGS -DFASTBIT_RMDIR_USE_RM -DWITHOUT_FASTBIT_CONFIG_H -c ${srcdir}/src/util.cpp) && test -s util.o; then
   AC_MSG_RESULT([no])
 else
   CXXCPP="$CXXCPP -U__STRICT_ANSI__ -DHAVE_STRUCT_TIMESPEC"
   CXXFLAGS="$CXXFLAGS -U__STRICT_ANSI__ -DHAVE_STRUCT_TIMESPEC"
   EXTRA_CXXFLAGS="$EXTRA_CXXFLAGS -U__STRICT_ANSI__ -DHAVE_STRUCT_TIMESPEC"
-  if AC_TRY_COMMAND($CXX $CXXFLAGS -DFASTBIT_RMDIR_USE_RM -DWITHOUT_FASTBIT_CONFIG_H -c src/util.cpp) && test -s util.o; then
+  if AC_TRY_COMMAND($CXX $CXXFLAGS -DFASTBIT_RMDIR_USE_RM -DWITHOUT_FASTBIT_CONFIG_H -c ${srcdir}/src/util.cpp) && test -s util.o; then
     AC_MSG_RESULT([undefining __STRICT_ANSI__ works])
   else
     AC_MSG_ERROR([undefining __STRICT_ANSI__ did not work, src/util.cpp can not be compiled with $CXX $CXXFLAGS -DFASTBIT_RMDIR_USE_RM -DWITHOUT_FASTBIT_CONFIG_H -c src/util.cpp])
@@ -930,7 +930,7 @@ AC_SUBST(CFLAGS)
 AC_SUBST(OBJDIR)
 #end stuff not generated by autoscan
 
-AC_CONFIG_FILES([Makefile src/Makefile examples/Makefile tests/Makefile
+AC_CONFIG_FILES([fastbit.pc Makefile src/Makefile examples/Makefile tests/Makefile
 	         java/Makefile contrib/Makefile contrib/fbmerge/Makefile])
 AC_CONFIG_FILES([tests/scripts/fastbit-config],
 		[chmod a+x tests/scripts/fastbit-config])
--- origsrc/fastbit-2.0.3/contrib/fbmerge/Makefile.am	2014-01-07 21:38:23.000000000 +0900
+++ src/fastbit-2.0.3/contrib/fbmerge/Makefile.am	2019-05-31 15:39:09.608461700 +0900
@@ -1,3 +1,4 @@
+AM_CPPFLAGS = -I$(top_srcdir)/src
 AUTOMAKE_OPTIONS=gnu
 EXTRA_DIST = fbmerge.sln fbmerge.vcproj
 
--- origsrc/fastbit-2.0.3/examples/Makefile.am	2014-02-20 04:36:42.000000000 +0900
+++ src/fastbit-2.0.3/examples/Makefile.am	2019-05-31 15:37:32.915019300 +0900
@@ -1,3 +1,4 @@
+AM_CPPFLAGS = -I$(top_srcdir)/src
 AUTOMAKE_OPTIONS=gnu
 bin_PROGRAMS = ibis tcapi thula ardea rara tiapi
 #EXTRA_PROGRAMS =
--- origsrc/fastbit-2.0.3/fastbit.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/fastbit-2.0.3/fastbit.pc.in	2019-05-31 16:20:17.455458400 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: fastbit
+Description: Minimalistic data warehousing engine designed to test ideas on bitmap indexes
+Version: @VERSION@
+Libs: -L${libdir} -lfastbit
+Cflags: -I${includedir}
--- origsrc/fastbit-2.0.3/src/Makefile.am	2015-01-05 14:36:27.000000000 +0900
+++ src/fastbit-2.0.3/src/Makefile.am	2019-05-31 15:34:38.308613100 +0900
@@ -13,7 +13,7 @@ libfastbit_la_SOURCES = part.cpp bordm.c
  imesa.cpp ikeywords.cpp selectClause.cpp dictionary.cpp whereClause.cpp \
  idbak.cpp icmoins.cpp resource.cpp fromClause.cpp rids.cpp selectParser.cc \
  fromLexer.cc whereParser.cc selectLexer.cc whereLexer.cc fromParser.cc
-libfastbit_la_LDFLAGS = -version-info $(LIB_VERSION_INFO)
+libfastbit_la_LDFLAGS = -no-undefined -version-info $(LIB_VERSION_INFO)
 
 pkginclude_HEADERS = array_t.h bitvector.h bitvector64.h blob.h bord.h bundle.h capi.h category.h colValues.h column.h const.h countQuery.h dictionary.h fileManager.h horometer.h iapi.h ibin.h ibis.h idirekte.h ikeywords.h index.h irelic.h iroster.h quaere.h mensa.h meshQuery.h part.h filter.h jnatural.h jrange.h whereClause.h whereLexer.h whereParser.hh qExpr.h query.h resource.h rids.h tab.h table.h tafel.h twister.h util.h utilidor.h location.hh position.hh stack.hh selectClause.h selectLexer.h selectParser.hh fromClause.h fromLexer.h fromParser.hh fastbit-config.h
 
@@ -46,19 +46,19 @@ whereParser.cc: whereParser.hh
 whereParser.hh: whereParser.yy
 	bison -d -o whereParser.cc whereParser.yy
 whereLexer.cc: whereLexer.ll whereParser.hh
-	flex -o whereLexer.cc whereLexer.ll
+	flex -o whereLexer.cc $(srcdir)/whereLexer.ll
 selectParser.cc: selectParser.hh
 	touch selectParser.cc
 selectParser.hh: selectParser.yy
 	bison -d -o selectParser.cc selectParser.yy
 selectLexer.cc: selectLexer.ll selectParser.hh
-	flex -o selectLexer.cc selectLexer.ll
+	flex -o selectLexer.cc $(srcdir)/selectLexer.ll
 fromParser.cc: fromParser.hh
 	touch fromParser.cc
 fromParser.hh: fromParser.yy
 	bison -d -o fromParser.cc fromParser.yy
 fromLexer.cc: fromLexer.ll fromParser.hh
-	flex -o fromLexer.cc fromLexer.ll
+	flex -o fromLexer.cc $(srcdir)/fromLexer.ll
 endif
 
 # targets that are not files
--- origsrc/fastbit-2.0.3/src/const.h	2016-01-27 14:37:58.000000000 +0900
+++ src/fastbit-2.0.3/src/const.h	2019-05-31 14:33:43.632356100 +0900
@@ -165,10 +165,6 @@
 
 #elif defined(__unix__) || defined(__HOS_AIX__)
 #  include <limits.h>	// PATH_MAX, OPEN_MAX
-#  ifdef __CYGWIN__ // cygwin port of gcc compiler
-//commented out 2005/04/12 #  define __INSIDE_CYGWIN__
-#    include <cygwin/types.h>
-#  endif
 
 #elif defined(_WIN32)
 // don't need too many things from Windows header files
