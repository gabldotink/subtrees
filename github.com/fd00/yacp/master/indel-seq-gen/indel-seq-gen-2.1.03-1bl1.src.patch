--- origsrc/indel-seq-gen-2.1.03/src/main.cpp	2011-03-31 05:51:46.000000000 +0900
+++ src/indel-seq-gen-2.1.03/src/main.cpp	2019-11-27 18:29:06.089151500 +0900
@@ -17,7 +17,7 @@
 #include <cstdio>
 #include <cstdlib>
 #include <stdlib.h>
-#include <stdio.h>
+#include <unistd.h>
 #include <ctime>
 #include <iostream>
 #include <limits>
--- origsrc/indel-seq-gen-2.1.03/src/random.cpp	2011-01-23 05:39:07.000000000 +0900
+++ src/indel-seq-gen-2.1.03/src/random.cpp	2019-11-27 18:31:16.563475500 +0900
@@ -65,7 +65,7 @@
 static uint32_t state[N]; /* the array for the state vector  */
 
 static int leqq = 1;
-static uint32_t *next;
+static uint32_t *_next;
 
 /* CS:  From Numerical Recipes in C.  Has period of length 2.3 * 10^18 */
 
@@ -145,7 +145,7 @@ void mt_srand(uint32_t uKeys[], size_t u
 inline void mt_next_state()
 {
 	leqq = N;
-    next = state;
+    _next = state;
 	uint32_t *p=state;
     for (int j=N-M+1; --j; p++) 
         *p = p[M] ^ TWIST(p[0], p[1]);
@@ -160,7 +160,7 @@ uint32_t mt_rand()
     if (--leqq == 0)
 		mt_next_state();
 
-	uint32_t y = *next++;
+	uint32_t y = *_next++;
 
     /* Tempering */
     y ^= (y >> 11);
