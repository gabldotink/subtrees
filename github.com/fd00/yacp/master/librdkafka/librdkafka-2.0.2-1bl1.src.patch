--- origsrc/librdkafka-2.0.2/CMakeLists.txt	2023-01-20 18:14:36.000000000 +0900
+++ src/librdkafka-2.0.2/CMakeLists.txt	2023-02-01 16:21:10.237582200 +0900
@@ -263,9 +263,15 @@ write_basic_package_version_file(
 )
 
 install(
-    FILES "${project_config}" "${project_version}" "packaging/cmake/Modules/FindLZ4.cmake"
+    FILES "${project_config}" "${project_version}"
     DESTINATION "${config_install_dir}"
 )
+if (NOT CYGWIN)
+  install(
+    FILES "packaging/cmake/Modules/FindLZ4.cmake"
+    DESTINATION "${config_install_dir}"
+  )
+endif()
 
 install(
     EXPORT "${targets_export_name}"
@@ -273,10 +279,12 @@ install(
     DESTINATION "${config_install_dir}"
 )
 
-install(
-    FILES LICENSES.txt
-    DESTINATION "share/licenses/librdkafka"
-)
+if (NOT CYGWIN)
+  install(
+      FILES LICENSES.txt
+      DESTINATION "share/licenses/librdkafka"
+  )
+endif()
 
 add_subdirectory(src)
 add_subdirectory(src-cpp)
--- origsrc/librdkafka-2.0.2/src/CMakeLists.txt	2023-01-20 18:14:36.000000000 +0900
+++ src/librdkafka-2.0.2/src/CMakeLists.txt	2023-02-01 17:32:52.116736100 +0900
@@ -66,7 +66,6 @@ set(
     tinycthread.c
     tinycthread_extra.c
     rdxxhash.c
-    cJSON.c
 )
 
 if(WITH_SSL)
@@ -203,6 +202,15 @@ if(WITH_CURL)
   target_link_libraries(rdkafka PUBLIC ${CURL_LIBRARIES})
 endif()
 
+find_package(pkgconfig)
+pkg_check_modules(LIBCJSON libcjson)
+if (LIBCJSON_FOUND)
+  target_include_directories(rdkafka PRIVATE ${LIBCJSON_INCLUDE_DIRS})
+  target_link_libraries(rdkafka PUBLIC ${LIBCJSON_LIBRARIES})
+else()
+  list(APPEND sources cJSON.c)
+endif()
+
 if(WITH_HDRHISTOGRAM)
   target_link_libraries(rdkafka PUBLIC m)
 endif()
@@ -213,6 +221,11 @@ if(WITH_ZLIB)
   target_link_libraries(rdkafka PUBLIC ZLIB::ZLIB)
 endif()
 
+if(WITH_CURL)
+  target_include_directories(rdkafka PRIVATE ${CURL_INCLUDE_DIRS})
+  target_link_libraries(rdkafka PUBLIC ${CURL_LIBRARIES})
+endif()
+
 if(WITH_ZSTD)
   target_link_libraries(rdkafka PRIVATE ${ZSTD_LIBRARY})
   target_include_directories(rdkafka PRIVATE ${ZSTD_INCLUDE_DIR})
@@ -296,7 +309,11 @@ if(NOT RDKAFKA_BUILD_STATIC)
   set(PKG_CONFIG_DESCRIPTION "The Apache Kafka C/C++ library")
 
   if(WITH_CURL)
-    string(APPEND PKG_CONFIG_REQUIRES "curl ")
+    if (CYGWIN)
+      string(APPEND PKG_CONFIG_REQUIRES "libcurl ")
+    else()
+      string(APPEND PKG_CONFIG_REQUIRES "curl ")
+    endif()
   endif()
 
   if(WITH_ZLIB)
@@ -319,6 +336,14 @@ if(NOT RDKAFKA_BUILD_STATIC)
     string(APPEND PKG_CONFIG_REQUIRES "liblz4 ")
   endif()
 
+  if (WITH_CURL)
+    string(APPEND PKG_CONFIG_REQUIRES "libcurl ")
+  endif()
+
+  if (LIBCJSON_FOUND)
+    string(APPEND PKG_CONFIG_REQUIRES "libcjson ")
+  endif()
+
   set(PKG_CONFIG_CFLAGS "-I\${includedir}")
   set(PKG_CONFIG_LIBS "-L\${libdir} -lrdkafka")
 
--- origsrc/librdkafka-2.0.2/src/rd.h	2023-01-20 18:14:36.000000000 +0900
+++ src/librdkafka-2.0.2/src/rd.h	2023-02-01 16:21:10.254150000 +0900
@@ -209,7 +209,7 @@ static RD_INLINE RD_UNUSED char *rd_strn
 #ifdef __APPLE__
 /* Some versions of MacOSX dont have IOV_MAX */
 #define IOV_MAX 1024
-#elif defined(_WIN32) || defined(__GNU__)
+#elif defined(_WIN32) || defined(__GNU__) || defined(__CYGWIN__)
 /* There is no IOV_MAX on MSVC or GNU but it is used internally in librdkafka */
 #define IOV_MAX 1024
 #else
--- origsrc/librdkafka-2.0.2/src/rdtime.h	2023-01-20 18:14:36.000000000 +0900
+++ src/librdkafka-2.0.2/src/rdtime.h	2023-02-01 16:21:10.261151100 +0900
@@ -197,7 +197,7 @@ static RD_INLINE void rd_timeout_init_ti
                 tspec->tv_sec  = timeout_us;
                 tspec->tv_nsec = 0;
         } else {
-#if defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
+#if defined(__CYGWIN__) || defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
                 struct timeval tv;
                 gettimeofday(&tv, NULL);
                 TIMEVAL_TO_TIMESPEC(&tv, tspec);
@@ -227,7 +227,7 @@ static RD_INLINE void rd_timeout_init_ti
                 tspec->tv_sec  = timeout_ms;
                 tspec->tv_nsec = 0;
         } else {
-#if defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
+#if defined(__CYGWIN__) || defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
                 struct timeval tv;
                 gettimeofday(&tv, NULL);
                 TIMEVAL_TO_TIMESPEC(&tv, tspec);
--- origsrc/librdkafka-2.0.2/tests/CMakeLists.txt	2023-01-20 18:14:36.000000000 +0900
+++ src/librdkafka-2.0.2/tests/CMakeLists.txt	2023-02-01 16:21:10.269171400 +0900
@@ -148,7 +148,7 @@ add_test(NAME RdKafkaTestInParallel COMM
 add_test(NAME RdKafkaTestSequentially COMMAND test-runner -p1)
 add_test(NAME RdKafkaTestBrokerLess COMMAND test-runner -p5 -l)
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE AND NOT CYGWIN)
   set(tests_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
   add_subdirectory(interceptor_test)
 endif()
