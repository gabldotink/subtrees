--- origsrc/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/CMakeLists.txt	2020-05-22 14:04:06.000000000 +0900
+++ src/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/CMakeLists.txt	2020-07-17 16:26:04.750174500 +0900
@@ -17,11 +17,12 @@ add_subdirectory(src)
 
 include(CTest)
 if(BUILD_TESTING)
-  include(cmake/osrf_testing_tools_cpp_require_googletest.cmake)
-  # ensures target gtest_main exists
-  osrf_testing_tools_cpp_require_googletest(VERSION_GTE 1.8
-    VENDOR_DIR "${CMAKE_SOURCE_DIR}/vendor")
-
+  if(NOT CYGWIN)
+    include(cmake/osrf_testing_tools_cpp_require_googletest.cmake)
+    # ensures target gtest_main exists
+    osrf_testing_tools_cpp_require_googletest(VERSION_GTE 1.8
+      VENDOR_DIR "${CMAKE_SOURCE_DIR}/vendor")
+    endif()
   add_subdirectory(test)
 endif()
 
@@ -36,10 +37,12 @@ install(FILES
   DESTINATION share/${PROJECT_NAME}/cmake
 )
 
-install(DIRECTORY vendor/
-  DESTINATION share/${PROJECT_NAME}/vendor
-  PATTERN ".gitattributes" EXCLUDE
-)
+if (NOT CYGWIN)
+  install(DIRECTORY vendor/
+    DESTINATION share/${PROJECT_NAME}/vendor
+    PATTERN ".gitattributes" EXCLUDE
+  )
+endif()
 
 install(DIRECTORY cmake/
   DESTINATION share/${PROJECT_NAME}/cmake
--- origsrc/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/src/memory_tools/CMakeLists.txt	2020-05-22 14:04:06.000000000 +0900
+++ src/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/src/memory_tools/CMakeLists.txt	2020-07-17 16:07:26.904132800 +0900
@@ -3,10 +3,10 @@
 
 # Note, I had to use Backward_DIR since they provide a config file rather than a module...
 # list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/vendor/bombela/backward-cpp")
-set(Backward_DIR "${CMAKE_CURRENT_SOURCE_DIR}/vendor/bombela/backward-cpp")
-set(FPHSA_NAME_MISMATCHED TRUE)
+#set(Backward_DIR "${CMAKE_CURRENT_SOURCE_DIR}/vendor/bombela/backward-cpp")
+#set(FPHSA_NAME_MISMATCHED TRUE)
 find_package(Backward REQUIRED)
-unset(FPHSA_NAME_MISMATCHED)
+#unset(FPHSA_NAME_MISMATCHED)
 
 add_library(memory_tools SHARED
   custom_memory_functions.cpp
@@ -50,6 +50,11 @@ option(OSRF_TESTING_TOOLS_CPP_DISABLE_ME
   "Disable environment configuration for memory tools"
   OFF)
 
+if (CYGWIN)
+  set_target_properties(memory_tools PROPERTIES SOVERSION 0)
+  set_target_properties(memory_tools_interpose PROPERTIES SOVERSION 0)
+endif()
+
 # Memory tools doesn't work on Windows right now.
 # TODO(wjwwood): If on aarch64, so not set the preload environment variables, until fixed.
 # see: https://github.com/osrf/osrf_testing_tools_cpp/issues/3
--- origsrc/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/src/memory_tools/count_function_occurrences_in_backtrace.hpp	2020-05-22 14:04:06.000000000 +0900
+++ src/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/src/memory_tools/count_function_occurrences_in_backtrace.hpp	2020-07-17 16:03:42.755864400 +0900
@@ -17,7 +17,7 @@
 
 #include "./safe_fwrite.hpp"
 
-#if defined(_WIN32)
+#if defined(_WIN32) || defined(__CYGWIN__)
 
 // Include nothing for now.
 
@@ -50,7 +50,7 @@ struct is_function_pointer
   >
 {};
 
-#if defined(_WIN32)
+#if defined(_WIN32) || defined(__CYGWIN__)
 
 struct count_function_occurrences_in_backtrace_is_implemented : std::false_type {};
 
--- origsrc/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/test/memory_tools/CMakeLists.txt	2020-05-22 14:04:06.000000000 +0900
+++ src/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/test/memory_tools/CMakeLists.txt	2020-07-17 16:20:26.779346000 +0900
@@ -4,6 +4,11 @@ target_link_libraries(test_memory_tools
   memory_tools
   gtest_main
 )
+
+if(CYGWIN)
+  target_link_libraries(test_memory_tools gtest)
+endif()
+
 target_include_directories(test_memory_tools
   PRIVATE ${memory_tools_src_dir_internal_testing_only})
 
--- origsrc/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/test/test_runner/CMakeLists.txt	2020-05-22 14:04:06.000000000 +0900
+++ src/osrf_testing_tools_cpp-1.3.2/osrf_testing_tools_cpp/test/test_runner/CMakeLists.txt	2020-07-17 16:19:21.936012300 +0900
@@ -2,6 +2,9 @@
 add_executable(test_parse_environment_variable test_parse_environment_variable.cpp)
 # gtest_main is found by osrf_testing_tools_cpp_require_googletest(), called in main CMakeLists.txt
 target_link_libraries(test_parse_environment_variable gtest_main)
+if(CYGWIN)
+  target_link_libraries(test_parse_environment_variable gtest)
+endif()
 add_test(
   NAME "test_parse_environment_variable"
   COMMAND "$<TARGET_FILE:test_parse_environment_variable>"
@@ -11,6 +14,9 @@ add_test(
 add_executable(assert_env_vars assert_env_vars.cpp)
 # gtest_main is found by osrf_testing_tools_cpp_require_googletest(), called in main CMakeLists.txt
 target_link_libraries(assert_env_vars gtest_main)
+if(CYGWIN)
+  target_link_libraries(assert_env_vars gtest)
+endif()
 
 # The use of `:` in path-like env var's is converted to `;` by `assert_env_vars`.
 add_test(
