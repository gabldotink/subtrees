--- origsrc/libnoise/examples/CMakeLists.txt	2019-05-13 12:13:28.000000000 +0900
+++ src/libnoise/examples/CMakeLists.txt	2019-05-13 12:23:18.616510700 +0900
@@ -3,4 +3,8 @@ SET(PROJECT_NAME examples)
 add_executable(complexplanet complexplanet.cpp)
 ADD_DEFINITIONS( "-I${PROJECT_SOURCE_DIR}/src" )
 ADD_DEFINITIONS( "-I${PROJECT_SOURCE_DIR}/noiseutils" )
-target_link_libraries(complexplanet noiseutils-static noise-static)
+if (BUILD_SHARED_LIBS)
+    target_link_libraries(complexplanet noiseutils noise)
+else()
+    target_link_libraries(complexplanet noiseutils-static noise-static)
+endif()
--- origsrc/libnoise/noiseutils/CMakeLists.txt	2019-05-13 12:13:28.000000000 +0900
+++ src/libnoise/noiseutils/CMakeLists.txt	2019-05-13 12:25:00.804630300 +0900
@@ -3,14 +3,23 @@ set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS YES
 set(libSrcs ${libSrcs}
 	noiseutils.cpp
 )
-add_library(noiseutils SHARED ${libSrcs})
-add_library(noiseutils-static STATIC ${libSrcs})
+if (BUILD_SHARED_LIBS)
+	add_library(noiseutils SHARED ${libSrcs})
+else()
+	add_library(noiseutils-static STATIC ${libSrcs})
+endif()
 
-set_target_properties(noiseutils PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION})
-set_target_properties(noiseutils-static PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION})
+if (BUILD_SHARED_LIBS)
+	set_target_properties(noiseutils PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION})
+else()
+	set_target_properties(noiseutils-static PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION})
+endif()
 
-target_link_libraries(noiseutils noise)
-target_link_libraries(noiseutils-static noise-static)
+if (BUILD_SHARED_LIBS)
+	target_link_libraries(noiseutils noise)
+else()
+	target_link_libraries(noiseutils-static noise-static)
+endif()
 
 # I would like to see more projects using these defaults
 if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
@@ -22,15 +31,24 @@ elseif (CMAKE_CXX_COMPILER_ID MATCHES "M
 endif()
 
 # Where to look for noise headers
-target_include_directories( noiseutils PRIVATE ${PROJECT_SOURCE_DIR}/src )
-target_include_directories( noiseutils-static PRIVATE ${PROJECT_SOURCE_DIR}/src )
+if (BUILD_SHARED_LIBS)
+	target_include_directories( noiseutils PRIVATE ${PROJECT_SOURCE_DIR}/src )
+else()
+	target_include_directories( noiseutils-static PRIVATE ${PROJECT_SOURCE_DIR}/src )
+endif()
+
+if (CYGWIN)
+	set_target_properties(noiseutils PROPERTIES SOVERSION 0)
+endif()
 
 # install include files into /include
 install( FILES "${PROJECT_SOURCE_DIR}/noiseutils/noiseutils.h" 
 		DESTINATION "${CMAKE_INSTALL_PREFIX}/include/noise" )
 
-# install dynamic libraries (.dll or .so) into /bin
-install( TARGETS noiseutils DESTINATION "${CMAKE_INSTALL_PREFIX}/bin" )
-
-# install static libraries (.lib) into /lib
-install( TARGETS noiseutils-static DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" )
+if (BUILD_SHARED_LIBS)
+	# install dynamic libraries (.dll or .so) into /bin
+	install( TARGETS noiseutils RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin" ARCHIVE DESTINATION lib)
+else()
+	# install static libraries (.lib) into /lib
+	install( TARGETS noiseutils-static DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" )
+endif()
--- origsrc/libnoise/src/CMakeLists.txt	2019-05-13 12:13:28.000000000 +0900
+++ src/libnoise/src/CMakeLists.txt	2019-05-13 12:24:18.970710400 +0900
@@ -45,25 +45,34 @@ set(libSrcs ${libSrcs}
 )
 
 IF(BUILD_SHARED_LIBS)
-    IF (WIN32)
-		message(STATUS "build - shared for win32 (x86)")
-		add_library( noise SHARED ${libSrcs} win32/dllmain.cpp)
-    ELSE()
-		message(STATUS "build - shared for others")
-		add_library( noise SHARED ${libSrcs} )
-    ENDIF()
+  IF (WIN32)
+    message(STATUS "build - shared for win32 (x86)")
+    add_library( noise SHARED ${libSrcs} win32/dllmain.cpp)
+  ELSE()
+    message(STATUS "build - shared for others")
+    add_library( noise SHARED ${libSrcs} )
+  ENDIF()
+ELSE()
+  add_library( noise-static STATIC ${libSrcs} )
 ENDIF()
 
-add_library( noise-static STATIC ${libSrcs} )
-
 # this value is set in the root CMakeLists.txt
-set_target_properties( noise PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION} )
-set_target_properties( noise-static PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION} )
+IF(BUILD_SHARED_LIBS)
+  set_target_properties( noise PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION} )
+ELSE()
+  set_target_properties( noise-static PROPERTIES LIBNOISE_VERSION ${LIBNOISE_VERSION} )
+ENDIF()
 
-target_compile_definitions( noise PRIVATE NOISE_BUILD_DLL)
-target_compile_definitions( noise-static PUBLIC NOISE_STATIC)
+IF(BUILD_SHARED_LIBS)
+  target_compile_definitions( noise PRIVATE NOISE_BUILD_DLL)
+ELSE()
+  target_compile_definitions( noise-static PUBLIC NOISE_STATIC)
+  set_target_properties( noise-static PROPERTIES OUTPUT_NAME "noise" )
+ENDIF()
 
-set_target_properties( noise-static PROPERTIES OUTPUT_NAME "noise" )
+IF(CYGWIN)
+  set_target_properties(noise PROPERTIES SOVERSION 0)
+ENDIF()
 
 # I would like to see more projects using these defaults
 if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
@@ -78,8 +87,10 @@ endif()
 install( DIRECTORY "${PROJECT_SOURCE_DIR}/src/noise" 
 		DESTINATION "${CMAKE_INSTALL_PREFIX}/include" )
 
-# install dynamic libraries (.dll or .so) into /bin
-install( TARGETS noise DESTINATION "${CMAKE_INSTALL_PREFIX}/bin" )
-
-# install static libraries (.lib) into /lib
-install( TARGETS noise-static DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" )
\ No newline at end of file
+IF(BUILD_SHARED_LIBS)
+  # install dynamic libraries (.dll or .so) into /bin
+  install( TARGETS noise RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin" ARCHIVE DESTINATION lib)
+ELSE()
+  # install static libraries (.lib) into /lib
+  install( TARGETS noise-static DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" )
+ENDIF()
