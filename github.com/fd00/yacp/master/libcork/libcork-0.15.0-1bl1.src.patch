--- origsrc/libcork-0.15.0/CMakeLists.txt	2015-09-04 00:25:39.000000000 +0900
+++ src/libcork-0.15.0/CMakeLists.txt	2018-06-07 13:25:08.627643800 +0900
@@ -20,17 +20,19 @@ find_package(CTargets)
 #-----------------------------------------------------------------------
 # Retrieve the current version number
 
-execute_process(COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/version.sh
-    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-    RESULT_VARIABLE VERSION_RESULT
-    OUTPUT_VARIABLE VERSION
-    OUTPUT_STRIP_TRAILING_WHITESPACE)
-if(VERSION_RESULT)
-    message(FATAL_ERROR
-            "Cannot determine version number: " ${VERSION_RESULT})
-endif(VERSION_RESULT)
+if (NOT DEFINED VERSION)
+    execute_process(COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/version.sh
+        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
+        RESULT_VARIABLE VERSION_RESULT
+        OUTPUT_VARIABLE VERSION
+        OUTPUT_STRIP_TRAILING_WHITESPACE)
+    if(VERSION_RESULT)
+        message(FATAL_ERROR
+                "Cannot determine version number: " ${VERSION_RESULT})
+    endif(VERSION_RESULT)
+endif()
 # This causes an annoying extra prompt in ccmake.
-# message("Current version: " ${VERSION})
+message("Current version: " ${VERSION})
 
 string(REGEX REPLACE "-dev.*" "-dev" BASE_VERSION "${VERSION}")
 
@@ -42,17 +44,19 @@ else(BASE_VERSION MATCHES "^([0-9]+)\\.(
     message(FATAL_ERROR "Invalid version number: ${VERSION}")
 endif(BASE_VERSION MATCHES "^([0-9]+)\\.([0-9]+)\\.([0-9]+)(-dev)?$")
 
-execute_process(
-    COMMAND git rev-parse HEAD
-    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-    RESULT_VARIABLE GIT_SHA1_RESULT
-    OUTPUT_VARIABLE GIT_SHA1
-    OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-if(GIT_SHA1_RESULT)
-    message(FATAL_ERROR
-            "Cannot determine git commit: " ${GIT_SHA1_RESULT})
-endif(GIT_SHA1_RESULT)
+if (EXISTS "${CMAKE_SOURCE_DIR}/.git")
+    execute_process(
+        COMMAND git rev-parse HEAD
+        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
+        RESULT_VARIABLE GIT_SHA1_RESULT
+        OUTPUT_VARIABLE GIT_SHA1
+        OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
+    if(GIT_SHA1_RESULT)
+        message(FATAL_ERROR
+                "Cannot determine git commit: " ${GIT_SHA1_RESULT})
+    endif(GIT_SHA1_RESULT)
+endif()
 
 #-----------------------------------------------------------------------
 # Check for building on Tilera
--- origsrc/libcork-0.15.0/cmake/FindCTargets.cmake	2015-09-04 00:25:39.000000000 +0900
+++ src/libcork-0.15.0/cmake/FindCTargets.cmake	2018-06-07 13:26:44.557452100 +0900
@@ -101,7 +101,8 @@ function(add_c_library __TARGET_NAME)
         # We have to install the shared library if the user asked us to, or if
         # the user asked us to link our programs with the shared library.
         install(TARGETS ${__TARGET_NAME}-shared
-                LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
+                RUNTIME DESTINATION bin
+                ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
     endif (ENABLE_SHARED OR ENABLE_SHARED_EXECUTABLES)
 
     if (ENABLE_STATIC OR NOT ENABLE_SHARED_EXECUTABLES)
--- origsrc/libcork-0.15.0/include/libcork/config/config.h	2015-09-04 00:25:39.000000000 +0900
+++ src/libcork-0.15.0/include/libcork/config/config.h	2018-06-07 13:29:25.086707900 +0900
@@ -44,7 +44,7 @@
 #include <sys/param.h>
 #endif
 
-#if defined(__linux)
+#if defined(__linux) || defined(__CYGWIN__)
 /* Do some Linux-specific autodetection. */
 #include <libcork/config/linux.h>
 
--- origsrc/libcork-0.15.0/src/libcork/posix/env.c	2015-09-04 00:25:39.000000000 +0900
+++ src/libcork-0.15.0/src/libcork/posix/env.c	2018-06-07 13:38:50.159264600 +0900
@@ -183,7 +183,7 @@ cork_env_set_vars(void *user_data, struc
     return CORK_HASH_TABLE_MAP_CONTINUE;
 }
 
-#if defined(__APPLE__) || (defined(BSD) && (BSD >= 199103))
+#if defined(__APPLE__) || (defined(BSD) && (BSD >= 199103)) || defined(__CYGWIN__)
 /* A handful of platforms [1] don't provide clearenv(), so we must implement our
  * own version that clears the environ array directly.
  *
--- origsrc/libcork-0.15.0/src/libcork/posix/subprocess.c	2015-09-04 00:25:39.000000000 +0900
+++ src/libcork-0.15.0/src/libcork/posix/subprocess.c	2018-06-07 13:44:03.788254800 +0900
@@ -500,6 +500,9 @@ cork_subprocess_is_finished(struct cork_
 #elif defined(__linux__) || defined(BSD)
 #include <sched.h>
 #define THREAD_YIELD   sched_yield
+#elif defined(__CYGWIN__)
+#include <pthread.h>
+#define THREAD_YIELD   pthread_yield
 #else
 #error "Unknown thread yield implementation"
 #endif
