--- origsrc/g2o-20201223_git/EXTERNAL/freeglut/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/EXTERNAL/freeglut/CMakeLists.txt	2021-08-27 10:00:29.819603800 +0900
@@ -11,6 +11,10 @@ if (APPLE)
   set_target_properties(freeglut_minimal PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
 endif()
 
+if (CYGWIN)
+  set_target_properties(freeglut_minimal PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS freeglut_minimal
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/apps/g2o_cli/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/apps/g2o_cli/CMakeLists.txt	2021-08-26 21:53:13.900366800 +0900
@@ -17,6 +17,10 @@ if(UNIX)
   target_link_libraries(g2o_cli_library ${CMAKE_DL_LIBS})
 endif(UNIX)
 
+if (CYGWIN)
+  set_target_properties(g2o_cli_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_cli_application
   g2o.cpp)
 
--- origsrc/g2o-20201223_git/g2o/apps/g2o_hierarchical/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/apps/g2o_hierarchical/CMakeLists.txt	2021-08-26 21:54:28.268781100 +0900
@@ -26,6 +26,10 @@ target_link_libraries(g2o_hierarchical_l
 add_executable(g2o_hierarchical_application
   g2o_hierarchical.cpp)
 
+if (CYGWIN)
+  set_target_properties(g2o_hierarchical_library PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(g2o_hierarchical_application g2o_hierarchical_library g2o_cli_library types_slam3d ) #types_slam3d_new
 
 set_target_properties(g2o_hierarchical_application PROPERTIES OUTPUT_NAME g2o_hierarchical${EXE_POSTFIX})
--- origsrc/g2o-20201223_git/g2o/apps/g2o_simulator/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/apps/g2o_simulator/CMakeLists.txt	2021-08-26 21:54:52.940707600 +0900
@@ -31,6 +31,10 @@ endif()
 
 target_link_libraries(g2o_simulator_library types_slam3d_addons types_slam3d types_slam2d_addons types_slam2d  core)
 
+if (CYGWIN)
+  set_target_properties(g2o_simulator_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_simulator2d_application
   test_simulator2d.cpp
 )
--- origsrc/g2o-20201223_git/g2o/apps/g2o_viewer/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/apps/g2o_viewer/CMakeLists.txt	2021-08-26 21:55:19.009379100 +0900
@@ -27,6 +27,10 @@ if (APPLE)
   set_target_properties(viewer_library PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
 endif()
 
+if (CYGWIN)
+  set_target_properties(viewer_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_viewer
   g2o_viewer.cpp
 )
--- origsrc/g2o-20201223_git/g2o/core/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/core/CMakeLists.txt	2021-08-26 21:56:03.703569100 +0900
@@ -47,6 +47,10 @@ if (APPLE)
   set_target_properties(core PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
 endif()
 
+if (CYGWIN)
+  set_target_properties(core PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS core
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/examples/interactive_slam/g2o_incremental/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/examples/interactive_slam/g2o_incremental/CMakeLists.txt	2021-08-27 10:18:02.916751800 +0900
@@ -7,6 +7,10 @@ include_directories(${CMAKE_CURRENT_SOUR
 set_target_properties(g2o_incremental_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}incremental)
 target_link_libraries(g2o_incremental_library g2o_interactive_library solver_cholmod ${CAMD_LIBRARY})
 
+if (CYGWIN)
+  set_target_properties(g2o_incremental_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_incremental_application g2o_incremental.cpp)
 target_link_libraries(g2o_incremental_application g2o_incremental_library)
 set_target_properties(g2o_incremental_application PROPERTIES OUTPUT_NAME g2o_incremental${EXE_POSTFIX})
--- origsrc/g2o-20201223_git/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	2021-08-26 18:48:47.729430200 +0900
@@ -23,6 +23,10 @@
 
 #include "linear_solver_cholmod_online.h"
 
+#if defined(_L)
+#undef _L
+#endif
+
 namespace g2o {
 
   struct CholmodExt;
--- origsrc/g2o-20201223_git/g2o/examples/interactive_slam/g2o_interactive/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/examples/interactive_slam/g2o_interactive/CMakeLists.txt	2021-08-27 10:17:39.245110100 +0900
@@ -9,6 +9,10 @@ include_directories(${CMAKE_CURRENT_SOUR
 set_target_properties(g2o_interactive_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}interactive)
 target_link_libraries(g2o_interactive_library core types_slam2d types_slam3d solver_cholmod parser_library interface_library)
 
+if (CYGWIN)
+  set_target_properties(g2o_interactive_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_online_application g2o_online.cpp)
 target_link_libraries(g2o_online_application g2o_interactive_library)
 set_target_properties(g2o_online_application PROPERTIES OUTPUT_NAME g2o_online${EXE_POSTFIX})
--- origsrc/g2o-20201223_git/g2o/examples/interactive_slam/slam_parser/interface/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/examples/interactive_slam/slam_parser/interface/CMakeLists.txt	2021-08-27 10:16:09.816406500 +0900
@@ -21,6 +21,10 @@ include_directories(${CMAKE_CURRENT_SOUR
 set_target_properties(interface_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}interface)
 target_link_libraries(interface_library parser_library)
 
+if (CYGWIN)
+  set_target_properties(interface_library PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS interface_library
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
   LIBRARY DESTINATION ${LIBRARY_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/examples/interactive_slam/slam_parser/parser/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/examples/interactive_slam/slam_parser/parser/CMakeLists.txt	2021-08-27 10:15:38.606630500 +0900
@@ -23,6 +23,10 @@ include_directories(${CMAKE_CURRENT_SOUR
 
 set_target_properties(parser_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}parser)
 
+if (CYGWIN)
+  set_target_properties(parser_library PROPERTIES SOVERSION 0)
+endif()
+
 #add_executable(test_slam_parser test_slam_parser.cpp)
 #target_link_libraries(test_slam_parser parser_library)
 #set_target_properties(test_slam_parser PROPERTIES OUTPUT_NAME test_slam_parser${EXE_POSTFIX})
--- origsrc/g2o-20201223_git/g2o/solvers/cholmod/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/solvers/cholmod/CMakeLists.txt	2021-08-26 22:10:50.972281400 +0900
@@ -20,6 +20,10 @@ endif()
 add_definitions(${BLAS_DEFINITIONS} ${LAPACK_DEFINITIONS})
 target_link_libraries(solver_cholmod ${CHOLMOD_LIBRARIES} ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES} core)
 
+if (CYGWIN)
+  set_target_properties(solver_cholmod PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS solver_cholmod
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/solvers/csparse/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/solvers/csparse/CMakeLists.txt	2021-08-26 22:11:53.301236600 +0900
@@ -18,6 +18,10 @@ target_include_directories(csparse_exten
   $<INSTALL_INTERFACE:include/g2o/solvers/csparse>)
 target_link_libraries(csparse_extension PUBLIC stuff ${CSPARSE_LIBRARY} ${G2O_EIGEN3_EIGEN_TARGET})
 
+if (CYGWIN)
+  set_target_properties(csparse_extension PROPERTIES SOVERSION 0)
+endif()
+
 add_library(solver_csparse ${G2O_LIB_TYPE}
   solver_csparse.cpp
   linear_solver_csparse.h
@@ -36,6 +40,10 @@ target_link_libraries(solver_csparse
   PUBLIC csparse_extension
   PUBLIC core)
 
+if (CYGWIN)
+  set_target_properties(solver_csparse PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS solver_csparse csparse_extension
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/solvers/dense/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/solvers/dense/CMakeLists.txt	2021-08-26 22:12:19.501123100 +0900
@@ -9,6 +9,10 @@ endif()
 
 target_link_libraries(solver_dense core)
 
+if (CYGWIN)
+  set_target_properties(solver_dense PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS solver_dense
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/solvers/eigen/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/solvers/eigen/CMakeLists.txt	2021-08-26 22:12:46.817814500 +0900
@@ -8,6 +8,10 @@ if (APPLE)
 endif()
 target_link_libraries(solver_eigen core)
 
+if (CYGWIN)
+  set_target_properties(solver_eigen PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS solver_eigen
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/solvers/pcg/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/solvers/pcg/CMakeLists.txt	2021-08-26 22:13:15.155495800 +0900
@@ -15,6 +15,10 @@ target_include_directories(solver_pcg PU
   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
   $<INSTALL_INTERFACE:include/g2o/solvers/pcg>)
 
+if (CYGWIN)
+  set_target_properties(solver_pcg PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS solver_pcg
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/solvers/slam2d_linear/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/solvers/slam2d_linear/CMakeLists.txt	2021-08-26 22:13:35.611025900 +0900
@@ -15,6 +15,10 @@ endif()
 
 target_link_libraries(solver_slam2d_linear solver_eigen types_slam2d)
 
+if (CYGWIN)
+  set_target_properties(solver_slam2d_linear PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS solver_slam2d_linear
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/solvers/structure_only/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/solvers/structure_only/CMakeLists.txt	2021-08-26 22:13:56.407675400 +0900
@@ -10,6 +10,10 @@ endif()
 
 target_link_libraries(solver_structure_only core)
 
+if (CYGWIN)
+  set_target_properties(solver_structure_only PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS solver_structure_only
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/stuff/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/stuff/CMakeLists.txt	2021-08-27 10:02:40.919834700 +0900
@@ -17,6 +17,10 @@ if (APPLE)
   set_target_properties(stuff PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
 endif()
 
+if (CYGWIN)
+  set_target_properties(stuff PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS stuff
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
@@ -33,6 +37,11 @@ if(OPENGL_FOUND AND G2O_HAVE_OPENGL)
   if (APPLE)
   set_target_properties(opengl_helper PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
 endif()
+
+  if (CYGWIN)
+    set_target_properties(opengl_helper PROPERTIES SOVERSION 0)
+  endif()
+
   install(TARGETS opengl_helper
     EXPORT ${G2O_TARGETS_EXPORT_NAME}
     RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/data/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/data/CMakeLists.txt	2021-08-26 22:14:52.379407600 +0900
@@ -21,6 +21,10 @@ if(G2O_HAVE_OPENGL)
   target_link_libraries(types_data freeglut_minimal opengl_helper)
 endif()
 
+if (CYGWIN)
+  set_target_properties(types_data PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_data
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/icp/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/icp/CMakeLists.txt	2021-08-26 22:15:13.095195700 +0900
@@ -9,6 +9,10 @@ if (APPLE)
 endif()
 target_link_libraries(types_icp types_sba types_slam3d)
 
+if (CYGWIN)
+  set_target_properties(types_icp PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_icp
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/sba/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/sba/CMakeLists.txt	2021-08-26 22:15:31.857796700 +0900
@@ -10,6 +10,10 @@ if (APPLE)
 endif()
 target_link_libraries(types_sba core types_slam3d)
 
+if (CYGWIN)
+  set_target_properties(types_sba PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_sba
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/sclam2d/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/sclam2d/CMakeLists.txt	2021-08-26 22:15:50.930249800 +0900
@@ -16,6 +16,10 @@ if(G2O_HAVE_OPENGL)
   target_link_libraries(types_sclam2d ${OPENGL_gl_LIBRARY})
 endif()
 
+if (CYGWIN)
+  set_target_properties(types_sclam2d PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_sclam2d
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/sim3/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/sim3/CMakeLists.txt	2021-08-26 22:16:09.939775600 +0900
@@ -9,6 +9,10 @@ if (APPLE)
 endif()
 target_link_libraries(types_sim3 PUBLIC types_sba)
 
+if (CYGWIN)
+  set_target_properties(types_sim3 PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_sim3
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/slam2d/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/slam2d/CMakeLists.txt	2021-08-26 22:16:29.432361200 +0900
@@ -26,6 +26,10 @@ if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam2d opengl_helper ${OPENGL_gl_LIBRARY} )
 endif()
 
+if (CYGWIN)
+  set_target_properties(types_slam2d PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_slam2d
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/slam2d_addons/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/slam2d_addons/CMakeLists.txt	2021-08-26 22:16:49.030984700 +0900
@@ -21,6 +21,10 @@ if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam2d_addons ${OPENGL_gl_LIBRARY})
 endif()
 
+if (CYGWIN)
+  set_target_properties(types_slam2d_addons PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_slam2d_addons
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/slam3d/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/slam3d/CMakeLists.txt	2021-08-26 22:17:07.954577100 +0900
@@ -49,6 +49,10 @@ if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam3d opengl_helper ${OPENGL_gl_LIBRARY} )
 endif()
 
+if (CYGWIN)
+  set_target_properties(types_slam3d PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_slam3d
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/g2o/types/slam3d_addons/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/g2o/types/slam3d_addons/CMakeLists.txt	2021-08-26 22:17:26.931138800 +0900
@@ -26,6 +26,10 @@ if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam3d_addons ${OPENGL_gl_LIBRARY} )
 endif()
 
+if (CYGWIN)
+  set_target_properties(types_slam3d_addons PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS types_slam3d_addons
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20201223_git/unit_test/CMakeLists.txt	2020-12-23 09:17:04.000000000 +0900
+++ src/g2o-20201223_git/unit_test/CMakeLists.txt	2021-08-26 12:11:32.049487200 +0900
@@ -1,17 +1,20 @@
 # download and compile gtest library
 # Download and unpack googletest at configure time
-configure_file(gtest/CMakeLists.txt.in ${CMAKE_BINARY_DIR}/googletest-download/CMakeLists.txt)
-execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
-if(result)
-  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
-endif()
-execute_process(COMMAND ${CMAKE_COMMAND} --build .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
-if(result)
-  message(FATAL_ERROR "Build step for googletest failed: ${result}")
+option(USE_SYSTEM_GTEST "Use system gtest" ON)
+if (NOT USE_SYSTEM_GTEST)
+  configure_file(gtest/CMakeLists.txt.in ${CMAKE_BINARY_DIR}/googletest-download/CMakeLists.txt)
+  execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
+    RESULT_VARIABLE result
+    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
+  if(result)
+    message(FATAL_ERROR "CMake step for googletest failed: ${result}")
+  endif()
+  execute_process(COMMAND ${CMAKE_COMMAND} --build .
+    RESULT_VARIABLE result
+    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
+  if(result)
+    message(FATAL_ERROR "Build step for googletest failed: ${result}")
+  endif()
 endif()
 
 # Prevent overriding the parent project's compiler/linker
@@ -20,20 +23,25 @@ set(gtest_force_shared_crt ON CACHE BOOL
 
 # Add googletest directly to our build. This defines
 # the gtest and gtest_main targets.
-add_subdirectory(${CMAKE_BINARY_DIR}/googletest-src
-                 ${CMAKE_BINARY_DIR}/googletest-build
-                 EXCLUDE_FROM_ALL)
+if (NOT USE_SYSTEM_GTEST)
+  add_subdirectory(${CMAKE_BINARY_DIR}/googletest-src
+                  ${CMAKE_BINARY_DIR}/googletest-build
+                  EXCLUDE_FROM_ALL)
 
 # The gtest/gtest_main targets carry header search path
 # dependencies automatically when using CMake 2.8.11 or
 # later. Otherwise we have to add them here ourselves.
-if (CMAKE_VERSION VERSION_LESS 2.8.11)
-  include_directories("${gtest_SOURCE_DIR}/include")
-  include_directories("${gmock_SOURCE_DIR}/include")
+  if (CMAKE_VERSION VERSION_LESS 2.8.11)
+    include_directories("${gtest_SOURCE_DIR}/include")
+    include_directories("${gmock_SOURCE_DIR}/include")
+  endif()
 endif()
 
 macro(create_test target)
   target_link_libraries(${target} gtest_main gmock)
+  if (USE_SYSTEM_GTEST)
+    target_link_libraries(${target} gtest)
+  endif()
   add_test (NAME ${target} COMMAND $<TARGET_FILE:${target}>)
 endmacro(create_test)
 
