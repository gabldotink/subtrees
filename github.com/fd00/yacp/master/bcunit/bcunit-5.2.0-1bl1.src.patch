--- origsrc/bcunit-5.2.0/BCUnit/Sources/CMakeLists.txt	2022-02-10 18:32:34.000000000 +0900
+++ src/bcunit-5.2.0/BCUnit/Sources/CMakeLists.txt	2023-01-16 16:50:28.983878500 +0900
@@ -177,6 +177,9 @@ endif()
 if(ENABLE_SHARED)
 	add_library(bcunit SHARED ${SOURCE_FILES})
 	set_target_properties(bcunit PROPERTIES VERSION 1.0.1)
+	if (DEFINED SOVERSION)
+		set_target_properties(bcunit PROPERTIES SOVERSION "${SOVERSION}")
+	endif()
 	target_compile_definitions(bcunit INTERFACE "$<BUILD_INTERFACE:IN_BCUNIT_SOURCES>")
 	target_include_directories(bcunit PUBLIC
 		$<INSTALL_INTERFACE:include>
@@ -207,6 +210,8 @@ if(ENABLE_TEST)
 	add_library(bcunit_test STATIC ${FRAMEWORK_SOURCE_FILES})
 	target_compile_definitions(bcunit_test PUBLIC MEMTRACE BCUNIT_BUILD_TESTS BCUNIT_DO_NOT_DEFINE_UNLESS_BUILDING_TESTS)
 	target_include_directories(bcunit_test PUBLIC Test)
+	target_include_directories(bcunit_test PUBLIC ${CMAKE_BINARY_DIR}/BCUnit/Headers)
+	target_include_directories(bcunit_test PUBLIC ${CMAKE_SOURCE_DIR}/BCUnit/Headers)
 
 	add_subdirectory(Test)
 endif()
--- origsrc/bcunit-5.2.0/BCUnit/Sources/Curses/Curses.c	2022-02-10 18:32:34.000000000 +0900
+++ src/bcunit-5.2.0/BCUnit/Sources/Curses/Curses.c	2023-01-16 16:40:34.136095700 +0900
@@ -256,10 +256,10 @@ static bool initialize_windows(void)
 
   start_color();
 
-  f_nLeft = application_windows.pMainWin->_begx;
-  f_nTop = application_windows.pMainWin->_begy;
-  f_nWidth = application_windows.pMainWin->_maxx;
-  f_nHeight = application_windows.pMainWin->_maxy;
+  f_nLeft = getbegx(application_windows.pMainWin);
+  f_nTop = getbegy(application_windows.pMainWin);
+  f_nWidth = getmaxx(application_windows.pMainWin);
+  f_nHeight = getmaxy(application_windows.pMainWin);
 
   if (NULL == (application_windows.pTitleWin = newwin(3, f_nWidth, 0, 0))) {
     goto title_fail;
@@ -358,10 +358,10 @@ static void refresh_windows(void)
 {
   refresh();
 
-  f_nLeft = application_windows.pMainWin->_begx;
-  f_nTop = application_windows.pMainWin->_begy;
-  f_nWidth = application_windows.pMainWin->_maxx;
-  f_nHeight = application_windows.pMainWin->_maxy;
+  f_nLeft = getbegx(application_windows.pMainWin);
+  f_nTop = getbegy(application_windows.pMainWin);
+  f_nWidth = getmaxx(application_windows.pMainWin);
+  f_nHeight = getmaxy(application_windows.pMainWin);
 
   refresh_title_window();
   refresh_progress_window();
@@ -907,10 +907,10 @@ static bool create_pad(APPPAD* pPad, WIN
   pPad->uiColumns = uiCols;
   pPad->uiPadRow = 0;
   pPad->uiPadCol = 0;
-  pPad->uiWinLeft = application_windows.pDetailsWin->_begx + 1;
-  pPad->uiWinTop = application_windows.pDetailsWin->_begy + 1;
-  pPad->uiWinColumns = application_windows.pDetailsWin->_maxx - 2;
-  pPad->uiWinRows = application_windows.pDetailsWin->_maxy - 2;
+  pPad->uiWinLeft = getbegx(application_windows.pDetailsWin) + 1;
+  pPad->uiWinTop = getbegy(application_windows.pDetailsWin) + 1;
+  pPad->uiWinColumns = getmaxx(application_windows.pDetailsWin) - 2;
+  pPad->uiWinRows = getmaxy(application_windows.pDetailsWin) - 2;
 
   bStatus = true;
 
@@ -952,11 +952,11 @@ static void show_suite_level_help(CU_pSu
 
   snprintf(szTemp, STRING_LENGTH,   _("Commands:  R - run all tests in suite %s"),
                                     pSuite->pName);
-  mvwprintw(details_pad.pPad, 0, 0, szTemp);
+  mvwprintw(details_pad.pPad, 0, 0, "%s", szTemp);
   mvwprintw(details_pad.pPad, 1, 0, _("           S - Select and run a test"));
   snprintf(szTemp, STRING_LENGTH,   _("           L - List all tests registered in suite %s"),
                                     pSuite->pName);
-  mvwprintw(details_pad.pPad, 2, 0, szTemp);
+  mvwprintw(details_pad.pPad, 2, 0, "%s", szTemp);
   mvwprintw(details_pad.pPad, 3, 0, _("           A - Activate or deactivate a test (toggle)"));
   mvwprintw(details_pad.pPad, 4, 0, _("           F - Show failures from last test run"));
   mvwprintw(details_pad.pPad, 5, 0, _("           M - Move up to main menu"));
@@ -1068,14 +1068,14 @@ static void list_tests(CU_pSuite pSuite)
   }
 
   snprintf(szTemp, STRING_LENGTH, "%s: %s", _("Suite"), pSuite->pName);
-  mvwprintw(details_pad.pPad, 0, 0, szTemp);
+  mvwprintw(details_pad.pPad, 0, 0, "%s", szTemp);
 
   snprintf(szTemp, STRING_LENGTH,
            "%*s  %-*s%*s",
            width[0], _("#"),
            width[1], _("Test Name"),
            width[2], _("Active?"));
-  mvwprintw(details_pad.pPad, 1, 0, szTemp);
+  mvwprintw(details_pad.pPad, 1, 0, "%s", szTemp);
 
   for (i = 0, pCurTest = pSuite->pTest ;
        NULL != pCurTest ;
@@ -1158,7 +1158,7 @@ static STATUS curses_set_options_run(voi
 
     snprintf(szTemp, STRING_LENGTH,   _("   1 - Inactive suites/tests treated as runtime failures     %s"),
                                       (CU_FALSE != CU_get_fail_on_inactive()) ? _("Yes") : _("No "));
-    mvwprintw(details_pad.pPad, 2, 0, szTemp);
+    mvwprintw(details_pad.pPad, 2, 0, "%s", szTemp);
     refresh_details_window();
     read_input_string(_("Enter number of option to change : "), szTemp, STRING_LENGTH);
     option_num = atol(szTemp);
--- origsrc/bcunit-5.2.0/BCUnit/Sources/Test/CMakeLists.txt	2022-02-10 18:32:34.000000000 +0900
+++ src/bcunit-5.2.0/BCUnit/Sources/Test/CMakeLists.txt	2023-01-16 16:58:02.653003500 +0900
@@ -21,5 +21,5 @@
 ############################################################################
 
 add_executable(test_bcunit test_bcunit.c)
-target_link_libraries(test_bcunit bcunit_test)
+target_link_libraries(test_bcunit bcunit_test bcunit)
 target_compile_definitions(test_bcunit PUBLIC MEMTRACE BCUNIT_BUILD_TESTS BCUNIT_DO_NOT_DEFINE_UNLESS_BUILDING_TESTS)
--- origsrc/bcunit-5.2.0/CMakeLists.txt	2022-02-10 18:32:34.000000000 +0900
+++ src/bcunit-5.2.0/CMakeLists.txt	2023-01-16 17:07:40.341875600 +0900
@@ -32,9 +32,9 @@ project(BCunit C)
 
 set(PACKAGE "BCUnit")
 set(PACKAGE_NAME "${PACKAGE}")
-set(PROJECT_VERSION_MAJOR 3)
-set(PROJECT_VERSION_MINOR 0)
-set(PROJECT_VERSION_PATCH 2)
+set(PROJECT_VERSION_MAJOR 5)
+set(PROJECT_VERSION_MINOR 2)
+set(PROJECT_VERSION_PATCH 0)
 set(PROJECT_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}")
 set(VERSION "${PROJECT_VERSION}")
 set(RELEASE "${PROJECT_VERSION_PATCH}")
@@ -112,7 +112,7 @@ endif()
 
 
 include(CMakePackageConfigHelpers)
-set(CONFIG_PACKAGE_LOCATION "${CMAKE_INSTALL_DATADIR}/${PROJECT_NAME}/cmake")
+option(CONFIG_PACKAGE_LOCATION "${CMAKE_INSTALL_DATADIR}/${PROJECT_NAME}/cmake")
 write_basic_package_version_file(
 	"${CMAKE_CURRENT_BINARY_DIR}/BcUnitConfigVersion.cmake"
 	VERSION ${PACKAGE_VERSION}
--- origsrc/bcunit-5.2.0/bcunit.pc.in	2022-02-10 18:32:34.000000000 +0900
+++ src/bcunit-5.2.0/bcunit.pc.in	2023-01-16 16:39:36.697584500 +0900
@@ -5,6 +5,6 @@ includedir=@includedir@
 
 Name: BCUnit
 Description: C Unit Testing Framework
-Version: @VERSION@-@RELEASE@
+Version: @VERSION@.@RELEASE@
 Libs: -L${libdir} -lbcunit
 Cflags: -I${includedir}
--- origsrc/bcunit-5.2.0/build/CMakeLists.txt	2022-02-10 18:32:34.000000000 +0900
+++ src/bcunit-5.2.0/build/CMakeLists.txt	2023-01-16 16:37:15.177061900 +0900
@@ -48,7 +48,7 @@ set(CPACK_SOURCE_IGNORE_FILES
 #set(CPACK_COMPONENT_DEVEL_DISPLAY_NAME ${PACKAGE}-devel)
 
 find_package(Git 1.7.10) # --count option of git rev-list is available only since (more or less) git 1.7.10
-if(GIT_EXECUTABLE)
+if(GIT_EXECUTABLE AND EXISTS "${CMAKE_SOURCE_DIR}/.git")
 	execute_process(
 		COMMAND ${GIT_EXECUTABLE} rev-list --count ${PROJECT_VERSION}..HEAD
 		OUTPUT_VARIABLE PROJECT_VERSION_BUILD
