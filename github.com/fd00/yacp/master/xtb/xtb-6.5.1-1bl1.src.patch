--- origsrc/xtb-6.5.1/CMakeLists.txt	2022-07-11 16:32:00.000000000 +0900
+++ src/xtb-6.5.1/CMakeLists.txt	2022-10-30 16:18:48.308382300 +0900
@@ -83,34 +83,36 @@ target_compile_definitions(
 )
 
 # Static Library
-add_library(
-  "lib-${PROJECT_NAME}-static"
-  STATIC
-  $<TARGET_OBJECTS:${PROJECT_NAME}-object>
-)
-target_link_libraries(
-  "lib-${PROJECT_NAME}-static"
-  PUBLIC
-  ${BLAS_LIBRARIES}
-  ${LAPACK_LIBRARIES}
-  $<$<BOOL:${OpenMP_Fortran_FOUND}>:OpenMP::OpenMP_Fortran>
-  "mctc-lib::mctc-lib"
-)
-set_target_properties(
-  "lib-${PROJECT_NAME}-static"
-  PROPERTIES
-  Fortran_MODULE_DIRECTORY "${PROJECT_BINARY_DIR}/include"
-  ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}"
-  POSITION_INDEPENDENT_CODE ON
-  OUTPUT_NAME "${PROJECT_NAME}"
-)
-target_include_directories(
-  "lib-${PROJECT_NAME}-static"
-  PUBLIC
-  $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
-  $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
-  $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>
-)
+if (BUILD_STATIC_LIBS)
+  add_library(
+    "lib-${PROJECT_NAME}-static"
+    STATIC
+    $<TARGET_OBJECTS:${PROJECT_NAME}-object>
+  )
+  target_link_libraries(
+    "lib-${PROJECT_NAME}-static"
+    PUBLIC
+    ${BLAS_LIBRARIES}
+    ${LAPACK_LIBRARIES}
+    $<$<BOOL:${OpenMP_Fortran_FOUND}>:OpenMP::OpenMP_Fortran>
+    "mctc-lib::mctc-lib"
+  )
+  set_target_properties(
+    "lib-${PROJECT_NAME}-static"
+    PROPERTIES
+    Fortran_MODULE_DIRECTORY "${PROJECT_BINARY_DIR}/include"
+    ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}"
+    POSITION_INDEPENDENT_CODE ON
+    OUTPUT_NAME "${PROJECT_NAME}"
+  )
+  target_include_directories(
+    "lib-${PROJECT_NAME}-static"
+    PUBLIC
+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
+    $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
+    $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>
+  )
+endif()
 
 # Shared Library
 add_library(
@@ -148,11 +150,19 @@ add_executable(
   "${PROJECT_NAME}-exe"
   ${prog}
 )
-target_link_libraries(
-  "${PROJECT_NAME}-exe"
-  PRIVATE
-  "lib-${PROJECT_NAME}-static"
-)
+if (BUILD_STATIC_LIBS)
+  target_link_libraries(
+    "${PROJECT_NAME}-exe"
+    PRIVATE
+    "lib-${PROJECT_NAME}-static"
+  )
+else()
+  target_link_libraries(
+    "${PROJECT_NAME}-exe"
+    PRIVATE
+    "lib-${PROJECT_NAME}-shared"
+  )
+endif()
 set_target_properties(
   ${PROJECT_NAME}-exe
   PROPERTIES
@@ -180,17 +190,30 @@ install(
   DESTINATION
   "${CMAKE_INSTALL_DATADIR}/${PROJECT_NAME}"
 )
-install(
-  TARGETS
-  "lib-${PROJECT_NAME}-static"
-  "lib-${PROJECT_NAME}-shared"
-  "${PROJECT_NAME}-exe"
-  EXPORT "${PROJECT_NAME}-targets"
-  LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-  ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-  RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-  INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
-)
+if (BUILD_STATIC_LIBS)
+  install(
+    TARGETS
+    "lib-${PROJECT_NAME}-static"
+    "lib-${PROJECT_NAME}-shared"
+    "${PROJECT_NAME}-exe"
+    EXPORT "${PROJECT_NAME}-targets"
+    LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+    INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
+  )
+else()
+  install(
+    TARGETS
+    "lib-${PROJECT_NAME}-shared"
+    "${PROJECT_NAME}-exe"
+    EXPORT "${PROJECT_NAME}-targets"
+    LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+    INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
+  )
+endif()
 # CMake package files
 include(CMakePackageConfigHelpers)
 # -- Config version file
@@ -226,3 +249,9 @@ install(
 )
 
 add_subdirectory("test")
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/xtb.pc.in ${CMAKE_BINARY_DIR}/xtb.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/xtb.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/xtb-6.5.1/cmake/CMakeLists.txt	2022-07-11 16:32:00.000000000 +0900
+++ src/xtb-6.5.1/cmake/CMakeLists.txt	2022-10-30 16:07:23.494756000 +0900
@@ -65,9 +65,13 @@ set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran
 
 # Populate xtb_version.fh
 set(version ${PROJECT_VERSION})
-execute_process(COMMAND git rev-parse HEAD
-  RESULT_VARIABLE git_return
-  OUTPUT_VARIABLE commit)
+if (EXISTS "${CMAKE_SOURCE_DIR}/.git")
+  execute_process(COMMAND git rev-parse HEAD
+    RESULT_VARIABLE git_return
+    OUTPUT_VARIABLE commit)
+else()
+  set(git_return TRUE)
+endif()
 if(git_return)
   set(commit "unknown-commit")
 else()
--- origsrc/xtb-6.5.1/test/unit/CMakeLists.txt	2022-07-11 16:32:00.000000000 +0900
+++ src/xtb-6.5.1/test/unit/CMakeLists.txt	2022-10-30 14:57:30.680082300 +0900
@@ -15,9 +15,8 @@
 # You should have received a copy of the GNU Lesser General Public License
 # along with xtb.  If not, see <https://www.gnu.org/licenses/>.
 
-if(NOT TARGET "test-drive::test-drive")
-  find_package("test-drive" REQUIRED)
-endif()
+find_package(pkgconfig)
+pkg_check_modules(TEST_DRIVE test-drive)
 
 set(dir "${CMAKE_CURRENT_SOURCE_DIR}")
 
@@ -57,12 +56,21 @@ add_executable(
   "${PROJECT_NAME}-tester"
   "${test-srcs}"
 )
-target_link_libraries(
-  "${PROJECT_NAME}-tester"
-  PRIVATE
-  "lib-${PROJECT_NAME}-static"
-  "test-drive::test-drive"
-)
+if (BUILD_STATIC_LIBS)
+  target_link_libraries(
+    "${PROJECT_NAME}-tester"
+    PRIVATE
+    "lib-${PROJECT_NAME}-static"
+    ${TEST_DRIVE_LIBRARIES}
+  )
+else()
+  target_link_libraries(
+    "${PROJECT_NAME}-tester"
+    PRIVATE
+    "lib-${PROJECT_NAME}-shared"
+    ${TEST_DRIVE_LIBRARIES}
+  )
+endif()
 set_target_properties(
   "${PROJECT_NAME}-tester"
   PROPERTIES
--- origsrc/xtb-6.5.1/xtb.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/xtb-6.5.1/xtb.pc.in	2022-10-30 16:30:23.177622600 +0900
@@ -0,0 +1,11 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: xtb
+Description: Semiempirical Extended Tight-Binding Program Package
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lxtb
+Cflags: -I${includedir}
+Requires: mctc-lib
