--- origsrc/synfig-1.5.1/cmake/SynfigFindGit.cmake	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/cmake/SynfigFindGit.cmake	2022-06-18 06:59:46.500895700 +0900
@@ -7,7 +7,7 @@ for future use.
 
 find_package(Git)
 
-if (GIT_FOUND)
+if (GIT_FOUND AND EXISTS "${CMAKE_SOURCE_DIR}/.git")
     execute_process(
         COMMAND ${GIT_EXECUTABLE} show -s --format=%ad --date=format:%Y-%m-%d HEAD
         WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
--- origsrc/synfig-1.5.1/synfig-core/src/CMakeLists.txt	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-core/src/CMakeLists.txt	2022-06-18 07:04:39.128949200 +0900
@@ -169,6 +169,9 @@ else()
 		pkg_check_modules(GIOMM REQUIRED giomm-2.4)
 		pkg_check_modules(LIBXML REQUIRED libxml++-2.6)
 		pkg_check_modules(MLT mlt++)
+		if (NOT MLT_FOUND AND DEFINED MLT_VERSION_MAJOR)
+			pkg_check_modules(MLT mlt++-${MLT_VERSION_MAJOR})
+		endif()
 		pkg_check_modules(FFTW REQUIRED fftw3)
 		pkg_check_modules(LIBPNG REQUIRED libpng) # for mod_png
 		#TODO(ice0): find solution for libmng
--- origsrc/synfig-1.5.1/synfig-core/src/synfig/CMakeLists.txt	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-core/src/synfig/CMakeLists.txt	2022-06-17 22:48:01.632740400 +0900
@@ -6,6 +6,10 @@
 ## TODO: optional static linking?
 add_library(synfig SHARED "")
 
+if (DEFINED SOVERSION)
+    set_target_properties(synfig PROPERTIES SOVERSION ${SOVERSION})
+endif()
+
 add_definitions(-DVERSION="${STUDIO_VERSION_MAJOR}.${STUDIO_VERSION_MINOR}.${STUDIO_VERSION_PATCH}")
 
 message(STATUS "MLT DIR: ${MLT_INCLUDE_DIRS}")
@@ -153,7 +157,8 @@ install(
 install(
     TARGETS synfig
     EXPORT synfig
-    LIBRARY DESTINATION lib
+    RUNTIME DESTINATION bin
+    ARCHIVE DESTINATION lib
 )
 
 export(
--- origsrc/synfig-1.5.1/synfig-core/src/synfig/module.cpp	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-core/src/synfig/module.cpp	2022-06-17 22:49:15.403595900 +0900
@@ -145,7 +145,11 @@ synfig::Module::Register(const String &m
 
 	if(callback)callback->task(strprintf(_("Attempting to register \"%s\""),module_name.c_str()));
 
+#if defined(__CYGWIN__)
+	module=lt_dlopenext((std::string("cyg")+module_name).c_str());
+#else
 	module=lt_dlopenext((std::string("lib")+module_name).c_str());
+#endif
 	if(!module)module=lt_dlopenext(module_name.c_str());
 	Type::initialize_all();
 
--- origsrc/synfig-1.5.1/synfig-studio/src/CMakeLists.txt	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-studio/src/CMakeLists.txt	2022-06-18 07:06:34.070273200 +0900
@@ -38,6 +38,9 @@ else()
 		pkg_check_modules(CAIRO REQUIRED cairo)
 		pkg_check_modules(PANGOCAIRO REQUIRED pangocairo)
 		pkg_check_modules(MLT mlt++) # required for widget_soundwave
+		if (NOT MLT_FOUND AND DEFINED MLT_VERSION_MAJOR)
+			pkg_check_modules(MLT mlt++-${MLT_VERSION_MAJOR})
+		endif()
 	endif()
 
 	foreach(pkg_config_lib SIGCPP GTKMM LIBXML MLT FFTW PANGO CAIRO PANGOCAIRO)
--- origsrc/synfig-1.5.1/synfig-studio/src/synfigapp/CMakeLists.txt	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-studio/src/synfigapp/CMakeLists.txt	2022-06-17 22:50:47.306348900 +0900
@@ -1,5 +1,9 @@
 add_library(synfigapp SHARED "")
 
+if (DEFINED SOVERSION)
+    set_target_properties(synfigapp PROPERTIES SOVERSION ${SOVERSION})
+endif()
+
 target_include_directories(synfigapp SYSTEM PUBLIC ${LIBXML_INCLUDE_DIRS})
 
 target_sources(synfigapp
@@ -32,6 +36,7 @@ if(WIN32)
 else()
     install(
         TARGETS synfigapp
-        DESTINATION lib
+        RUNTIME DESTINATION bin
+        ARCHIVE DESTINATION lib
     )
 endif()
--- origsrc/synfig-1.5.1/synfig-studio/src/synfigapp/vectorizer/centerlinepolygonizer.cpp	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-studio/src/synfigapp/vectorizer/centerlinepolygonizer.cpp	2022-06-18 00:53:54.731816400 +0900
@@ -825,7 +825,7 @@ inline void reduceBorder(RawBorder &bord
     int k;
     for (k = b[j]; k >= 0 && longestArcFrom[k] >= a; --k) 
     {
-      penaltyToEnd[k] = infinity;
+      penaltyToEnd[k] = studio::infinity;
       for (int i = a; i <= longestArcFrom[k]; ++i) 
       {
         double newPenalty = penaltyToEnd[i] + penalty(border, k, i);
--- origsrc/synfig-1.5.1/synfig-studio/src/synfigapp/vectorizer/centerlineskeletonizer.cpp	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-studio/src/synfigapp/vectorizer/centerlineskeletonizer.cpp	2022-06-18 00:54:16.666211200 +0900
@@ -663,8 +663,8 @@ void Timeline::build(ContourFamily &poly
 
 // Calculates event generated by input node
 Event::Event(ContourNode *generator, VectorizationContext *context)
-    : m_height(infinity)
-    , m_displacement(infinity)
+    : m_height(studio::infinity)
+    , m_displacement(studio::infinity)
     , m_generator(generator)
     , m_type(failure)
     , m_algorithmicTime(context->m_algorithmicTime)
--- origsrc/synfig-1.5.1/synfig-studio/src/synfigapp/vectorizer/centerlinetostrokes.cpp	2021-10-21 01:26:33.000000000 +0900
+++ src/synfig-1.5.1/synfig-studio/src/synfigapp/vectorizer/centerlinetostrokes.cpp	2022-06-18 00:55:00.505480800 +0900
@@ -56,7 +56,7 @@ using namespace studio;
 /* === G L O B A L S ======================================================= */
 const double Polyg_eps_max = 1;     // Sequence simplification max error
 const double Polyg_eps_mul = 0.75;  // Sequence simple thickness-multiplier error
-const double Quad_eps_max =  infinity;  // As above, for sequence conversion into strokes
+const double Quad_eps_max =  studio::infinity;  // As above, for sequence conversion into strokes
 synfig::Point bottomleft(0,0);
 bool max_thickness_zero = false;
 synfig::Canvas::Handle canvas;
@@ -209,8 +209,8 @@ private:
 
     inline void infty(void) 
     {
-      n = infinity;
-      l = infinity;
+      n = studio::infinity;
+      l = studio::infinity;
     }
     inline bool operator<(Length sl) 
     {
@@ -374,8 +374,8 @@ public:
 
     inline void infty(void) 
     {
-      n = infinity;
-      l = infinity;
+      n = studio::infinity;
+      l = studio::infinity;
     }
 
     inline bool operator<(Length sl) 
@@ -507,7 +507,7 @@ etl::handle<synfig::Layer> SequenceConve
       // NOTE: The following else may be taken out to perform a deeper
       // search for optimal result. However, it prevents quadratic complexities
       // on large-scale images.
-      else if (l_ji.n == infinity)
+      else if (l_ji.n == studio::infinity)
         break;  // Stops searching for current i
     }
     M[a] = L_min;
