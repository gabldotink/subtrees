--- origsrc/libdrm-2.4.115/etnaviv/etnaviv_device.c	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/etnaviv/etnaviv_device.c	2023-04-03 17:11:53.314754600 +0900
@@ -25,8 +25,10 @@
  */
 
 #include <stdlib.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
 #include <linux/types.h>
+#endif
 #include <errno.h>
 #include <sys/mman.h>
 #include <fcntl.h>
--- origsrc/libdrm-2.4.115/exynos/exynos_drm.c	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/exynos/exynos_drm.c	2023-04-03 17:11:53.317952500 +0900
@@ -31,7 +31,9 @@
 #include <unistd.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 
--- origsrc/libdrm-2.4.115/exynos/exynos_fimg2d.c	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/exynos/exynos_fimg2d.c	2023-04-03 17:11:53.321606600 +0900
@@ -30,7 +30,9 @@
 #include <assert.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 
--- origsrc/libdrm-2.4.115/freedreno/kgsl/kgsl_bo.c	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/freedreno/kgsl/kgsl_bo.c	2023-04-03 17:11:53.324608800 +0900
@@ -28,7 +28,9 @@
 
 #include "kgsl_priv.h"
 
+#if defined(__linux__)
 #include <linux/fb.h>
+#endif
 
 static int set_memtype(struct fd_device *dev, uint32_t handle, uint32_t flags)
 {
--- origsrc/libdrm-2.4.115/include/drm/drm.h	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/include/drm/drm.h	2023-04-03 17:11:53.328591500 +0900
@@ -44,7 +44,11 @@ typedef unsigned int drm_handle_t;
 #else /* One of the BSDs */
 
 #include <stdint.h>
+#if defined(__CYGWIN__)
+#include <sys/ioctl.h>
+#else
 #include <sys/ioccom.h>
+#endif
 #include <sys/types.h>
 typedef int8_t   __s8;
 typedef uint8_t  __u8;
--- origsrc/libdrm-2.4.115/omap/omap_drm.c	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/omap/omap_drm.c	2023-04-03 17:11:53.331595700 +0900
@@ -27,8 +27,10 @@
  */
 
 #include <stdlib.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
 #include <linux/types.h>
+#endif
 #include <errno.h>
 #include <sys/mman.h>
 #include <fcntl.h>
--- origsrc/libdrm-2.4.115/tests/exynos/exynos_fimg2d_test.c	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/tests/exynos/exynos_fimg2d_test.c	2023-04-03 17:11:53.335671000 +0900
@@ -31,7 +31,9 @@
 #include <unistd.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 #include <xf86drmMode.h>
--- origsrc/libdrm-2.4.115/tests/nouveau/threaded.c	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/tests/nouveau/threaded.c	2023-04-03 17:11:53.346591300 +0900
@@ -36,6 +36,7 @@ static int failed;
 
 static int import_fd;
 
+#if defined(RTLD_NEXT)
 #if defined(__GLIBC__) || defined(__FreeBSD__)
 int ioctl(int fd, unsigned long request, ...)
 #else
@@ -56,6 +57,7 @@ int ioctl(int fd, int request, ...)
 
 	return ret;
 }
+#endif
 
 static void *
 openclose(void *dev)
@@ -80,7 +82,9 @@ int main(int argc, char *argv[])
 	struct nouveau_bo *bo;
 	pthread_t t1, t2;
 
+#if defined(RTLD_NEXT)
 	old_ioctl = dlsym(RTLD_NEXT, "ioctl");
+#endif
 
 	if (argc < 2) {
 		fd = drmOpenWithType("nouveau", NULL, DRM_NODE_RENDER);
--- origsrc/libdrm-2.4.115/xf86drm.h	2023-02-09 20:55:44.000000000 +0900
+++ src/libdrm-2.4.115/xf86drm.h	2023-04-03 17:11:53.349589600 +0900
@@ -47,7 +47,7 @@ extern "C" {
 #define DRM_MAX_MINOR   16
 #endif
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
 
 #define DRM_IOCTL_NR(n)		_IOC_NR(n)
 #define DRM_IOC_VOID		_IOC_NONE
