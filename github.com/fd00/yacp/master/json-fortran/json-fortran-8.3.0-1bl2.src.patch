--- origsrc/json-fortran-8.3.0/CMakeLists.txt	2022-05-08 04:31:47.000000000 +0900
+++ src/json-fortran-8.3.0/CMakeLists.txt	2022-05-13 18:13:33.307801400 +0900
@@ -128,7 +128,11 @@ endif ()
 # Put package export CMake files where they can be found
 # use `find_package ( jsonfortran-${CMAKE_Fortran_COMPILER_ID} <version> REQUIRED )`
 if (USE_GNU_INSTALL_CONVENTION)
-  set ( EXPORT_INSTALL_DIR "${INSTALL_LIB_DIR}/cmake/${PACKAGE_VERSION}" )
+  if (CYGWIN)
+    set ( EXPORT_INSTALL_DIR "${INSTALL_LIB_DIR}/cmake/${PROJECT_NAME}" )
+  else()
+    set ( EXPORT_INSTALL_DIR "${INSTALL_LIB_DIR}/cmake/${PACKAGE_VERSION}" )
+  endif()
 else ()
   set ( EXPORT_INSTALL_DIR "${PACKAGE_VERSION}/cmake" )
 endif ()
@@ -168,32 +172,39 @@ endif ()
 
 set ( LIB_NAME ${PROJECT_NAME} )
 add_library ( ${LIB_NAME}        SHARED ${JF_LIB_SRCS} )
-add_library ( ${LIB_NAME}-static STATIC ${JF_LIB_SRCS} )
+if (NOT CYGWIN)
+  add_library ( ${LIB_NAME}-static STATIC ${JF_LIB_SRCS} )
+endif()
 
 if(JSON_FORTRAN_USE_OpenCoarrays)
   target_link_libraries(${LIB_NAME}
     PRIVATE OpenCoarrays::caf_mpi_static)
-  target_link_libraries(${LIB_NAME}-static
-    PRIVATE OpenCoarrays::caf_mpi_static)
+  if (NOT CYGWIN)
+    target_link_libraries(${LIB_NAME}-static
+      PRIVATE OpenCoarrays::caf_mpi_static)
+  endif()
 endif()
 
 target_include_directories(${LIB_NAME}
   PUBLIC
   $<BUILD_INTERFACE:${MODULE_DIR}>
   $<INSTALL_INTERFACE:${INSTALL_MOD_DIR}>)
-target_include_directories(${LIB_NAME}-static
-  PUBLIC
-  $<BUILD_INTERFACE:${MODULE_DIR}>
-  $<INSTALL_INTERFACE:${INSTALL_MOD_DIR}>)
-set_target_properties ( ${LIB_NAME}-static
-  PROPERTIES
-  OUTPUT_NAME ${LIB_NAME}
-  if(NOT MSVC_IDE)
-  PREFIX lib
-  endif()
-  VERSION ${VERSION}
-  ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib
-  Fortran_MODULE_DIRECTORY ${MODULE_DIR} )
+if (NOT CYGWIN)
+  target_include_directories(${LIB_NAME}-static
+    PUBLIC
+    $<BUILD_INTERFACE:${MODULE_DIR}>
+    $<INSTALL_INTERFACE:${INSTALL_MOD_DIR}>)
+  set_target_properties ( ${LIB_NAME}-static
+    PROPERTIES
+    OUTPUT_NAME ${LIB_NAME}
+    if(NOT MSVC_IDE)
+    PREFIX lib
+    endif()
+    VERSION ${VERSION}
+    ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib
+    Fortran_MODULE_DIRECTORY ${MODULE_DIR} )
+endif()
+
 set_target_properties ( ${LIB_NAME}
   PROPERTIES
   OUTPUT_NAME ${LIB_NAME}
@@ -294,7 +305,7 @@ if ( ENABLE_TESTS )
   # emulate GNU Autotools `make check`
   add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} -C $<CONFIG> --output-on-failure)
   add_custom_target(build_tests) # Make target to build all tests
-  add_dependencies(build_tests ${LIB_NAME} ${LIB_NAME}-static)
+  add_dependencies(build_tests ${LIB_NAME})
 
   find_program ( JSONLINT jsonlint )
 
@@ -348,7 +359,7 @@ if ( ENABLE_TESTS )
     if(MSVC_IDE)
       link_directories(${PROJECT_BINARY_DIR}/lib)
     endif()
-    add_executable ( ${TEST} EXCLUDE_FROM_ALL ${UNIT_TEST} )
+    add_executable ( ${TEST} ${UNIT_TEST} )
     target_link_libraries ( ${TEST} ${LIB_NAME} )
     add_dependencies ( check ${TEST} )
     add_dependencies ( build_tests ${TEST} )
@@ -416,10 +427,17 @@ endif ()
 # Perform the installation
 #-------------------------
 
-install ( TARGETS ${LIB_NAME} ${LIB_NAME}-static
-  EXPORT ${PACKAGE_NAME}-targets
-  LIBRARY DESTINATION "${INSTALL_LIB_DIR}"
-  ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" )
+if (CYGWIN)
+  install ( TARGETS ${LIB_NAME}
+    EXPORT ${PACKAGE_NAME}-targets
+    RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+    ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" )
+else()
+  install ( TARGETS ${LIB_NAME} ${LIB_NAME}-static
+    EXPORT ${PACKAGE_NAME}-targets
+    LIBRARY DESTINATION "${INSTALL_LIB_DIR}"
+    ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" )
+endif()
 
 # Code to  fix the dylib install name on Mac.
 include ( cmake/fixupInstallNameDir.cmake )
@@ -474,7 +492,11 @@ install ( FILES
 #----------------------------------------------
 # Make build tree targets accessible for import
 #----------------------------------------------
-export ( TARGETS ${LIB_NAME} ${LIB_NAME}-static FILE ${PACKAGE_NAME}-targets.cmake )
+if (CYGWIN)
+  export ( TARGETS ${LIB_NAME} FILE ${PACKAGE_NAME}-targets.cmake )
+else()
+  export ( TARGETS ${LIB_NAME} ${LIB_NAME}-static FILE ${PACKAGE_NAME}-targets.cmake )
+endif()
 
 # build tree package config file, NOT installed
 configure_file (
--- origsrc/json-fortran-8.3.0/json-fortran.pc.cmake.in	2022-05-08 04:31:47.000000000 +0900
+++ src/json-fortran-8.3.0/json-fortran.pc.cmake.in	2022-05-13 18:13:43.590053900 +0900
@@ -6,4 +6,4 @@ Description: @PROJECT_DESCRIPTION@
 URL: @PROJECT_URL@
 Version: @PROJECT_VERSION@
 Libs: -L${libdir} -ljsonfortran
-Cflags: -I${includedir}
+Cflags: -I${includedir}/json-fortran
