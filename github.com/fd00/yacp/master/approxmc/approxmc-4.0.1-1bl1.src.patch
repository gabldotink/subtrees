--- origsrc/approxmc-4.0.1/CMakeLists.txt	2020-07-07 08:47:28.000000000 +0900
+++ src/approxmc-4.0.1/CMakeLists.txt	2020-09-12 13:17:46.304808400 +0900
@@ -536,3 +536,10 @@ install(
     EXPORT ${APPROXMC_EXPORT_NAME}
     DESTINATION "${APPROXMC_INSTALL_CMAKE_DIR}"
 )
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/approxmc.pc.in ${CMAKE_BINARY_DIR}/approxmc.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/approxmc.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/approxmc-4.0.1/approxmc.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/approxmc-4.0.1/approxmc.pc.in	2020-09-12 13:18:05.376647100 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: approxmc
+Description: Approximate Model Counter
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lapproxmc
+Cflags: -I${includedir}
--- origsrc/approxmc-4.0.1/src/CMakeLists.txt	2020-07-07 08:47:28.000000000 +0900
+++ src/approxmc-4.0.1/src/CMakeLists.txt	2020-09-12 13:11:36.946996800 +0900
@@ -73,6 +73,10 @@ add_library(approxmc
     ${approxmc_lib_files}
 )
 
+target_link_libraries(approxmc
+    ${CRYPTOMINISAT5_LIBRARIES}
+)
+
 set_target_properties(approxmc PROPERTIES
     PUBLIC_HEADER "${approxmc_public_headers}"
     VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
--- origsrc/approxmc-4.0.1/tests/CMakeLists.txt	2020-07-07 08:47:28.000000000 +0900
+++ src/approxmc-4.0.1/tests/CMakeLists.txt	2020-09-12 13:14:01.124803400 +0900
@@ -31,12 +31,16 @@
 # the location of GTest source code is probably error prone so using a copy in the
 # repository seems like the easiest thing to do. This also has the added benefit that
 # everyone uses the same version of GTest.
-set(GTEST_PREFIX ${PROJECT_SOURCE_DIR}/utils/gtest)
-message(STATUS "NOTE: if adding the 'gtest' subdirectory fails, you need to issue 'git submodule init' and 'git submodule update'")
-add_subdirectory(${GTEST_PREFIX} gtest)
+if (NOT CYGWIN)
+    set(GTEST_PREFIX ${PROJECT_SOURCE_DIR}/utils/gtest)
+    message(STATUS "NOTE: if adding the 'gtest' subdirectory fails, you need to issue 'git submodule init' and 'git submodule update'")
+    add_subdirectory(${GTEST_PREFIX} gtest)
+endif()
 set(GTEST_BOTH_LIBRARIES gtest gtest_main)
 
-include_directories(${GTEST_PREFIX}/include)
+if (NOT CYGWIN)
+    include_directories(${GTEST_PREFIX}/include)
+endif()
 add_definitions( -DCMS_TESTING_ENABLED )
 
 # Add handy macros/functions
