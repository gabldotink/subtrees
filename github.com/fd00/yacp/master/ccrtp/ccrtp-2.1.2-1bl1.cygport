HOMEPAGE="http://www.gnu.org/software/${PN}/"
SRC_URI="mirror://gnu/${PN}/${P}.tar.gz"

CATEGORY="Libs"
SUMMARY="Common C++ class framework for RTP/RTCP"
DESCRIPTION="GNU ccRTP is an implementation of RTP, the real-time transport protocol from
the IETF (see RFC 3550, RFC 3551 and RFC 3555). Releases 1.5.0 and above
support the Secure RTP profile, SRTP (see RFC 3711). A separate extension
package, GNU ZRTP (libzrtpcpp), provides support for the ZRTP protocol (as
defined in the Internet draft draft-zimmermann-avt-zrtp).

ccRTP is a C++ library based on GNU Common C++ which provides a high
performance, flexible and extensible standards-compliant RTP stack with full
RTCP support. The design and implementation of ccRTP make it suitable for high
capacity servers and gateways as well as personal client applications.

In designing ccRTP, we have taken into account that RTP has been defined as an
application level protocol framework rather than a typical Internet transport
protocol such as TCP and UDP. Thus, RTP is hardly ever implemented as a layer
separated from the application. Consequently, RTP applications often must
customize the adaptable RTP packet layout and processing rules, timing
constraints, session membership rules as well as other RTP and RTCP mechanisms.
ccRTP aims to provide a framework for the RTP framework, rather than being just
an RTP packet manipulation library.

Support for both audio and video data is also considered in the design of
ccRTP, that can do partial frame splits/re-assembly. Unicast, multi-unicast and
multicast transport models are supported, as well as multiple active
synchronization sources, multiple RTP sessions (SSRC spaces), and multiple RTP
applications (CNAME spaces). This allows it's use for building all forms of
Internet standards based audio and visual conferencing systems.

GNU ccRTP is threadsafe and high performance. It uses packet queue lists for
the reception and transmission of data packets. Both inter-media and
intra-media synchronization is automatically handled within the incoming and
outgoing packet queues. GNU ccRTP offers support for RTCP and many other
standard and extended features that are needed for both compatible and advanced
streaming applications. It can mix multiple payload types in stream, and hence
can be used to impliment RFC 2833 compliant signaling applications as well as
other specialized things. GNU ccRTP also offers direct RTP and RTCP packet
filtering.

GNU ccRTP uses templates to isolate threading and sockets related dependencies,
so that it can be used to impliment realtime streaming with different threading
models and underlying transport protocols, not just with IPV4 UDP sockets. For
a more detailed list of ccRTP features you can have a look at the programmers'
manual."

CYGCONF_ARGS="
	--enable-maintainer-mode
"

DIFF_EXCLUDES="
	${PN}-config.h
	${PN}.list
	doc
	lib${PN}.pc
"

PKG_NAMES="
	${PN}
	lib${PN}3
	lib${PN}-devel
"
ccrtp_CONTENTS="
	usr/share/doc
"
libccrtp3_CONTENTS="
	usr/bin
"
libccrtp_devel_CONTENTS="
	usr/include
	usr/lib
	usr/share/info
"
ccrtp_SUMMARY="${SUMMARY} (licensing & readmes)"
libccrtp3_SUMMARY="${SUMMARY} (runtime)"
libccrtp_devel_SUMMARY="${SUMMARY} (development)"
