--- origsrc/arprec/Makefile.am	2015-12-12 10:20:15.000000000 +0900
+++ src/arprec/Makefile.am	2017-12-27 00:56:54.940810300 +0900
@@ -4,6 +4,9 @@ SUBDIRS = src tests include fortran tool
 bin_SCRIPTS=arprec-config
 dist_doc_DATA = README doc/arprec.pdf
 
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = arprec.pc
+
 cpp-demo:
 	$(MAKE) -C tests demo
 
--- origsrc/arprec/arprec.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/arprec/arprec.pc.in	2017-12-27 00:56:54.940810300 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: arprec
+Description: C++/Fortran-90 arbitrary precision package
+Version: @VERSION@
+Libs: -L${libdir} -larprec
+Cflags: -I${includedir}
--- origsrc/arprec/configure.ac	2015-12-12 10:20:15.000000000 +0900
+++ src/arprec/configure.ac	2017-12-27 00:56:54.956412500 +0900
@@ -3,16 +3,16 @@
 #  This work was supported by the Director, Office of Science, Division
 #  of Mathematical, Information, and Computational Sciences of the
 #  U.S. Department of Energy under contract number DE-AC03-76SF00098.
-# 
+#
 #  Copyright (c) 2001-2002
-#  
+#
 #  Creation Date:  May 1, 2002
-#  Modified:       
+#  Modified:
 #  Version:        1.0
 #
 #
 # Process this file with autoconf to produce a configure script.
-define([ARPREC_PATCHLEVEL], 13)
+define([ARPREC_PATCHLEVEL], 18)
 AC_PREREQ(2.60)
 AC_INIT(arprec, 2.2.ARPREC_PATCHLEVEL, dhbailey@lbl.gov)
 AC_CONFIG_SRCDIR([src/init.cpp])
@@ -74,10 +74,10 @@ fi
 
 
 
-# Set up compiler search list.  DUe to possible case insensitive filesystems, 
+# Set up compiler search list.  DUe to possible case insensitive filesystems,
 # Cygwin and Apple systems sometimes gets confused between cc and CC.
 # Try to use vendor compilers first, as they are often the fastest.
-case $host in 
+case $host in
   *cygwin* | *mingw* ) cxx_list="" ;;
   *apple* ) cxx_list="xlC_r xlC icpc pathCC c++ g++ gpp" ;;
   * ) cxx_list="xlC_r xlC icpc pathCC pgCC cxx aCC CC cc++ FCC KCC RCC c++ g++ gpp" ;;
@@ -147,10 +147,10 @@ case "$enable_fma" in
       ;;
     esac
   ;;
-  no) 
+  no)
     ax_cxx_fma =
   ;;
-  *) 
+  *)
     AX_CXX_FMA([$enable_fma])
     if test "x$ax_cxx_fma" = "x"; then
       AC_MSG_ERROR([Cannot find working fused multiply add.])
@@ -161,9 +161,9 @@ if test "x$ax_cxx_fma" = "x"; then
   ax_cxx_fma="none"
   ax_cxx_fms="none"
 else
-  AC_DEFINE_UNQUOTED([ARPREC_FMA(x,y,z)], [$ax_cxx_fma], 
+  AC_DEFINE_UNQUOTED([ARPREC_FMA(x,y,z)], [$ax_cxx_fma],
     [If fused multiply-add is available, define correct macro for using it.])
-  AC_DEFINE_UNQUOTED([ARPREC_FMS(x,y,z)], [$ax_cxx_fms], 
+  AC_DEFINE_UNQUOTED([ARPREC_FMS(x,y,z)], [$ax_cxx_fms],
     [If fused multiply-subtract is available, define correct macro for using it.])
 fi
 
@@ -189,13 +189,13 @@ if test "x$enable_fortran" != "xno"; the
 
     AC_FC_WRAPPERS
     AC_FC_MAIN
-    
+
     fcname=`basename $FC`
 
     case $host in
       i?86-*-* | k?*-*-* | athlon-*-* | x86_64-*-*)
         case $fcname in
-          ifc|ifort) 
+          ifc|ifort)
             FCFLAGS="$FCFLAGS -FR -assume protect_parens,minus0 -prec-div -prec-sqrt -no-ftz -axSSSE3"
             CONFIG_FCFLAGS="-FR -assume protect_parens,minus0 -prec-div -prec-sqrt -no-ftz -axSSSE3"
           ;;
@@ -203,7 +203,7 @@ if test "x$enable_fortran" != "xno"; the
       ;;
       *-*-aix* | powerpc-apple-*)
         case $fcname in
-          xlf*) 
+          xlf*)
             FCFLAGS="$FCFLAGS -qstrict"
             CONFIG_FCFLAGS="-qstrict"
           ;;
@@ -243,7 +243,7 @@ AC_PROG_LIBTOOL
 # Checks for header files.
 AC_CHECK_HEADERS([fp.h sys/time.h])
 if test "x$enable_debug" = "xyes"; then
-  AC_CHECK_HEADER([valgrind/memcheck.h], 
+  AC_CHECK_HEADER([valgrind/memcheck.h],
     [AC_DEFINE([ARPREC_VALGRIND], [1], [Define to 1 to use valgrind debugging code.  Requires ARPREC_DEBUG to be set.])])
 fi
 AC_CXX_TEMPLATES
@@ -280,7 +280,7 @@ AC_SUBST(F77, $FC)
 AC_SUBST(FFLAGS, $FCFLAGS)
 
 AC_CONFIG_FILES([Makefile src/Makefile tests/Makefile include/Makefile
-                 fortran/Makefile toolkit/Makefile arprec-config 
+                 fortran/Makefile toolkit/Makefile arprec-config arprec.pc
                  fortran/second.f toolkit/second.f])
 
 AC_OUTPUT
@@ -306,4 +306,3 @@ if test "x$ac_cv_cxx_templates" != "xyes
   echo  "Warning: the C++ compiler does not seem to support templates."
   echo  "         Some C++ example programs may not compile correctly."
 fi
-
--- origsrc/arprec/fortran/Makefile.am	2015-12-12 10:20:15.000000000 +0900
+++ src/arprec/fortran/Makefile.am	2017-12-27 00:56:54.972072700 +0900
@@ -2,8 +2,11 @@ if HAVE_FORTRAN
 AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
 LDADD = libarprec_f_main.la libarprecmod.la $(top_builddir)/src/libarprec.la $(FCLIBS)
 
-lib_LTLIBRARIES = libarprecmod.la libarprec_f_main.la
+lib_LTLIBRARIES = libarprecmod.la
+noinst_LTLIBRARIES = libarprec_f_main.la
 libarprecmod_la_SOURCES = f_mp.cpp mp_mod.f mp_modm.f mp_modx.f
+libarprecmod_la_LDFLAGS = -no-undefined
+libarprecmod_la_LIBADD = -lgfortran $(top_builddir)/src/libarprec.la
 libarprec_f_main_la_SOURCES = main.cpp
 
 if UPCASE_MODULE
--- origsrc/arprec/src/Makefile.am	2015-12-12 10:20:15.000000000 +0900
+++ src/arprec/src/Makefile.am	2017-12-27 00:56:54.972072700 +0900
@@ -16,6 +16,7 @@ SRC = add.cpp agmx.cpp ang.cpp angx.cpp
 lib_LTLIBRARIES = libarprec.la
 
 libarprec_la_SOURCES = $(SRC)
+libarprec_la_LDFLAGS = -no-undefined
 
 AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
 
--- origsrc/arprec/toolkit/mathinit.f	2015-12-12 10:20:15.000000000 +0900
+++ src/arprec/toolkit/mathinit.f	2017-12-27 00:56:54.987653500 +0900
@@ -24,7 +24,7 @@ subroutine f_main
 use mpmodule
 use globdata
 integer i, nq3, nquadopt
-parameter (nquadopt = 1)
+parameter (nquadopt = 3)
 real*8 second, tm0, tm1, tm2
 type (mp_real) catalan, eulergamma, t1, t2
 external catalan, eulergamma, second
--- origsrc/arprec/toolkit/mathtool.f	2015-12-12 10:20:15.000000000 +0900
+++ src/arprec/toolkit/mathtool.f	2017-12-27 00:56:55.003305800 +0900
@@ -516,18 +516,18 @@ nef2 = 68
 
 !   Read constants and quadrature arrays from files.
 
-open (11, file = 'const.dat', form = 'unformatted')
+open (11, file = '/usr/share/arprec/const.dat', form = 'unformatted')
 rewind (11)
 read (11) t1, t2
 rewind (11)
 close (11)
 
 if (nquadt == 1) then
-  open (11, file = 'quadgs.dat', form = 'unformatted')
+  open (11, file = '/usr/share/arprec/quadgs.dat', form = 'unformatted')
 elseif (nquadt == 2) then
-  open (11, file = 'quaderf.dat', form = 'unformatted')
+  open (11, file = '/usr/share/arprec/quaderf.dat', form = 'unformatted')
 elseif (nquadt == 3) then
-  open (11, file = 'quadts.dat', form = 'unformatted')
+  open (11, file = '/usr/share/arprec/quadts.dat', form = 'unformatted')
 endif
 rewind (11)
 read (11) nq3
@@ -1441,11 +1441,11 @@ elseif (ix == 6 .or. ix == 7) then
       if (ndebug > 0) write (6, 14) quadn(k1)
 14    format ('New quadrature type: ',a)
       if (k1 == 1) then
-        open (11, file = 'quadgs.dat', form = 'unformatted')
+        open (11, file = '/usr/share/arprec/quadgs.dat', form = 'unformatted')
       elseif (k1 == 2) then
-        open (11, file = 'quaderf.dat', form = 'unformatted')
+        open (11, file = '/usr/share/arprec/quaderf.dat', form = 'unformatted')
       elseif (k1 == 3) then
-        open (11, file = 'quadts.dat', form = 'unformatted')
+        open (11, file = '/usr/share/arprec/quadts.dat', form = 'unformatted')
       else
         write (6, 15)
 15      format ('oper: impossible case; please contact author.')
