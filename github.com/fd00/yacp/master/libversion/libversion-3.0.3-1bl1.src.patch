--- origsrc/libversion-3.0.3/libversion/CMakeLists.txt	2023-01-14 04:09:11.000000000 +0900
+++ src/libversion-3.0.3/libversion/CMakeLists.txt	2023-02-04 09:58:44.420472300 +0900
@@ -41,20 +41,22 @@ if(WIN32)
 endif()
 
 # static library
-add_library(libversion_static STATIC ${LIBVERSION_SOURCES} ${LIBVERSION_HEADERS})
-add_dependencies(libversion_static libversion) # make sure export header is generated
-target_include_directories(libversion_static PUBLIC
-	$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
-	$<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>
-	$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
-)
-target_compile_definitions(libversion_static PUBLIC
-	LIBVERSION_STATIC_DEFINE
-)
-set_target_properties(libversion_static PROPERTIES
-	POSITION_INDEPENDENT_CODE ON
-	OUTPUT_NAME version
-)
+if (BUILD_STATIC_LIBS)
+	add_library(libversion_static STATIC ${LIBVERSION_SOURCES} ${LIBVERSION_HEADERS})
+	add_dependencies(libversion_static libversion) # make sure export header is generated
+	target_include_directories(libversion_static PUBLIC
+		$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
+		$<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>
+		$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
+	)
+	target_compile_definitions(libversion_static PUBLIC
+		LIBVERSION_STATIC_DEFINE
+	)
+	set_target_properties(libversion_static PROPERTIES
+		POSITION_INDEPENDENT_CODE ON
+		OUTPUT_NAME version
+	)
+endif()
 
 # object library
 add_library(libversion_object OBJECT EXCLUDE_FROM_ALL ${LIBVERSION_SOURCES} ${LIBVERSION_HEADERS})
@@ -89,7 +91,11 @@ install(FILES
 	${CMAKE_CURRENT_BINARY_DIR}/export.h
 	DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/libversion
 )
-install(TARGETS libversion libversion_static EXPORT libversion)
+if (BUILD_STATIC_LIBS)
+	install(TARGETS libversion libversion_static EXPORT libversion)
+else()
+	install(TARGETS libversion EXPORT libversion)
+endif()
 
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libversion.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 
