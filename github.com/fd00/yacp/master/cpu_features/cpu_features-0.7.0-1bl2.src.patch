--- origsrc/cpu_features-0.7.0/CMakeLists.txt	2022-03-08 19:31:24.000000000 +0900
+++ src/cpu_features-0.7.0/CMakeLists.txt	2022-06-12 09:50:13.066226000 +0900
@@ -129,6 +129,9 @@ if(NOT PROCESSOR_IS_X86 AND UNIX)
   list(APPEND CPU_FEATURES_SRCS $<TARGET_OBJECTS:unix_based_hardware_detection>)
 endif()
 add_library(cpu_features ${CPU_FEATURES_HDRS} ${CPU_FEATURES_SRCS})
+if (CYGWIN)
+  set_target_properties(cpu_features PROPERTIES SOVERSION "${CMAKE_PROJECT_VERSION_MAJOR}")
+endif()
 set_target_properties(cpu_features PROPERTIES PUBLIC_HEADER "${CPU_FEATURES_HDRS}")
 setup_include_and_definitions(cpu_features)
 target_link_libraries(cpu_features PUBLIC ${CMAKE_DL_LIBS})
@@ -172,7 +175,9 @@ if(BUILD_TESTING)
   set(CMAKE_CXX_STANDARD_REQUIRED ON)
   set(CMAKE_CXX_EXTENSIONS OFF) # prefer use of -std11 instead of -gnustd11
 
-  if(NOT TARGET gtest OR NOT TARGET gmock_main)
+  option(USE_SYSTEM_GTEST "use system gtest" ON)
+
+  if((NOT USE_SYSTEM_GTEST) AND (NOT TARGET gtest OR NOT TARGET gmock_main))
     # Download and unpack googletest at configure time.
     configure_file(
       cmake/googletest.CMakeLists.txt.in
@@ -247,3 +252,12 @@ install(
   DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/CpuFeatures"
   COMPONENT Devel
 )
+
+if (CYGWIN)
+  set(prefix ${CMAKE_INSTALL_PREFIX})
+  set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+  set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+  set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+  configure_file(${CMAKE_SOURCE_DIR}/cpu_features.pc.in ${CMAKE_BINARY_DIR}/cpu_features.pc @ONLY)
+  install(FILES ${CMAKE_BINARY_DIR}/cpu_features.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
+endif()
--- origsrc/cpu_features-0.7.0/cpu_features.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/cpu_features-0.7.0/cpu_features.pc.in	2022-06-12 09:50:13.069171700 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: cpu_features
+Description: Cross platform C99 library to get cpu features at runtime
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lcpu_features
+Cflags: -I${includedir}
--- origsrc/cpu_features-0.7.0/src/impl_x86_linux_or_android.c	2022-03-08 19:31:24.000000000 +0900
+++ src/cpu_features-0.7.0/src/impl_x86_linux_or_android.c	2022-06-12 09:50:13.072164900 +0900
@@ -15,7 +15,7 @@
 #include "cpu_features_macros.h"
 
 #ifdef CPU_FEATURES_ARCH_X86
-#if defined(CPU_FEATURES_OS_LINUX) || defined(CPU_FEATURES_OS_ANDROID)
+#if defined(CPU_FEATURES_OS_LINUX) || defined(CPU_FEATURES_OS_ANDROID) || defined(__CYGWIN__)
 
 #include "impl_x86__base_implementation.inl"
 
--- origsrc/cpu_features-0.7.0/test/CMakeLists.txt	2022-03-08 19:31:24.000000000 +0900
+++ src/cpu_features-0.7.0/test/CMakeLists.txt	2022-06-12 09:50:13.073473000 +0900
@@ -16,7 +16,7 @@ target_link_libraries(hwcaps_for_testing
 ##------------------------------------------------------------------------------
 add_library(stack_line_reader ../src/stack_line_reader.c)
 target_compile_definitions(stack_line_reader PUBLIC STACK_LINE_READER_BUFFER_SIZE=1024)
-target_link_libraries(stack_line_reader string_view)
+target_link_libraries(stack_line_reader string_view filesystem_for_testing)
 ##------------------------------------------------------------------------------
 add_library(stack_line_reader_for_test ../src/stack_line_reader.c)
 target_compile_definitions(stack_line_reader_for_test PUBLIC STACK_LINE_READER_BUFFER_SIZE=16)
