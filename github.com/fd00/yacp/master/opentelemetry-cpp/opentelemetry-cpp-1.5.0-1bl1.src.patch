--- origsrc/opentelemetry-cpp/api/CMakeLists.txt	2022-08-04 15:40:44.000000000 +0900
+++ src/opentelemetry-cpp/api/CMakeLists.txt	2022-08-05 08:23:36.958876900 +0900
@@ -6,6 +6,10 @@ target_include_directories(
 
 set_target_properties(opentelemetry_api PROPERTIES EXPORT_NAME api)
 
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_api PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 install(
   TARGETS opentelemetry_api
   EXPORT "${PROJECT_NAME}-target"
--- origsrc/opentelemetry-cpp/api/include/opentelemetry/nostd/internal/absl/base/policy_checks.h	2022-08-04 15:40:44.000000000 +0900
+++ src/opentelemetry-cpp/api/include/opentelemetry/nostd/internal/absl/base/policy_checks.h	2022-08-04 17:09:19.681190500 +0900
@@ -33,14 +33,6 @@
 #endif
 
 // -----------------------------------------------------------------------------
-// Operating System Check
-// -----------------------------------------------------------------------------
-
-#if defined(__CYGWIN__)
-#error "Cygwin is not supported."
-#endif
-
-// -----------------------------------------------------------------------------
 // Compiler Check
 // -----------------------------------------------------------------------------
 
--- origsrc/opentelemetry-cpp/cmake/opentelemetry-proto.cmake	2022-08-04 15:40:44.000000000 +0900
+++ src/opentelemetry-cpp/cmake/opentelemetry-proto.cmake	2022-08-05 11:11:48.928691700 +0900
@@ -190,7 +190,7 @@ include_directories("${GENERATED_PROTOBU
 
 if(WITH_OTLP_GRPC)
   add_library(
-    opentelemetry_proto STATIC
+    opentelemetry_proto
     ${COMMON_PB_CPP_FILE}
     ${RESOURCE_PB_CPP_FILE}
     ${TRACE_PB_CPP_FILE}
@@ -204,7 +204,7 @@ if(WITH_OTLP_GRPC)
     ${METRICS_SERVICE_GRPC_PB_CPP_FILE})
 else()
   add_library(
-    opentelemetry_proto STATIC
+    opentelemetry_proto
     ${COMMON_PB_CPP_FILE}
     ${RESOURCE_PB_CPP_FILE}
     ${TRACE_PB_CPP_FILE}
@@ -219,6 +219,9 @@ if(needs_proto_download)
   add_dependencies(opentelemetry_proto opentelemetry-proto)
 endif()
 set_target_properties(opentelemetry_proto PROPERTIES EXPORT_NAME proto)
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_proto PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 patch_protobuf_targets(opentelemetry_proto)
 
 install(
--- origsrc/opentelemetry-cpp/exporters/elasticsearch/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/elasticsearch/CMakeLists.txt	2022-08-05 08:25:32.387649400 +0900
@@ -3,6 +3,10 @@ add_library(opentelemetry_exporter_elast
 set_target_properties(opentelemetry_exporter_elasticsearch_logs
                       PROPERTIES EXPORT_NAME elasticsearch_log_exporter)
 
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_exporter_elasticsearch_logs PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 target_include_directories(
   opentelemetry_exporter_elasticsearch_logs
   PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>"
--- origsrc/opentelemetry-cpp/exporters/etw/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/etw/CMakeLists.txt	2022-08-05 08:29:20.706715200 +0900
@@ -8,6 +8,10 @@ target_include_directories(
 set_target_properties(opentelemetry_exporter_etw PROPERTIES EXPORT_NAME
                                                             etw_exporter)
 
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_exporter_etw PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+                                                            
 target_link_libraries(opentelemetry_exporter_etw
                       INTERFACE opentelemetry_api nlohmann_json::nlohmann_json)
 if(nlohmann_json_clone)
--- origsrc/opentelemetry-cpp/exporters/jaeger/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/jaeger/CMakeLists.txt	2022-08-05 08:30:09.770063300 +0900
@@ -25,6 +25,10 @@ add_library(opentelemetry_exporter_jaege
 set_target_properties(opentelemetry_exporter_jaeger_trace
                       PROPERTIES EXPORT_NAME jaeger_trace_exporter)
 
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_exporter_jaeger_trace PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 target_include_directories(
   opentelemetry_exporter_jaeger_trace
   PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>"
--- origsrc/opentelemetry-cpp/exporters/memory/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/memory/CMakeLists.txt	2022-08-05 09:53:10.835064900 +0900
@@ -9,6 +9,10 @@ target_include_directories(
 set_target_properties(opentelemetry_exporter_in_memory
                       PROPERTIES EXPORT_NAME in_memory_span_exporter)
 
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_exporter_in_memory PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 target_link_libraries(opentelemetry_exporter_in_memory
                       PUBLIC opentelemetry_trace)
 
--- origsrc/opentelemetry-cpp/exporters/ostream/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/ostream/CMakeLists.txt	2022-08-05 09:56:06.522721800 +0900
@@ -4,6 +4,10 @@ add_library(opentelemetry_exporter_ostre
 set_target_properties(opentelemetry_exporter_ostream_span
                       PROPERTIES EXPORT_NAME ostream_span_exporter)
 
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_exporter_ostream_span PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 target_include_directories(
   opentelemetry_exporter_ostream_span
   PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>")
@@ -40,6 +44,9 @@ if(WITH_METRICS_PREVIEW)
               src/metrics_exporter.cc)
   set_target_properties(opentelemetry_exporter_ostream_metrics_deprecated
                         PROPERTIES EXPORT_NAME ostream_metrics_exporter)
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_exporter_ostream_metrics_deprecated PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_include_directories(
     opentelemetry_exporter_ostream_metrics_deprecated
     PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>")
@@ -68,6 +75,9 @@ else()
   add_library(opentelemetry_exporter_ostream_metrics src/metric_exporter.cc)
   set_target_properties(opentelemetry_exporter_ostream_metrics
                         PROPERTIES EXPORT_NAME ostream_metrics_exporter)
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_exporter_ostream_metrics PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_include_directories(
     opentelemetry_exporter_ostream_metrics
     PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>")
@@ -99,6 +109,9 @@ if(WITH_LOGS_PREVIEW)
   add_library(opentelemetry_exporter_ostream_logs src/log_exporter.cc)
   set_target_properties(opentelemetry_exporter_ostream_logs
                         PROPERTIES EXPORT_NAME ostream_log_exporter)
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_exporter_ostream_logs PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_include_directories(
     opentelemetry_exporter_ostream_logs
     PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>")
--- origsrc/opentelemetry-cpp/exporters/otlp/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/otlp/CMakeLists.txt	2022-08-05 10:28:53.040041200 +0900
@@ -5,7 +5,9 @@ add_library(
   src/otlp_metric_utils.cc)
 set_target_properties(opentelemetry_otlp_recordable PROPERTIES EXPORT_NAME
                                                                otlp_recordable)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_otlp_recordable PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_include_directories(
   opentelemetry_otlp_recordable
   PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>"
@@ -23,7 +25,9 @@ if(WITH_OTLP_GRPC)
 
   set_target_properties(opentelemetry_exporter_otlp_grpc
                         PROPERTIES EXPORT_NAME otlp_grpc_exporter)
-
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_exporter_otlp_grpc PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_link_libraries(opentelemetry_exporter_otlp_grpc
                         PUBLIC opentelemetry_otlp_recordable gRPC::grpc++)
 
@@ -34,7 +38,9 @@ if(WITH_OTLP_GRPC)
 
   set_target_properties(opentelemetry_exporter_otlp_grpc_log
                         PROPERTIES EXPORT_NAME otlp_grpc_log_exporter)
-
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_exporter_otlp_grpc_log PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_link_libraries(opentelemetry_exporter_otlp_grpc_log
                         PUBLIC opentelemetry_otlp_recordable gRPC::grpc++)
 
@@ -46,7 +52,9 @@ if(WITH_OTLP_GRPC)
 
     set_target_properties(opentelemetry_exporter_otlp_grpc_metrics
                           PROPERTIES EXPORT_NAME otlp_grpc_metrics_exporter)
-
+    if (DEFINED SOVERSION)
+      set_target_properties(opentelemetry_exporter_otlp_grpc_metrics PROPERTIES SOVERSION "${SOVERSION}")
+    endif()
     target_link_libraries(opentelemetry_exporter_otlp_grpc_metrics
                           PUBLIC opentelemetry_otlp_recordable gRPC::grpc++)
 
@@ -60,10 +68,13 @@ if(WITH_OTLP_HTTP)
   add_library(opentelemetry_exporter_otlp_http_client src/otlp_http_client.cc)
   set_target_properties(opentelemetry_exporter_otlp_http_client
                         PROPERTIES EXPORT_NAME otlp_http_client)
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_exporter_otlp_http_client PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_link_libraries(
     opentelemetry_exporter_otlp_http_client
     PUBLIC opentelemetry_sdk opentelemetry_proto opentelemetry_http_client_curl
-           nlohmann_json::nlohmann_json)
+           nlohmann_json::nlohmann_json opentelemetry_common)
   if(nlohmann_json_clone)
     add_dependencies(opentelemetry_exporter_otlp_http_client
                      nlohmann_json::nlohmann_json)
@@ -81,7 +92,9 @@ if(WITH_OTLP_HTTP)
 
   set_target_properties(opentelemetry_exporter_otlp_http
                         PROPERTIES EXPORT_NAME otlp_http_exporter)
-
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_exporter_otlp_http PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_link_libraries(
     opentelemetry_exporter_otlp_http
     PUBLIC opentelemetry_otlp_recordable
@@ -95,7 +108,9 @@ if(WITH_OTLP_HTTP)
 
     set_target_properties(opentelemetry_exporter_otlp_http_log
                           PROPERTIES EXPORT_NAME otlp_http_log_exporter)
-
+    if (DEFINED SOVERSION)
+      set_target_properties(opentelemetry_exporter_otlp_http_log PROPERTIES SOVERSION "${SOVERSION}")
+    endif()
     target_link_libraries(
       opentelemetry_exporter_otlp_http_log
       PUBLIC opentelemetry_otlp_recordable
@@ -110,7 +125,9 @@ if(WITH_OTLP_HTTP)
 
     set_target_properties(opentelemetry_exporter_otlp_http_metric
                           PROPERTIES EXPORT_NAME otlp_http_metric_exporter)
-
+    if (DEFINED SOVERSION)
+      set_target_properties(opentelemetry_exporter_otlp_http_metric PROPERTIES SOVERSION "${SOVERSION}")
+    endif()
     target_link_libraries(
       opentelemetry_exporter_otlp_http_metric
       PUBLIC opentelemetry_otlp_recordable
--- origsrc/opentelemetry-cpp/exporters/prometheus/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/prometheus/CMakeLists.txt	2022-08-05 11:14:29.167255900 +0900
@@ -21,6 +21,9 @@ if(WITH_METRICS_PREVIEW)
     prometheus_exporter_deprecated
     src/prometheus_exporter.cc src/prometheus_collector.cc
     src/prometheus_exporter_utils.cc)
+  if (DEFINED SOVERSION)
+    set_target_properties(prometheus_exporter_deprecated PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   target_include_directories(
     prometheus_exporter_deprecated
     PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>"
@@ -56,6 +59,9 @@ else()
 
   add_library(prometheus_exporter src/exporter.cc src/collector.cc
                                   src/exporter_utils.cc)
+  if (DEFINED SOVERSION)
+    set_target_properties(prometheus_exporter PROPERTIES SOVERSION "${SOVERSION}")
+  endif()                        
   target_include_directories(
     prometheus_exporter
     PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>"
--- origsrc/opentelemetry-cpp/exporters/zipkin/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/exporters/zipkin/CMakeLists.txt	2022-08-05 11:10:59.469032000 +0900
@@ -18,7 +18,9 @@ add_definitions(-DWITH_CURL)
 add_library(
   opentelemetry_exporter_zipkin_trace
   src/zipkin_exporter.cc src/zipkin_exporter_factory.cc src/recordable.cc)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_exporter_zipkin_trace PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(
   opentelemetry_exporter_zipkin_trace
   PUBLIC opentelemetry_trace opentelemetry_http_client_curl
--- origsrc/opentelemetry-cpp/ext/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/ext/CMakeLists.txt	2022-08-05 10:29:56.752994400 +0900
@@ -5,6 +5,9 @@ target_include_directories(
             "$<INSTALL_INTERFACE:include>")
 
 set_target_properties(opentelemetry_ext PROPERTIES EXPORT_NAME "ext")
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_ext PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_ext INTERFACE opentelemetry_api)
 
 install(
--- origsrc/opentelemetry-cpp/ext/src/http/client/curl/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/ext/src/http/client/curl/CMakeLists.txt	2022-08-05 10:30:40.124115300 +0900
@@ -6,7 +6,9 @@ if(CURL_FOUND)
 
   set_target_properties(opentelemetry_http_client_curl
                         PROPERTIES EXPORT_NAME http_client_curl)
-
+  if (DEFINED SOVERSION)
+    set_target_properties(opentelemetry_http_client_curl PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   if(TARGET CURL::libcurl)
     target_link_libraries(
       opentelemetry_http_client_curl
--- origsrc/opentelemetry-cpp/ext/src/http/client/nosend/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/ext/src/http/client/nosend/CMakeLists.txt	2022-08-05 10:31:30.049408100 +0900
@@ -4,7 +4,9 @@ if(${BUILD_TESTING})
 
   set_target_properties(http_client_nosend PROPERTIES EXPORT_NAME
                                                       http_client_nosend)
-
+  if (DEFINED SOVERSION)
+    set_target_properties(http_client_nosend PROPERTIES SOVERSION "${SOVERSION}")
+  endif()
   if(MSVC)
     # Explicitly specify that we consume GTest from shared library. The rest of
     # code logic below determines whether we link Release or Debug flavor of the
--- origsrc/opentelemetry-cpp/ext/src/zpages/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/ext/src/zpages/CMakeLists.txt	2022-08-05 10:46:07.454806900 +0900
@@ -9,7 +9,9 @@ add_library(
   ../../include/opentelemetry/ext/zpages/tracez_http_server.h)
 
 set_target_properties(opentelemetry_zpages PROPERTIES EXPORT_NAME zpages)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_zpages PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_zpages PUBLIC opentelemetry_ext
                                                   opentelemetry_trace)
 
--- origsrc/opentelemetry-cpp/sdk/CMakeLists.txt	2022-08-04 15:40:45.000000000 +0900
+++ src/opentelemetry-cpp/sdk/CMakeLists.txt	2022-08-05 10:46:44.834919200 +0900
@@ -5,7 +5,9 @@ target_include_directories(
             "$<INSTALL_INTERFACE:include>")
 
 set_target_properties(opentelemetry_sdk PROPERTIES EXPORT_NAME sdk)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_sdk PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 install(
   TARGETS opentelemetry_sdk
   EXPORT "${PROJECT_NAME}-target"
--- origsrc/opentelemetry-cpp/sdk/src/_metrics/CMakeLists.txt	2022-08-04 15:40:46.000000000 +0900
+++ src/opentelemetry-cpp/sdk/src/_metrics/CMakeLists.txt	2022-08-05 10:47:28.055105400 +0900
@@ -3,7 +3,9 @@ add_library(opentelemetry_metrics_deprec
 
 set_target_properties(opentelemetry_metrics_deprecated
                       PROPERTIES EXPORT_NAME metrics_deprecated)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_metrics_deprecated PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_metrics_deprecated
                       PUBLIC opentelemetry_common)
 
--- origsrc/opentelemetry-cpp/sdk/src/common/CMakeLists.txt	2022-08-04 15:40:46.000000000 +0900
+++ src/opentelemetry-cpp/sdk/src/common/CMakeLists.txt	2022-08-05 10:48:08.892860100 +0900
@@ -8,7 +8,9 @@ endif()
 add_library(opentelemetry_common ${COMMON_SRCS})
 
 set_target_properties(opentelemetry_common PROPERTIES EXPORT_NAME common)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_common PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(
   opentelemetry_common PUBLIC opentelemetry_api opentelemetry_sdk
                               Threads::Threads)
--- origsrc/opentelemetry-cpp/sdk/src/logs/CMakeLists.txt	2022-08-04 15:40:46.000000000 +0900
+++ src/opentelemetry-cpp/sdk/src/logs/CMakeLists.txt	2022-08-05 10:48:38.794481200 +0900
@@ -9,7 +9,9 @@ add_library(
   multi_recordable.cc)
 
 set_target_properties(opentelemetry_logs PROPERTIES EXPORT_NAME logs)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_logs PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_logs PUBLIC opentelemetry_resources
                                                 opentelemetry_common)
 
--- origsrc/opentelemetry-cpp/sdk/src/metrics/CMakeLists.txt	2022-08-04 15:40:46.000000000 +0900
+++ src/opentelemetry-cpp/sdk/src/metrics/CMakeLists.txt	2022-08-05 10:49:26.312676200 +0900
@@ -14,7 +14,9 @@ add_library(
   sync_instruments.cc)
 
 set_target_properties(opentelemetry_metrics PROPERTIES EXPORT_NAME metrics)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_metrics PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_metrics PUBLIC opentelemetry_common)
 
 target_include_directories(
--- origsrc/opentelemetry-cpp/sdk/src/resource/CMakeLists.txt	2022-08-04 15:40:46.000000000 +0900
+++ src/opentelemetry-cpp/sdk/src/resource/CMakeLists.txt	2022-08-05 10:50:07.522271400 +0900
@@ -1,7 +1,9 @@
 add_library(opentelemetry_resources resource.cc resource_detector.cc)
 
 set_target_properties(opentelemetry_resources PROPERTIES EXPORT_NAME resources)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_resources PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_resources opentelemetry_common)
 
 target_include_directories(
--- origsrc/opentelemetry-cpp/sdk/src/trace/CMakeLists.txt	2022-08-04 15:40:46.000000000 +0900
+++ src/opentelemetry-cpp/sdk/src/trace/CMakeLists.txt	2022-08-05 10:50:40.091013600 +0900
@@ -19,7 +19,9 @@ add_library(
   random_id_generator_factory.cc)
 
 set_target_properties(opentelemetry_trace PROPERTIES EXPORT_NAME trace)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_trace PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_trace PUBLIC opentelemetry_common
                                                  opentelemetry_resources)
 
--- origsrc/opentelemetry-cpp/sdk/src/version/CMakeLists.txt	2022-08-04 15:40:46.000000000 +0900
+++ src/opentelemetry-cpp/sdk/src/version/CMakeLists.txt	2022-08-05 10:51:08.273779200 +0900
@@ -1,7 +1,9 @@
 add_library(opentelemetry_version version.cc)
 
 set_target_properties(opentelemetry_version PROPERTIES EXPORT_NAME version)
-
+if (DEFINED SOVERSION)
+  set_target_properties(opentelemetry_version PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 target_link_libraries(opentelemetry_version PUBLIC opentelemetry_api
                                                    opentelemetry_sdk)
 
