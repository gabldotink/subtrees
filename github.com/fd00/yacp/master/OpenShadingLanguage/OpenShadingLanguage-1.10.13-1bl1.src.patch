--- origsrc/OpenShadingLanguage-Release-1.10.13/src/cmake/externalpackages.cmake	2020-08-01 15:30:18.000000000 +0900
+++ src/OpenShadingLanguage-Release-1.10.13/src/cmake/externalpackages.cmake	2020-08-21 16:11:01.199214400 +0900
@@ -112,8 +112,8 @@ if (GCC_VERSION)
         set (_CLANG_PREPROCESSOR_CAN_WORK ON)
     endif ()
 endif ()
-if (USE_BOOST_WAVE OR (NOT CLANG_LIBRARIES)
-    OR (NOT _CLANG_PREPROCESSOR_CAN_WORK))
+if ((NOT CYGWIN) AND (USE_BOOST_WAVE OR (NOT CLANG_LIBRARIES)
+    OR (NOT _CLANG_PREPROCESSOR_CAN_WORK)))
     # N.B. Using clang for preprocessing seems to work when using clang,
     # or gcc 4.8.x, or LLVM <= 3.5. When those conditions aren't met,
     # fall back on Boost Wave. We'll lift this restriction as soon as we
--- origsrc/OpenShadingLanguage-Release-1.10.13/src/liboslexec/constfold.cpp	2020-08-01 15:30:18.000000000 +0900
+++ src/OpenShadingLanguage-Release-1.10.13/src/liboslexec/constfold.cpp	2020-08-21 16:24:13.695650200 +0900
@@ -26,6 +26,7 @@ THEORY OF LIABILITY, WHETHER IN CONTRACT
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
+#include <alloca.h>
 #include <vector>
 #include <cmath>
 #include <cstdlib>
--- origsrc/OpenShadingLanguage-Release-1.10.13/src/liboslexec/pointcloud.cpp	2020-08-01 15:30:18.000000000 +0900
+++ src/OpenShadingLanguage-Release-1.10.13/src/liboslexec/pointcloud.cpp	2020-08-21 16:20:33.882390800 +0900
@@ -26,6 +26,7 @@ THEORY OF LIABILITY, WHETHER IN CONTRACT
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
+#include <alloca.h>
 #include <cstdarg>
 
 #include "oslexec_pvt.h"
--- origsrc/OpenShadingLanguage-Release-1.10.13/src/shaders/CMakeLists.txt	2020-08-01 15:30:18.000000000 +0900
+++ src/OpenShadingLanguage-Release-1.10.13/src/shaders/CMakeLists.txt	2020-08-21 16:42:07.017644900 +0900
@@ -62,5 +62,10 @@ add_custom_target (shaders ALL
                    DEPENDS ${shader_objs}
                    SOURCES ${shader_source} ${shader_headers})
 
-install (FILES ${shader_headers} ${shader_source} ${shader_objs}
-        DESTINATION shaders)
+if (CYGWIN)
+    install (FILES ${shader_headers} ${shader_source} ${shader_objs}
+            DESTINATION ${CMAKE_INSTALL_LIBDIR}/OSL/shaders)
+else() 
+    install (FILES ${shader_headers} ${shader_source} ${shader_objs}
+            DESTINATION shaders)
+endif()
--- origsrc/OpenShadingLanguage-Release-1.10.13/src/testshade/testshade.cpp	2020-08-01 15:30:18.000000000 +0900
+++ src/OpenShadingLanguage-Release-1.10.13/src/testshade/testshade.cpp	2020-08-21 16:33:03.525792100 +0900
@@ -26,7 +26,7 @@ THEORY OF LIABILITY, WHETHER IN CONTRACT
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
-
+#include <alloca.h>
 #include <iostream>
 #include <fstream>
 #include <string>
