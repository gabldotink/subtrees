diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/cmake/CMakeLists.txt src/gearbox-10.11/cmake/CMakeLists.txt
--- origsrc/gearbox-10.11/cmake/CMakeLists.txt	2009-10-21 08:52:58.000000000 +0900
+++ src/gearbox-10.11/cmake/CMakeLists.txt	2018-04-19 18:18:17.567000000 +0900
@@ -1,5 +1,7 @@
 #
 # Install all .cmake files, so other projects can use them.
 #
-file( GLOB scripts *.cmake )
-GBX_ADD_CMAKE_SCRIPTS( ${scripts} )
+if (NOT CYGWIN)
+    file( GLOB scripts *.cmake )
+    GBX_ADD_CMAKE_SCRIPTS( ${scripts} )
+endif()
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/cmake/CheckCompiler.cmake src/gearbox-10.11/cmake/CheckCompiler.cmake
--- origsrc/gearbox-10.11/cmake/CheckCompiler.cmake	2009-04-06 11:08:34.000000000 +0900
+++ src/gearbox-10.11/cmake/CheckCompiler.cmake	2018-04-19 16:28:11.862000000 +0900
@@ -1,7 +1,7 @@
 #
 # If we're using gcc, make sure the version is OK.
 #
-if( ${CMAKE_C_COMPILER} MATCHES gcc )
+if( ${CMAKE_C_COMPILER} MATCHES gcc AND NOT CYGWIN )
 
     exec_program ( ${CMAKE_C_COMPILER} ARGS --version OUTPUT_VARIABLE gcc_version )
     message( STATUS "gcc version: ${gcc_version}")
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/cmake/SetupDirectories.cmake src/gearbox-10.11/cmake/SetupDirectories.cmake
--- origsrc/gearbox-10.11/cmake/SetupDirectories.cmake	2018-04-19 16:25:15.684339500 +0900
+++ src/gearbox-10.11/cmake/SetupDirectories.cmake	2018-04-19 16:25:22.293468600 +0900
@@ -83,7 +83,7 @@ else()
 endif()
 
 # by convention, we install cmake package-config files with the libraries
-set( GBX_CMAKE_PKGCONFIG_INSTALL_SUFFIX ${GBX_LIB_INSTALL_SUFFIX}/gearbox )
+set( GBX_CMAKE_PKGCONFIG_INSTALL_SUFFIX ${GBX_LIB_INSTALL_SUFFIX}/cmake/gearbox )
 
 # now the acutal install directories
 set( GBX_BIN_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/${GBX_BIN_INSTALL_SUFFIX} )
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/cmake/TargetUtils.cmake src/gearbox-10.11/cmake/TargetUtils.cmake
--- origsrc/gearbox-10.11/cmake/TargetUtils.cmake	2010-02-01 12:55:11.000000000 +0900
+++ src/gearbox-10.11/cmake/TargetUtils.cmake	2018-04-19 16:25:22.362384200 +0900
@@ -95,8 +95,9 @@ macro( GBX_ADD_LIBRARY name type soversi
 #         BUILD_WITH_INSTALL_RPATH TRUE )
 
     install( TARGETS ${name}
-             DESTINATION ${GBX_LIB_INSTALL_SUFFIX}
-             EXPORT ${PROJECT_NAME}-targets )
+             EXPORT ${PROJECT_NAME}-targets 
+             RUNTIME DESTINATION ${GBX_BIN_INSTALL_SUFFIX} 
+             ARCHIVE DESTINATION ${GBX_LIB_INSTALL_SUFFIX})
 
     set( templist ${LIB_LIST} )
     list( APPEND templist ${name}-${soversion} )
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/src/flexiport/python/CMakeLists.txt src/gearbox-10.11/src/flexiport/python/CMakeLists.txt
--- origsrc/gearbox-10.11/src/flexiport/python/CMakeLists.txt	2010-05-13 17:08:36.000000000 +0900
+++ src/gearbox-10.11/src/flexiport/python/CMakeLists.txt	2018-04-19 17:52:27.659000000 +0900
@@ -1,8 +1,13 @@
 # Find the Python libraries and headers
-FIND_PACKAGE (PythonLibs)
+FIND_PACKAGE (PythonLibs 3)
 if(NOT PYTHON_LIBRARIES)
 	MESSAGE (STATUS "Python libaries not found. Cannot build Python bindings for Flexiport.")
 endif(NOT PYTHON_LIBRARIES)
+STRING(REPLACE "." ";" PYTHONLIBS_VERSION_LIST ${PYTHONLIBS_VERSION_STRING})
+LIST(GET PYTHONLIBS_VERSION_LIST 0 PYTHONLIBS_VERSION_MAJOR)
+LIST(GET PYTHONLIBS_VERSION_LIST 1 PYTHONLIBS_VERSION_MINOR)
+LIST(GET PYTHONLIBS_VERSION_LIST 2 PYTHONLIBS_VERSION_PATCH)
+SET(PYTHONLIBS_VERSION_SUFFIX "${PYTHONLIBS_VERSION_MAJOR}.${PYTHONLIBS_VERSION_MINOR}")
 
 # Find Boost::Python
 # There is a new, much better, FindBoost.cmake since 2.6
@@ -34,14 +39,14 @@ else(CMAKE_MAJOR_VERSION EQUAL 2 AND CMA
 		# For 2.4, assume that if boost is found then boost::python is present
 		OPTION (Boost_USE_MULTITHREAD "Use the multithreaded versions of the Boost libraries" ON)
 		MARK_AS_ADVANCED (Boost_USE_MULTITHREAD)
-		if(Boost_USE_MULTITHREAD)
+		if(Boost_USE_MULTITHREAD AND NOT CYGWIN)
 			SET (BOOST_LIB_SUFFIX "-mt" CACHE STRING "Boost library name suffix")
-		else(Boost_USE_MULTITHREAD)
+		else(Boost_USE_MULTITHREAD AND NOT CYGWIN)
 			SET (BOOST_LIB_SUFFIX "" CACHE STRING "Boost library name suffix")
-		endif(Boost_USE_MULTITHREAD)
+		endif(Boost_USE_MULTITHREAD AND NOT CYGWIN)
 		MARK_AS_ADVANCED (BOOST_LIB_SUFFIX)
 
-		SET (boostPythonLib boost_python${BOOST_LIB_SUFFIX})
+		SET (boostPythonLib boost_python3${BOOST_LIB_SUFFIX})
 		INCLUDE_DIRECTORIES (${Boost_INCLUDE_DIRS})
 		LINK_DIRECTORIES (${Boost_LIBRARY_DIRS})
 	else(Boost_FOUND)
@@ -60,7 +65,7 @@ if(PYTHON_LIBRARIES AND Boost_FOUND AND
 	add_library(${pyModuleTarget} MODULE ${srcs})
 	TARGET_LINK_LIBRARIES (${pyModuleTarget} flexiport ${boostPythonLib} ${PYTHON_LIBRARIES})
 	SET_TARGET_PROPERTIES (${pyModuleTarget} PROPERTIES PREFIX "" OUTPUT_NAME "flexiport")
-	install(TARGETS ${pyModuleTarget} LIBRARY DESTINATION lib/python/site-packages)
+	install(TARGETS ${pyModuleTarget} LIBRARY DESTINATION "lib/python${PYTHONLIBS_VERSION_SUFFIX}/site-packages")
 
 	ADD_SUBDIRECTORY (test)
 ELSEIF(NOT GBX_DEFAULT_LIB_TYPE STREQUAL SHARED)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/src/flexiport/serialport.cpp src/gearbox-10.11/src/flexiport/serialport.cpp
--- origsrc/gearbox-10.11/src/flexiport/serialport.cpp	2009-04-22 16:54:31.000000000 +0900
+++ src/gearbox-10.11/src/flexiport/serialport.cpp	2018-04-19 16:25:22.409322900 +0900
@@ -45,6 +45,10 @@
 #include <iostream>
 using namespace std;
 
+#if !defined(FIONREAD)
+#define FIONREAD TIOCINQ
+#endif
+
 namespace flexiport
 {
 
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/src/hokuyo_aist/getid/getid.cpp src/gearbox-10.11/src/hokuyo_aist/getid/getid.cpp
--- origsrc/gearbox-10.11/src/hokuyo_aist/getid/getid.cpp	2010-08-16 11:22:54.000000000 +0900
+++ src/gearbox-10.11/src/hokuyo_aist/getid/getid.cpp	2018-04-19 16:25:22.503097300 +0900
@@ -21,6 +21,8 @@
 #include <cmath>
 #include <iostream>
 
+#include <getopt.h>
+
 #include <hokuyo_aist/hokuyo_aist.h>
 #include <hokuyo_aist/hokuyo_errors.h>
 
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/src/hokuyo_aist/python/CMakeLists.txt src/gearbox-10.11/src/hokuyo_aist/python/CMakeLists.txt
--- origsrc/gearbox-10.11/src/hokuyo_aist/python/CMakeLists.txt	2010-05-13 17:08:36.000000000 +0900
+++ src/gearbox-10.11/src/hokuyo_aist/python/CMakeLists.txt	2018-04-19 17:56:09.801000200 +0900
@@ -1,8 +1,13 @@
 # Find the Python libraries and headers
-FIND_PACKAGE (PythonLibs)
+FIND_PACKAGE (PythonLibs 3)
 if(NOT PYTHON_LIBRARIES)
 	MESSAGE (STATUS "Python libaries not found. Cannot build Python bindings for Hokuyo_aist.")
 endif(NOT PYTHON_LIBRARIES)
+STRING(REPLACE "." ";" PYTHONLIBS_VERSION_LIST ${PYTHONLIBS_VERSION_STRING})
+LIST(GET PYTHONLIBS_VERSION_LIST 0 PYTHONLIBS_VERSION_MAJOR)
+LIST(GET PYTHONLIBS_VERSION_LIST 1 PYTHONLIBS_VERSION_MINOR)
+LIST(GET PYTHONLIBS_VERSION_LIST 2 PYTHONLIBS_VERSION_PATCH)
+SET(PYTHONLIBS_VERSION_SUFFIX "${PYTHONLIBS_VERSION_MAJOR}.${PYTHONLIBS_VERSION_MINOR}")
 
 # Find Boost::Python
 # There is a new, much better, FindBoost.cmake since 2.6
@@ -34,14 +39,14 @@ else(CMAKE_MAJOR_VERSION EQUAL 2 AND CMA
 		# For 2.4, assume that if boost is found then boost::python is present
 		OPTION (Boost_USE_MULTITHREAD "Use the multithreaded versions of the Boost libraries" ON)
 		MARK_AS_ADVANCED (Boost_USE_MULTITHREAD)
-		if(Boost_USE_MULTITHREAD)
+		if(Boost_USE_MULTITHREAD AND NOT CYGWIN)
 			SET (BOOST_LIB_SUFFIX "-mt" CACHE STRING "Boost library name suffix")
-		else(Boost_USE_MULTITHREAD)
+		else(Boost_USE_MULTITHREAD AND NOT CYGWIN)
 			SET (BOOST_LIB_SUFFIX "" CACHE STRING "Boost library name suffix")
-		endif(Boost_USE_MULTITHREAD)
+		endif(Boost_USE_MULTITHREAD AND NOT CYGWIN)
 		MARK_AS_ADVANCED (BOOST_LIB_SUFFIX)
 
-		SET (boostPythonLib boost_python${BOOST_LIB_SUFFIX})
+		SET (boostPythonLib boost_python3${BOOST_LIB_SUFFIX})
 		INCLUDE_DIRECTORIES (${Boost_INCLUDE_DIRS})
 		LINK_DIRECTORIES (${Boost_LIBRARY_DIRS})
 	else(Boost_FOUND)
@@ -59,7 +64,7 @@ if(PYTHON_LIBRARIES AND Boost_FOUND AND
 	add_library(${pyModuleTarget} MODULE ${srcs})
 	TARGET_LINK_LIBRARIES (${pyModuleTarget} hokuyo_aist ${boostPythonLib} ${PYTHON_LIBRARIES})
 	SET_TARGET_PROPERTIES (${pyModuleTarget} PROPERTIES PREFIX "" OUTPUT_NAME "hokuyo_aist")
-	install(TARGETS ${pyModuleTarget} LIBRARY DESTINATION lib/python/site-packages)
+	install(TARGETS ${pyModuleTarget} LIBRARY DESTINATION "lib/python${PYTHONLIBS_VERSION_SUFFIX}/site-packages")
 
 	ADD_SUBDIRECTORY (test)
 ELSEIF(NOT GBX_DEFAULT_LIB_TYPE STREQUAL SHARED)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/gearbox-10.11/src/hokuyo_aist/test/example.cpp src/gearbox-10.11/src/hokuyo_aist/test/example.cpp
--- origsrc/gearbox-10.11/src/hokuyo_aist/test/example.cpp	2010-09-24 15:13:23.000000000 +0900
+++ src/gearbox-10.11/src/hokuyo_aist/test/example.cpp	2018-04-19 16:25:22.620411200 +0900
@@ -21,6 +21,8 @@
 #include <math.h>
 #include <iostream>
 
+ #include <getopt.h>
+
 #include <hokuyo_aist/hokuyo_aist.h>
 #include <hokuyo_aist/hokuyo_errors.h>
 #include <flexiport/flexiport.h>
