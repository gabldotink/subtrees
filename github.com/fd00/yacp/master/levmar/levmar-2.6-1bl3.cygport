HOMEPAGE="http://users.ics.forth.gr/~lourakis/${PN}/"
SRC_URI="http://users.ics.forth.gr/~lourakis/${PN}/${P}.tgz"

CATEGORY="Math"
SUMMARY="Levenberg-Marquardt nonlinear least squares algorithms"
DESCRIPTION="levmar is a native ANSI C implementations of the Levenberg-Marquardt
optimization algorithm, usable also from C++, Matlab, Perl, Python and Haskell
and explains their use. Both unconstrained and constrained (under linear
equations, inequality and box constraints) Levenberg-Marquardt variants are
included. The Levenberg-Marquardt (LM) algorithm is an iterative technique
that finds a local minimum of a function that is expressed as the sum of
squares of nonlinear functions. It has become a standard technique for
nonlinear least-squares problems and can be thought of as a combination of
steepest descent and the Gauss-Newton method. When the current solution is far
from the correct one, the algorithm behaves like a steepest descent method:
slow, but guaranteed to converge. When the current solution is close to the
correct solution, it becomes a Gauss-Newton method."

inherit cmake

CYGCMAKE_ARGS="
	-DVERSION:STIRNG=${PV}
"

src_test()
{
	cd ${B}
	./lmdemo.exe
}

PKG_NAMES="
	${PN}
	lib${PN}2
	lib${PN}-devel
"
levmar_CONTENTS="
	usr/bin/*.exe
	usr/share
"
liblevmar2_CONTENTS="
	usr/bin/*.dll
"
liblevmar_devel_CONTENTS="
	usr/include
	usr/lib
"
levmar_SUMMARY="${SUMMARY} (utilities)"
liblevmar2_SUMMARY="${SUMMARY} (runtime)"
liblevmar_devel_SUMMARY="${SUMMARY} (development)"
