--- origsrc/asdcplib-rel_2_12_3/configure.ac	2022-10-18 08:19:03.000000000 +0900
+++ src/asdcplib-rel_2_12_3/configure.ac	2023-01-15 11:23:52.256399300 +0900
@@ -58,16 +58,14 @@ AC_PROG_CC
 AC_PROG_CXX
 AC_PROG_LIBTOOL
 AC_PROG_INSTALL
-AC_PROG_RANLIB
 
 AC_SYS_LARGEFILE
 if test "$ac_cv_sys_largefile_CC" != no; then
    CXX=$CXX$ac_cv_sys_largefile_CC
 fi
 
-AX_LIB_OPENSSL([0.9.7])
-AX_LIB_EXPAT
-AX_LIB_XERCES
+PKG_CHECK_MODULES([ASDCPLIB], [openssl expat])
+AM_CONDITIONAL([HAVE_OPENSSL], [true])
 
 AC_ARG_ENABLE([freedist],
      [  --enable-freedist    ensure source distribution is of BSD-licensed code],
--- origsrc/asdcplib-rel_2_12_3/src/KM_fileio.cpp	2022-10-18 08:19:03.000000000 +0900
+++ src/asdcplib-rel_2_12_3/src/KM_fileio.cpp	2023-01-15 09:54:34.374967300 +0900
@@ -67,7 +67,7 @@ struct iovec {
   int   iov_len;
 };
 #else
-# if defined(__linux__)
+# if defined(__linux__) || defined(__CYGWIN__)
 #   include <sys/statfs.h>
 # else
 #  include <sys/param.h>
@@ -658,7 +658,7 @@ Kumu::GetExecutablePath(const std::strin
   uint32_t size = X_BUFSIZE;
   int rc = _NSGetExecutablePath(path, &size);
   success = ( rc != -1 );
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__CYGWIN__)
   size_t size = X_BUFSIZE;
   ssize_t rc = readlink("/proc/self/exe", path, size);
   success = ( rc != -1 );
--- origsrc/asdcplib-rel_2_12_3/src/Makefile.am	2022-10-18 08:19:03.000000000 +0900
+++ src/asdcplib-rel_2_12_3/src/Makefile.am	2023-01-15 09:54:34.379978100 +0900
@@ -27,7 +27,7 @@
 # THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 # Allow for configure's changes to this makefile
-AM_CPPFLAGS =
+AM_CPPFLAGS = -DASDCP_PLATFORM=\"@host@\"
 AM_LDFLAGS =
 
 if OPENBSD_HOST
@@ -113,8 +113,8 @@ libkumu_la_SOURCES = KM_error.h KM_filei
 		KM_sha1.cpp KM_sha1.h KM_aes.h KM_aes.cpp
 
 # linker flags (*not* including libraries to link against) for a library
-libkumu_la_LDFLAGS = -release @VERSION@
-
+libkumu_la_LDFLAGS = -no-undefined -release @VERSION@
+libkumu_la_LIBADD = $(ASDCPLIB_LIBS)
 
 # sources for asdcp library that don't get added to a distribution
 nodist_libasdcp_la_SOURCES = Metadata_h.tt2 Metadata_cpp.tt2 \
@@ -147,7 +147,7 @@ if USE_ASDCP_JXS
 libasdcp_la_SOURCES += JXS_Codestream_Parser.cpp JXS_Sequence_Parser.cpp JXS.cpp AS_DCP_JXS.cpp
 endif
 
-libasdcp_la_LDFLAGS = -release @VERSION@
+libasdcp_la_LDFLAGS = -no-undefined -release @VERSION@
 # additional libraries to link against for a library
 libasdcp_la_LIBADD = libkumu.la
 libasdcp_la_CPPFLAGS = -DASDCP_PLATFORM=\"@host@\"
@@ -179,7 +179,7 @@ libas02_la_SOURCES	= \
 	ACES_Sequence_Parser.cpp \
 	AS_02_ACES.cpp
 
-libas02_la_LDFLAGS = -release @VERSION@
+libas02_la_LDFLAGS = -no-undefined -release @VERSION@
 libas02_la_LIBADD = libasdcp.la libkumu.la
 libas02_la_CPPFLAGS = -DASDCP_PLATFORM=\"@host@\"
 endif
@@ -192,8 +192,8 @@ libphdr_la_SOURCES	= \
 	PHDR_Sequence_Parser.cpp \
 	AS_02_PHDR.cpp
 
-libphdr_la_LDFLAGS = -release @VERSION@
-libphdr_la_LIBADD = libasdcp.la libkumu.la
+libphdr_la_LDFLAGS = -no-undefined -release @VERSION@
+libphdr_la_LIBADD = libasdcp.la libkumu.la libas02.la
 libphdr_la_CPPFLAGS = -DASDCP_PLATFORM=\"@host@\"
 endif
 
