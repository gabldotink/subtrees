--- origsrc/libstdf-0.4/Makefile.am	2006-01-08 14:50:55.000000000 +0900
+++ src/libstdf-0.4/Makefile.am	2015-03-07 17:56:26.978033900 +0900
@@ -1,4 +1,4 @@
-SUBDIRS = doc include src examples tests
+SUBDIRS = doc include src examples
 
 bin_SCRIPTS = libstdf-config
 
--- origsrc/libstdf-0.4/examples/Makefile.am	2005-11-12 04:54:52.000000000 +0900
+++ src/libstdf-0.4/examples/Makefile.am	2015-03-07 17:56:26.978033900 +0900
@@ -18,7 +18,7 @@ noinst_PROGRAMS =
 endif
 
 INCLUDES = \
-	-I$(top_builddir)/include \
+	-I$(top_builddir)/include -I$(top_srcdir)/include \
 	@HASH_CFLAGS@ @ECORE_CFLAGS@ @GLIB_CFLAGS@ \
 	@GDLIB_CFLAGS@
 
--- origsrc/libstdf-0.4/examples/record_stats.c	2006-01-08 14:39:18.000000000 +0900
+++ src/libstdf-0.4/examples/record_stats.c	2015-03-07 17:56:26.978033900 +0900
@@ -41,56 +41,56 @@
 	hash_deinitialise(&hash_table);
 
 /*
- * Ecore
+ * glib
  */
-#elif HAVE_ECORE
-#include <Ecore.h>
+#elif HAVE_GLIB
+#include <glib.h>
 #define HASH_VARS \
-	Ecore_Hash *hash_table; \
+	GHashTable *hash_table; \
 	long *stat;
 #define HASH_INIT \
-	hash_table = ecore_hash_new(ecore_str_hash, ecore_str_compare);
+	hash_table = g_hash_table_new(g_str_hash, g_str_equal);
 #define HASH_UPDATE \
-	stat = ecore_hash_get(hash_table, recname); \
+	stat = g_hash_table_lookup(hash_table, recname); \
 	if (!stat) { \
 		stat = (long*)malloc(sizeof(long)); \
 		*stat = 0; \
-		ecore_hash_set(hash_table, strdup(recname), stat); \
+		g_hash_table_insert(hash_table, g_strdup(recname), stat); \
 	} \
 	(*stat)++;
 #define HASH_PRINT \
-	ecore_hash_for_each_node(hash_table, print_stat, NULL); \
-	ecore_hash_destroy(hash_table);
-void print_stat(void *value, void *user_data)
+	g_hash_table_foreach(hash_table, print_stat, NULL); \
+	g_hash_table_destroy(hash_table);
+void print_stat(gpointer key, gpointer value, gpointer user_data)
 {
-	Ecore_Hash_Node *node = ECORE_HASH_NODE(value);
-	printf("\t%s : %li\n", (char*)(node->key), *((long*)(node->value)));
+	printf("\t%s : %li\n", (char*)key, *((long*)value));
 }
 
 /*
- * glib
+ * Ecore
  */
-#elif HAVE_GLIB
-#include <glib.h>
+#elif HAVE_ECORE
+#include <Ecore.h>
 #define HASH_VARS \
-	GHashTable *hash_table; \
+	Ecore_Hash *hash_table; \
 	long *stat;
 #define HASH_INIT \
-	hash_table = g_hash_table_new(g_str_hash, g_str_equal);
+	hash_table = ecore_hash_new(ecore_str_hash, ecore_str_compare);
 #define HASH_UPDATE \
-	stat = g_hash_table_lookup(hash_table, recname); \
+	stat = ecore_hash_get(hash_table, recname); \
 	if (!stat) { \
 		stat = (long*)malloc(sizeof(long)); \
 		*stat = 0; \
-		g_hash_table_insert(hash_table, g_strdup(recname), stat); \
+		ecore_hash_set(hash_table, strdup(recname), stat); \
 	} \
 	(*stat)++;
 #define HASH_PRINT \
-	g_hash_table_foreach(hash_table, print_stat, NULL); \
-	g_hash_table_destroy(hash_table);
-void print_stat(gpointer key, gpointer value, gpointer user_data)
+	ecore_hash_for_each_node(hash_table, print_stat, NULL); \
+	ecore_hash_destroy(hash_table);
+void print_stat(void *value, void *user_data)
 {
-	printf("\t%s : %li\n", (char*)key, *((long*)value));
+	Ecore_Hash_Node *node = ECORE_HASH_NODE(value);
+	printf("\t%s : %li\n", (char*)(node->key), *((long*)(node->value)));
 }
 
 #else
--- origsrc/libstdf-0.4/src/Makefile.am	2005-12-10 14:34:14.000000000 +0900
+++ src/libstdf-0.4/src/Makefile.am	2015-03-07 17:56:26.978033900 +0900
@@ -3,7 +3,7 @@ noinst_HEADERS = dtc.h rec.h
 # Internal macro to define internal libstdf stuff
 AM_CFLAGS = -D__IN_LIBSTDF @DEBUG_CFLAGS@
 
-INCLUDES = -I$(top_builddir)/include \
+INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include \
 	@ZIP_CFLAGS@ @GZIP_CFLAGS@ @BZIP2_CFLAGS@
 
 lib_LTLIBRARIES = libstdf.la
@@ -17,6 +17,6 @@ libstdf_la_SOURCES = \
 	dtc.c \
 	rec.c \
 	$(EXTRA_STDF_SOURCES)
-libstdf_la_LDFLAGS = -version-info 0:1:0
+libstdf_la_LDFLAGS = -no-undefined -version-info 0:1:0
 
 libstdf_la_LIBADD = @ZIP_LIBS@ @GZIP_LIBS@ @BZIP2_LIBS@ @DEBUG_LIBS@
