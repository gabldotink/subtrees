--- origsrc/fson-1.0.2/CMakeLists.txt	2020-03-02 11:46:34.000000000 +0900
+++ src/fson-1.0.2/CMakeLists.txt	2020-10-02 21:06:56.278640400 +0900
@@ -61,9 +61,12 @@ set(INSTALL_CONFIGDIR ${CMAKE_INSTALL_LI
 
 install(TARGETS FSON
     EXPORT fson-targets
-    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
 )
+if(CYGWIN)
+    set_target_properties(FSON PROPERTIES SOVERSION 0)
+endif()
 
 # Add the correct module for `use` here.
 install(FILES
--- origsrc/fson-1.0.2/meson.build	2020-03-02 11:46:34.000000000 +0900
+++ src/fson-1.0.2/meson.build	2020-10-02 22:03:19.306976000 +0900
@@ -19,7 +19,11 @@ else
   f_args = []
 endif
 
-fson = shared_library('fson', fson_sources, fortran_args: f_args, install: true)
+fson = shared_library('fson', fson_sources,
+                      soversion: 0,
+                      include_directories : '/usr/include',
+                      fortran_args: f_args,
+                      install: true,)
 
 fson_dep = declare_dependency(link_with : fson)
 
@@ -34,10 +38,18 @@ if includedir != ''
   endforeach
   # NB this is a temporary measure until Meson gets specific
   # functionality for installing Fortran modules:
-  install_subdir(join_paths('build', 'fson@sha'),
-                 install_dir: module_install_dir,
-                 strip_directory: true,
-                 exclude_files: fson_objs)
+  if host_machine.system() == 'cygwin'
+    fson_mods = []
+    foreach m: fson_modules
+      fson_mods += [join_paths(meson.current_build_dir(), 'fson@sha', m.split('.')[0]) + '.mod']
+    endforeach
+    install_data(fson_mods, install_dir: module_install_dir)
+  else
+    install_subdir(join_paths('build', 'fson@sha'),
+                  install_dir: module_install_dir,
+                  strip_directory: true,
+                  exclude_files: fson_objs)
+  endif
   pkg = import('pkgconfig')
   pkg.generate(fson,
                description: 'Fortran 95 JSON parser')
@@ -59,6 +71,7 @@ foreach test_name: test_names
   test_src = join_paths(meson.current_source_dir(),
                         'src', 'tests', test_name + '_zofu.f90')
   test_lib = static_library(test_name + '_lib', test_src,
+                            include_directories: '/usr/include',
                             link_with: fson,
                             dependencies: zofu)
   test_driver_src = custom_target(
@@ -68,6 +81,7 @@ foreach test_name: test_names
     command: [zofu_driver, '@INPUT@', '@OUTPUT@'])
   unit_test = executable(
     test_name, [test_driver_src, test_src],
+    include_directories: '/usr/include',
     link_with: [fson, test_lib],
     dependencies: zofu)
   test(test_name, unit_test, env: test_env)
