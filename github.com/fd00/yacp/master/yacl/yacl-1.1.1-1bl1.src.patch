--- origsrc/yacl-1.1.1/Makefile.am	2016-08-21 13:06:43.000000000 +0900
+++ src/yacl-1.1.1/Makefile.am	2020-02-15 12:29:20.813498900 +0900
@@ -69,7 +69,7 @@ libyacl_la_LIBADD = $(DEPS_LIBS) $(GUILE
 	$(LIBGLIB_LIBS) src/aes/libaes.la
 
 
-libyacl_la_LDFLAGS = -version-info $(YACL_SO_VERSION) -release $(YACL_API_VERSION)
+libyacl_la_LDFLAGS = -no-undefined -version-info $(YACL_SO_VERSION) -release $(YACL_API_VERSION)
 
 yacl_includedir = $(includedir)/yacl-$(YACL_API_VERSION)
 nobase_yacl_include_HEADERS = yacl.h
--- origsrc/yacl-1.1.1/configure.ac	2016-08-21 13:06:43.000000000 +0900
+++ src/yacl-1.1.1/configure.ac	2020-02-15 12:17:31.468511600 +0900
@@ -4,10 +4,11 @@ AC_INIT([yacl], [1.1.1], [bugs@cryptotro
         [https://github.com/cryptotronix/yacl])
 AC_PREREQ([2.59])
 AC_USE_SYSTEM_EXTENSIONS
-AM_INIT_AUTOMAKE([1.10 -Wall no-define])
+AM_INIT_AUTOMAKE([1.10 -Wall no-define foreign])
 AC_CONFIG_MACRO_DIR([m4])
 PKG_PROG_PKG_CONFIG
 m4_ifdef([AM_PROG_AR], [AM_PROG_AR])
+AM_GNU_GETTEXT
 
 # Generate two configuration headers; one for building the library itself with
 # an autogenerated template, and a second one that will be installed alongside
@@ -102,7 +103,7 @@ AS_IF([test "x$with_libsodium" = "xyes"]
 AS_IF([test "x$with_guile" = "xyes"], [
 # Guile Extensions
 echo "Checking for guile extensions"
-PKG_CHECK_MODULES([GUILE], [guile-2.0])
+PKG_CHECK_MODULES([GUILE], [guile-2.2])
 GUILE_PROGS
 GUILE_FLAGS
 GUILE_SITE_DIR
--- origsrc/yacl-1.1.1/src/aes/Makefile.am	2016-08-21 13:06:43.000000000 +0900
+++ src/yacl-1.1.1/src/aes/Makefile.am	2020-02-15 12:25:55.126809000 +0900
@@ -2,7 +2,7 @@
 
 AUTOMAKE_OPTIONS = subdir-objects
 
-lib_LTLIBRARIES = libaes.la
+noinst_LTLIBRARIES = libaes.la
 
 libaes_la_SOURCES = aes-cbc.c \
                     aes-ctr.c \
--- origsrc/yacl-1.1.1/test/Makefile.am	2016-08-21 13:06:43.000000000 +0900
+++ src/yacl-1.1.1/test/Makefile.am	2020-02-15 12:30:16.143965800 +0900
@@ -4,7 +4,7 @@ noinst_PROGRAMS = basic afl
 basic_SOURCES = basic.c
 basic_CFLAGS = $(LIBGLIB_CFLAGS) $(LIBSODIUM_CFLAGS)
 basic_LDADD = ../libyacl.la $(LIBGLIB_LIBS) $(LIBSODIUM_LIBS)
-basic_LDFLAGS = -all-static
+basic_LDFLAGS =
 
 afl_SOURCES = afl.c
 afl_CFLAGS = $(LIBGLIB_CFLAGS) $(LIBSODIUM_CFLAGS)
