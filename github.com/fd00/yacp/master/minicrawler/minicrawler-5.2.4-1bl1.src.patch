--- origsrc/minicrawler-5.2.4/Makefile.am	2023-03-28 20:18:25.000000000 +0900
+++ src/minicrawler-5.2.4/Makefile.am	2023-04-06 16:29:03.301993800 +0900
@@ -1,6 +1,7 @@
 ## No default includes
 DEFAULT_INCLUDES = 
-AM_CXXFLAGS = -std=c++14
+AM_CXXFLAGS = -std=gnu++14
+AM_CPPFLAGS = -I$(top_builddir)/src -I$(top_builddir)/src/h
 
 minicrawlerincludedir = $(includedir)/libminicrawler-@MINICRAWLER_API_VERSION@/minicrawler
 minicrawlerinclude_HEADERS = src/url/minicrawler-url.h src/h/minicrawler.h
@@ -12,12 +13,12 @@ minicrawler_sources = src/main.c src/cli
 lib_LTLIBRARIES = libminicrawler/libminicrawler-url-@MINICRAWLER_API_VERSION@.la libminicrawler/libminicrawler-@MINICRAWLER_API_VERSION@.la
 
 libminicrawler_libminicrawler_url_@MINICRAWLER_API_VERSION@_la_SOURCES = $(libminicrawler_url_sources)
-libminicrawler_libminicrawler_url_@MINICRAWLER_API_VERSION@_la_LDFLAGS = -version-info $(MINICRAWLER_LT_VERSION)
+libminicrawler_libminicrawler_url_@MINICRAWLER_API_VERSION@_la_LDFLAGS = -no-undefined -version-info $(MINICRAWLER_LT_VERSION)
 libminicrawler_libminicrawler_url_@MINICRAWLER_API_VERSION@_la_CPPFLAGS = $(AM_CPPFLAGS) -DBUILDING_MCRAWLER
 libminicrawler_libminicrawler_url_@MINICRAWLER_API_VERSION@_la_CFLAGS = $(AM_CFLAGS) -fvisibility=hidden
 
 libminicrawler_libminicrawler_@MINICRAWLER_API_VERSION@_la_SOURCES =  $(libminicrawler_sources)
-libminicrawler_libminicrawler_@MINICRAWLER_API_VERSION@_la_LDFLAGS = -version-info $(MINICRAWLER_LT_VERSION)
+libminicrawler_libminicrawler_@MINICRAWLER_API_VERSION@_la_LDFLAGS = -no-undefined -version-info $(MINICRAWLER_LT_VERSION)
 libminicrawler_libminicrawler_@MINICRAWLER_API_VERSION@_la_CPPFLAGS = $(AM_CPPFLAGS) -DBUILDING_MCRAWLER
 libminicrawler_libminicrawler_@MINICRAWLER_API_VERSION@_la_CFLAGS = $(AM_CFLAGS) -fvisibility=hidden
 
--- origsrc/minicrawler-5.2.4/configure.ac	2023-03-28 20:18:25.000000000 +0900
+++ src/minicrawler-5.2.4/configure.ac	2023-04-06 16:32:38.561858400 +0900
@@ -46,8 +46,10 @@ AC_CHECK_LIB([icuuc], [uidna_nameToASCII
     AC_CHECK_LIB([icuuc], [uidna_nameToASCII_64], [],
     AC_CHECK_LIB([icuuc], [uidna_nameToASCII_65], [],
     AC_CHECK_LIB([icuuc], [uidna_nameToASCII_66], [],
-        AC_CHECK_LIB([icuuc], [uidna_nameToASCII_67], [], AC_MSG_WARN([libicu not found: non-ascii domain names won't be supported!])))))))))))))))))
-AC_SEARCH_LIBS([iconv], [iconv], [], AC_MSG_ERROR([please install iconv dev files]))
+        AC_CHECK_LIB([icuuc], [uidna_nameToASCII_67], [], 
+        AC_CHECK_LIB([icuuc], [uidna_nameToASCII_72], [],
+        AC_MSG_WARN([libicu not found: non-ascii domain names won't be supported!]))))))))))))))))))
+AC_CHECK_LIB([iconv], [libiconv], [], AC_MSG_ERROR([please install iconv dev files]))
 
 AC_ARG_WITH([ssl],
 			[AS_HELP_STRING([--without-ssl], [disable support for https])],
--- origsrc/minicrawler-5.2.4/src/tpl/tpl.c	2023-03-28 20:18:25.000000000 +0900
+++ src/minicrawler-5.2.4/src/tpl/tpl.c	2023-04-06 15:58:22.095763400 +0900
@@ -57,7 +57,7 @@ typedef unsigned __int64 uint64_t;
 #define S_ISREG(mode)  (((mode) & S_IFMT) == S_IFREG)
 #endif
 
-#if ( defined __CYGWIN__ || defined __MINGW32__ || defined _WIN32 )
+#if ( defined __MINGW32__ || defined _WIN32 )
 #include "win/mman.h"   /* mmap */
 #else
 #include <sys/mman.h>   /* mmap */
