"use strict";(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"\u7248\u672c","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","collapsed":true,"collapsible":true,"label":"\u7b80\u4ecb","items":[{"type":"link","label":"\u52a8\u673a","href":"/zh-hans/docs/introduction/motivation","docId":"introduction/motivation"},{"type":"link","label":"\u6838\u5fc3\u6982\u5ff5","href":"/zh-hans/docs/introduction/core-concepts","docId":"introduction/core-concepts"},{"type":"link","label":"\u5b89\u88c5","href":"/zh-hans/docs/introduction/installation","docId":"introduction/installation"},{"type":"link","label":"\u5feb\u901f\u4e0a\u624b","href":"/zh-hans/docs/introduction/getting-started","docId":"introduction/getting-started"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"\u57fa\u7840\u6559\u7a0b","items":[{"type":"link","label":"\u7b80\u4ecb","href":"/zh-hans/docs/basic-tutorial/intro","docId":"basic-tutorial/intro"},{"type":"link","label":"Atom","href":"/zh-hans/docs/basic-tutorial/atoms","docId":"basic-tutorial/atoms"},{"type":"link","label":"Selector","href":"/zh-hans/docs/basic-tutorial/selectors","docId":"basic-tutorial/selectors"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"\u6307\u5357","items":[{"type":"link","label":"Asynchronous Data Queries","href":"/zh-hans/docs/guides/asynchronous-data-queries","docId":"guides/asynchronous-data-queries"},{"type":"link","label":"Atom Effects","href":"/zh-hans/docs/guides/atom-effects","docId":"guides/atom-effects"},{"type":"link","label":"\u6d4b\u8bd5","href":"/zh-hans/docs/guides/testing","docId":"guides/testing"},{"type":"link","label":"Transitions","href":"/zh-hans/docs/guides/transitions","docId":"guides/transitions"},{"type":"link","label":"\u5f00\u53d1\u5de5\u5177","href":"/zh-hans/docs/guides/dev-tools","docId":"guides/dev-tools"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"API Reference","items":[{"type":"link","label":"<RecoilRoot />","href":"/zh-hans/docs/api-reference/core/RecoilRoot","docId":"api-reference/core/RecoilRoot"},{"type":"category","collapsed":true,"collapsible":true,"label":"\u72b6\u6001","items":[{"type":"link","label":"atom()","href":"/zh-hans/docs/api-reference/core/atom","docId":"api-reference/core/atom"},{"type":"link","label":"selector()","href":"/zh-hans/docs/api-reference/core/selector","docId":"api-reference/core/selector"},{"type":"link","label":"Loadable","href":"/zh-hans/docs/api-reference/core/Loadable","docId":"api-reference/core/Loadable"},{"type":"link","label":"useRecoilState()","href":"/zh-hans/docs/api-reference/core/useRecoilState","docId":"api-reference/core/useRecoilState"},{"type":"link","label":"useRecoilValue()","href":"/zh-hans/docs/api-reference/core/useRecoilValue","docId":"api-reference/core/useRecoilValue"},{"type":"link","label":"useSetRecoilState()","href":"/zh-hans/docs/api-reference/core/useSetRecoilState","docId":"api-reference/core/useSetRecoilState"},{"type":"link","label":"useResetRecoilState()","href":"/zh-hans/docs/api-reference/core/useResetRecoilState","docId":"api-reference/core/useResetRecoilState"},{"type":"link","label":"useRecoilStateLoadable()","href":"/zh-hans/docs/api-reference/core/useRecoilStateLoadable","docId":"api-reference/core/useRecoilStateLoadable"},{"type":"link","label":"useRecoilValueLoadable()","href":"/zh-hans/docs/api-reference/core/useRecoilValueLoadable","docId":"api-reference/core/useRecoilValueLoadable"},{"type":"link","label":"useGetRecoilValueInfo()","href":"/zh-hans/docs/api-reference/core/useGetRecoilValueInfo","docId":"api-reference/core/useGetRecoilValueInfo"},{"type":"link","label":"useRecoilRefresher()","href":"/zh-hans/docs/api-reference/core/useRecoilRefresher","docId":"api-reference/core/useRecoilRefresher"},{"type":"link","label":"isRecoilValue()","href":"/zh-hans/docs/api-reference/core/isRecoilValue","docId":"api-reference/core/isRecoilValue"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"Utils","items":[{"type":"link","label":"atomFamily()","href":"/zh-hans/docs/api-reference/utils/atomFamily","docId":"api-reference/utils/atomFamily"},{"type":"link","label":"selectorFamily()","href":"/zh-hans/docs/api-reference/utils/selectorFamily","docId":"api-reference/utils/selectorFamily"},{"type":"link","label":"constSelector()","href":"/zh-hans/docs/api-reference/utils/constSelector","docId":"api-reference/utils/constSelector"},{"type":"link","label":"errorSelector()","href":"/zh-hans/docs/api-reference/utils/errorSelector","docId":"api-reference/utils/errorSelector"},{"type":"link","label":"noWait()","href":"/zh-hans/docs/api-reference/utils/noWait","docId":"api-reference/utils/noWait"},{"type":"link","label":"waitForAll()","href":"/zh-hans/docs/api-reference/utils/waitForAll","docId":"api-reference/utils/waitForAll"},{"type":"link","label":"waitForAllSettled()","href":"/zh-hans/docs/api-reference/utils/waitForAllSettled","docId":"api-reference/utils/waitForAllSettled"},{"type":"link","label":"waitForNone()","href":"/zh-hans/docs/api-reference/utils/waitForNone","docId":"api-reference/utils/waitForNone"},{"type":"link","label":"waitForAny()","href":"/zh-hans/docs/api-reference/utils/waitForAny","docId":"api-reference/utils/waitForAny"}]},{"type":"link","label":"useRecoilTransaction()","href":"/zh-hans/docs/api-reference/core/useRecoilTransaction","docId":"api-reference/core/useRecoilTransaction"},{"type":"link","label":"useRecoilCallback()","href":"/zh-hans/docs/api-reference/core/useRecoilCallback","docId":"api-reference/core/useRecoilCallback"},{"type":"category","collapsed":true,"collapsible":true,"label":"\u5feb\u7167","items":[{"type":"link","label":"Snapshot","href":"/zh-hans/docs/api-reference/core/Snapshot","docId":"api-reference/core/Snapshot"},{"type":"link","label":"useRecoilTransactionObserver()","href":"/zh-hans/docs/api-reference/core/useRecoilTransactionObserver","docId":"api-reference/core/useRecoilTransactionObserver"},{"type":"link","label":"useRecoilSnapshot()","href":"/zh-hans/docs/api-reference/core/useRecoilSnapshot","docId":"api-reference/core/useRecoilSnapshot"},{"type":"link","label":"useGotoRecoilSnapshot()","href":"/zh-hans/docs/api-reference/core/useGotoRecoilSnapshot","docId":"api-reference/core/useGotoRecoilSnapshot"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"\u6742\u9879","items":[{"type":"link","label":"useRecoilStoreID()","href":"/zh-hans/docs/api-reference/core/useRecoilStoreID","docId":"api-reference/core/useRecoilStoreID"},{"type":"link","label":"useRecoilBridgeAcrossReactRoots()","href":"/zh-hans/docs/api-reference/core/useRecoilBridgeAcrossReactRoots","docId":"api-reference/core/useRecoilBridgeAcrossReactRoots"}]},{"type":"link","label":"Recoil Environment","href":"/zh-hans/docs/api-reference/core/RecoilEnv","docId":"api-reference/core/RecoilEnv"}]}],"recoil-sync":[{"type":"link","label":"Introduction","href":"/zh-hans/docs/recoil-sync/introduction","docId":"recoil-sync/introduction"},{"type":"link","label":"Syncing Atoms","href":"/zh-hans/docs/recoil-sync/sync-effect","docId":"recoil-sync/sync-effect"},{"type":"link","label":"Implementing a Store","href":"/zh-hans/docs/recoil-sync/implement-store","docId":"recoil-sync/implement-store"},{"type":"link","label":"URL Persistence","href":"/zh-hans/docs/recoil-sync/url-persistence","docId":"recoil-sync/url-persistence"},{"type":"category","collapsed":true,"collapsible":true,"label":"API Reference","items":[{"type":"link","label":"<RecoilSync>","href":"/zh-hans/docs/recoil-sync/api/RecoilSync","docId":"recoil-sync/api/RecoilSync"},{"type":"link","label":"syncEffect()","href":"/zh-hans/docs/recoil-sync/api/syncEffect","docId":"recoil-sync/api/syncEffect"},{"type":"category","collapsed":true,"collapsible":true,"label":"URL Persistence","items":[{"type":"link","label":"<RecoilURLSync>","href":"/zh-hans/docs/recoil-sync/api/RecoilURLSync","docId":"recoil-sync/api/RecoilURLSync"},{"type":"link","label":"urlSyncEffect()","href":"/zh-hans/docs/recoil-sync/api/urlSyncEffect","docId":"recoil-sync/api/urlSyncEffect"},{"type":"link","label":"<RecoilURLSyncJSON>","href":"/zh-hans/docs/recoil-sync/api/RecoilURLSyncJSON","docId":"recoil-sync/api/RecoilURLSyncJSON"},{"type":"link","label":"<RecoilURLSyncTransit>","href":"/zh-hans/docs/recoil-sync/api/RecoilURLSyncTransit","docId":"recoil-sync/api/RecoilURLSyncTransit"}]}]}],"refine":[{"type":"link","label":"Refine","href":"/zh-hans/docs/refine/Introduction","docId":"refine/Introduction"},{"type":"category","collapsed":true,"collapsible":true,"label":"API Reference","items":[{"type":"link","label":"Utilities","href":"/zh-hans/docs/refine/api/Utilities","docId":"refine/api/Utilities"},{"type":"link","label":"Checkers","href":"/zh-hans/docs/refine/api/Checkers","docId":"refine/api/Checkers"},{"type":"link","label":"Primitive Checkers","href":"/zh-hans/docs/refine/api/Primitive_Checkers","docId":"refine/api/Primitive_Checkers"},{"type":"link","label":"Collection Checkers","href":"/zh-hans/docs/refine/api/Collection_Checkers","docId":"refine/api/Collection_Checkers"},{"type":"link","label":"Advanced Checkers","href":"/zh-hans/docs/refine/api/Advanced_Checkers","docId":"refine/api/Advanced_Checkers"}]}],"recoil-relay":[{"type":"link","label":"Introduction","href":"/zh-hans/docs/recoil-relay/introduction","docId":"recoil-relay/introduction"},{"type":"link","label":"Relay Environment","href":"/zh-hans/docs/recoil-relay/environment","docId":"recoil-relay/environment"},{"type":"link","label":"GraphQL Queries","href":"/zh-hans/docs/recoil-relay/graphql-queries","docId":"recoil-relay/graphql-queries"},{"type":"link","label":"GraphQL Mutations","href":"/zh-hans/docs/recoil-relay/graphql-mutations","docId":"recoil-relay/graphql-mutations"},{"type":"link","label":"GraphQL Subscriptions","href":"/zh-hans/docs/recoil-relay/graphql-subscriptions","docId":"recoil-relay/graphql-subscriptions"},{"type":"link","label":"GraphQL Atom Effects","href":"/zh-hans/docs/recoil-relay/graphql-effects","docId":"recoil-relay/graphql-effects"},{"type":"category","collapsed":true,"collapsible":true,"label":"API Reference","items":[{"type":"link","label":"EnvironmentKey","href":"/zh-hans/docs/recoil-relay/api/EnvironmentKey","docId":"recoil-relay/api/EnvironmentKey"},{"type":"link","label":"<RecoilRelayEnvironment>","href":"/zh-hans/docs/recoil-relay/api/RecoilRelayEnvironment","docId":"recoil-relay/api/RecoilRelayEnvironment"},{"type":"link","label":"<RecoilRelayEnvironmentProvider>","href":"/zh-hans/docs/recoil-relay/api/RecoilRelayEnvironmentProvider","docId":"recoil-relay/api/RecoilRelayEnvironmentProvider"},{"type":"link","label":"graphQLSelector()","href":"/zh-hans/docs/recoil-relay/api/graphQLSelector","docId":"recoil-relay/api/graphQLSelector"},{"type":"link","label":"graphQLSelectorFamily()","href":"/zh-hans/docs/recoil-relay/api/graphQLSelectorFamily","docId":"recoil-relay/api/graphQLSelectorFamily"},{"type":"category","collapsed":true,"collapsible":true,"label":"Atom Effects","items":[{"type":"link","label":"graphQLQueryEffect()","href":"/zh-hans/docs/recoil-relay/api/graphQLQueryEffect","docId":"recoil-relay/api/graphQLQueryEffect"},{"type":"link","label":"graphQLSubscriptionEffect()","href":"/zh-hans/docs/recoil-relay/api/graphQLSubscriptionEffect","docId":"recoil-relay/api/graphQLSubscriptionEffect"},{"type":"link","label":"graphQLMutationEffect()","href":"/zh-hans/docs/recoil-relay/api/graphQLMutationEffect","docId":"recoil-relay/api/graphQLMutationEffect"}]}]}]},"docs":{"api-reference/core/atom":{"id":"api-reference/core/atom","title":"atom(options)","description":"\u4e00\u4e2a atom \u8868\u793a Recoil \u7684 state\u3002atom() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u53ef\u5199\u7684 RecoilState \u5bf9\u8c61\u3002","sidebar":"docs"},"api-reference/core/isRecoilValue":{"id":"api-reference/core/isRecoilValue","title":"isRecoilValue(value)","description":"\u5982\u679c value \u662f\u4e00\u4e2a atom \u6216\u8005 selector \u5219\u8fd4\u56de true\uff0c\u53cd\u4e4b\uff0c\u8fd4\u56de false\u3002","sidebar":"docs"},"api-reference/core/Loadable":{"id":"api-reference/core/Loadable","title":"class Loadable","description":"Loadable \u5bf9\u8c61\u4ee3\u8868 Recoil atom \u6216 selector \u7684\u5f53\u524d\u72b6\u6001\u3002\u6b64\u72b6\u6001\u53ef\u80fd\u6709\u4e00\u4e2a\u53ef\u7528\u503c\uff0c\u4e5f\u53ef\u80fd\u5904\u4e8e\u9519\u8bef\u72b6\u6001\uff0c\u6216\u8005\u662f\u4ecd\u5904\u4e8e pending \u72b6\u6001\u7684\u5f02\u6b65\u89e3\u6790\u3002\u4e00\u4e2a Loadable \u6709\u5982\u4e0b\u63a5\u53e3\uff1a","sidebar":"docs"},"api-reference/core/RecoilEnv":{"id":"api-reference/core/RecoilEnv","title":"Recoil Environment","description":"RecoilEnv","sidebar":"docs"},"api-reference/core/RecoilRoot":{"id":"api-reference/core/RecoilRoot","title":"<RecoilRoot ...props />","description":"\u63d0\u4f9b\u4e86\u4e0a\u4e0b\u6587\uff0c\u5e76\u4e14 atom \u6709\u503c\u3002\u6b64\u7ec4\u4ef6\u5fc5\u987b\u662f\u6240\u6709\u4f7f\u7528 Recoil hook \u7684\u6839\u7ec4\u4ef6\u3002","sidebar":"docs"},"api-reference/core/selector":{"id":"api-reference/core/selector","title":"selector(options)","description":"\u5728 Recoil \u91cc\uff0cselector \u4ee3\u8868\u4e00\u4e2a\u51fd\u6570\uff0c\u6216 \u6d3e\u751f\u72b6\u6001\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u4eec\u770b\u4f5c\u662f\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u6ca1\u6709\u526f\u4f5c\u7528\u7684 \\"\u5e42\u7b49\u64cd\u4f5c\\" \u6216 \\"\u7eaf\u51fd\u6570\\"\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u7ed9\u5b9a\u7684\u4f9d\u8d56\u503c\u6c38\u8fdc\u8fd4\u56de\u76f8\u540c\u7684\u503c\u3002\u5982\u679c\u53ea\u63d0\u4f9b get \u65b9\u6cd5\uff0c\u5219 selector \u4fbf\u662f\u53ea\u8bfb\u7684\uff0c\u5e76\u4e14\u4f1a\u8fd4\u56de\u4e00\u4e2a RecoilValueReadOnly \u5bf9\u8c61\u3002\u5982\u679c\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a set \u65b9\u6cd5\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u5c06\u53d8\u4e3a\u4e00\u4e2a\u53ef\u5199\u7684 RecoilState \u5bf9\u8c61\u3002","sidebar":"docs"},"api-reference/core/Snapshot":{"id":"api-reference/core/Snapshot","title":"class Snapshot","description":"Snapshot \u5bf9\u8c61\u662f Recoil atoms \u72b6\u6001\u7684\u4e00\u4e2a\u4e0d\u53ef\u6539\u53d8\u7684\u5feb\u7167\u3002\u5b83\u7684\u76ee\u7684\u662f\u89c4\u8303\u7528\u4e8e\u89c2\u5bdf\u3001\u68c0\u67e5\u548c\u7ba1\u7406\u5168\u5c40 Recoil \u72b6\u6001\u7684 API\u3002\u5bf9\u4e8e\u5f00\u53d1\u5de5\u5177\u3001\u5168\u5c40\u72b6\u6001\u540c\u6b65\u3001\u5386\u53f2\u5bfc\u822a\u7b49\u5927\u90e8\u5206\u9700\u6c42\uff0c\u5b83\u90fd\u662f\u5f88\u6709\u7528\u7684\u3002","sidebar":"docs"},"api-reference/core/useGetRecoilValueInfo":{"id":"api-reference/core/useGetRecoilValueInfo","title":"useGetRecoilValueInfo_UNSTABLE()","description":"\u6b64\u94a9\u5b50\u51fd\u6570\u5141\u8bb8\u7ec4\u4ef6 \u201c\u7aa5\u89c6\u201d atom \u6216\u8005 selector \u7684\u5f53\u524d\u72b6\u6001\u3001\u503c\u548c\u5176\u4ed6\u4fe1\u606f\u3002\u8fd9\u7c7b\u4f3c\u4e8e Snapshot \u4e2d\u7684 getInfo_UNSTABLE() \u65b9\u6cd5\u3002","sidebar":"docs"},"api-reference/core/useGotoRecoilSnapshot":{"id":"api-reference/core/useGotoRecoilSnapshot","title":"useGotoRecoilSnapshot(snapshot)","description":"\u6b64\u94a9\u5b50\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u4ee5 Snapshot \u4f5c\u4e3a\u53c2\u6570\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u4e14\u5c06\u66f4\u65b0\u5f53\u524d\u7684 `` \u72b6\u6001\u4ee5\u5339\u914d atom \u72b6\u6001\u3002","sidebar":"docs"},"api-reference/core/useRecoilBridgeAcrossReactRoots":{"id":"api-reference/core/useRecoilBridgeAcrossReactRoots","title":"useRecoilBridgeAcrossReactRoots()","description":"\u5e2e\u52a9\u6865\u63a5 Recoil \u72b6\u6001\u4e0e\u5d4c\u5957\u7684 React root \u548c\u6e32\u67d3\u5668\u7684\u94a9\u5b50\u51fd\u6570\u3002","sidebar":"docs"},"api-reference/core/useRecoilCallback":{"id":"api-reference/core/useRecoilCallback","title":"useRecoilCallback(callback, deps)","description":"\u8fd9\u4e2a\u94a9\u5b50\u7c7b\u4f3c\u4e8e useCallback()\uff0c\u4f46\u5c06\u4e3a\u4f60\u7684\u56de\u8c03\u63d0\u4f9b\u4e00\u4e2a API\uff0c\u4ee5\u4fbf\u4e0e Recoil \u72b6\u6001\u4e00\u8d77\u5de5\u4f5c\u3002\u8fd9\u4e2a\u94a9\u5b50\u53ef\u4ee5\u7528\u6765\u6784\u9020\u4e00\u4e2a\u56de\u8c03\uff0c\u8fd9\u4e2a\u56de\u8c03\u53ef\u4ee5\u8bbf\u95ee Recoil \u72b6\u6001\u7684\u53ea\u8bfb Snapshot\uff0c\u5e76\u4e14\u80fd\u591f\u5f02\u6b65\u66f4\u65b0\u5f53\u524d\u7684 Recoil \u72b6\u6001\u3002","sidebar":"docs"},"api-reference/core/useRecoilRefresher":{"id":"api-reference/core/useRecoilRefresher","title":"useRecoilRefresher_UNSTABLE(state)","description":"The useRecoilRefresher_UNSTABLE() hook returns a callback which can be called with a selector to clear any caches associated with it.  If a selector makes any async requests this would cause it to re-evaluate and issue a new request.  This is useful, for example, if you wish to refresh with newer data or re-try after an error.  (See Asynchronous Data Queries Guide)","sidebar":"docs"},"api-reference/core/useRecoilSnapshot":{"id":"api-reference/core/useRecoilSnapshot","title":"useRecoilSnapshot()","description":"\u6b64\u94a9\u5b50\u51fd\u6570\u5728\u6e32\u67d3\u671f\u95f4\u540c\u6b65\u8fd4\u56de\u4e00\u4e2a Snapshot \u5bf9\u8c61\uff0c\u5e76\u4e3a\u6240\u6709 Recoil \u72b6\u6001\u66f4\u6539\u8ba2\u9605\u8c03\u7528\u7ec4\u4ef6\u3002\u4f60\u6216\u8bb8\u4f1a\u60f3\u5c06\u6b64\u94a9\u5b50\u51fd\u6570\u7528\u4e8e\u8c03\u8bd5\u5de5\u5177\uff0c\u6216\u8005\u7528\u4e8e\u670d\u52a1\u7aef\u6e32\u67d3\uff0c\u56e0\u4e3a\u5728\u521d\u59cb\u6e32\u67d3\u671f\u95f4\uff0c\u6709\u9700\u8981\u62e5\u6709\u540c\u6b65\u72b6\u6001\u7684\u5730\u65b9\u3002","sidebar":"docs"},"api-reference/core/useRecoilState":{"id":"api-reference/core/useRecoilState","title":"useRecoilState(state)","description":"\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f state \u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a setter \u51fd\u6570\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u4f1a\u66f4\u65b0\u4e3a\u7ed9\u5b9a state \u7684\u503c\u3002","sidebar":"docs"},"api-reference/core/useRecoilStateLoadable":{"id":"api-reference/core/useRecoilStateLoadable","title":"useRecoilStateLoadable(state)","description":"\u6b64\u94a9\u5b50\u53ef\u7528\u4e8e\u8bfb\u53d6\u5f02\u6b65 selector \u7684\u503c\u3002\u4e3a\u83b7\u53d6\u5230\u6307\u5b9a\u72b6\u6001\u503c\uff0c\u6b64\u94a9\u5b50\u5c06\u9690\u542b\u5730\u8ba2\u9605\u5bf9\u5e94\u7ec4\u4ef6\u3002","sidebar":"docs"},"api-reference/core/useRecoilStoreID":{"id":"api-reference/core/useRecoilStoreID","title":"useRecoilStoreID()","description":"Provides a StoreID associated with the currently active ``.","sidebar":"docs"},"api-reference/core/useRecoilTransaction":{"id":"api-reference/core/useRecoilTransaction","title":"useRecoilTransaction_UNSTABLE(callback, deps)","description":"Create a transaction callback which can be used to atomically update multiple atoms in a safe, easy, and efficient way.  Provide a callback for the transaction as a pure function which can get() or set() multiple atoms.  A transaction is similar to the \\"updater\\" form of setting Recoil state, but can operate over multiple atoms.  Writes are visible to subsequent reads from within the same transaction.","sidebar":"docs"},"api-reference/core/useRecoilTransactionObserver":{"id":"api-reference/core/useRecoilTransactionObserver","title":"useRecoilTransactionObserver_UNSTABLE(callback)","description":"\u63d0\u793a: \u8bf7\u6ce8\u610f\u6b64 API \u76ee\u524d\u5c1a\u5904\u4e8e\u4e0d\u7a33\u5b9a\u72b6\u6001","sidebar":"docs"},"api-reference/core/useRecoilValue":{"id":"api-reference/core/useRecoilValue","title":"useRecoilValue(state)","description":"\u8fd4\u56de\u7ed9\u5b9a Recoil state \u7684\u503c\u3002","sidebar":"docs"},"api-reference/core/useRecoilValueLoadable":{"id":"api-reference/core/useRecoilValueLoadable","title":"useRecoilValueLoadable(state)","description":"\u6b64 hook \u7528\u6765\u8bfb\u53d6\u5f02\u6b65 selector \u7684\u503c\u3002\u4f7f\u7528\u6b64 hook \u4f1a\u4f7f\u7ec4\u4ef6\u9690\u5f0f\u5730\u8ba2\u9605\u7ed9\u5b9a\u7684 state\u3002","sidebar":"docs"},"api-reference/core/useResetRecoilState":{"id":"api-reference/core/useResetRecoilState","title":"useResetRecoilState(state)","description":"\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u628a\u7ed9\u5b9a state \u91cd\u7f6e\u4e3a\u5176\u521d\u59cb\u503c\u3002","sidebar":"docs"},"api-reference/core/useSetRecoilState":{"id":"api-reference/core/useSetRecoilState","title":"useSetRecoilState(state)","description":"\u8fd4\u56de\u4e00\u4e2a setter \u51fd\u6570\uff0c\u7528\u6765\u66f4\u65b0\u53ef\u5199 Recoil state \u7684\u503c\u3002","sidebar":"docs"},"api-reference/utils/atomFamily":{"id":"api-reference/utils/atomFamily","title":"atomFamily(options)","description":"\u8fd4\u56de\u4e00\u4e2a\u8fd4\u56de\u53ef\u5199\u7684 RecoilState atom \u51fd\u6570\u3002","sidebar":"docs"},"api-reference/utils/constSelector":{"id":"api-reference/utils/constSelector","title":"constSelector(constant)","description":"\u4e00\u4e2a\u6c38\u8fdc\u63d0\u4f9b\u5e38\u91cf\u503c\u7684 selector\u3002","sidebar":"docs"},"api-reference/utils/errorSelector":{"id":"api-reference/utils/errorSelector","title":"errorSelector(message)","description":"\u4e00\u4e2a\u603b\u662f\u629b\u51fa\u5df2\u6709\u9519\u8bef\u7684 selector\u3002","sidebar":"docs"},"api-reference/utils/noWait":{"id":"api-reference/utils/noWait","title":"noWait(state)","description":"\u4e00\u4e2a selector helper \u65b9\u6cd5\uff0c\u8fd4\u56de\u503c\u4e3a\u4ee3\u8868\u6240\u63d0\u4f9b\u7684 atom \u6216 selector \u5f53\u524d\u72b6\u6001\u7684 Loadable\u3002","sidebar":"docs"},"api-reference/utils/selectorFamily":{"id":"api-reference/utils/selectorFamily","title":"selectorFamily(options)","description":"\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u53ea\u8bfb\u7684 RecoilValueReadOnly \u6216\u8005\u53ef\u5199\u7684 RecoilState selector\u3002","sidebar":"docs"},"api-reference/utils/waitForAll":{"id":"api-reference/utils/waitForAll","title":"waitForAll(dependencies)","description":"\u4e00\u4e2a\u5141\u8bb8\u6211\u4eec\u5e76\u53d1\u8ba1\u7b97\u591a\u4e2a\u5f02\u6b65\u4f9d\u8d56\u9879\u7684\u5e76\u53d1 helper \u65b9\u6cd5\u3002","sidebar":"docs"},"api-reference/utils/waitForAllSettled":{"id":"api-reference/utils/waitForAllSettled","title":"waitForAllSettled(dependencies)","description":"\u4e00\u4e2a\u8fd4\u56de\u4e00\u7ec4\u8868\u793a\u8bf7\u6c42\u4f9d\u8d56\u9879\u5f53\u524d\u72b6\u6001\u7684 Loadables \u7684\u5e76\u53d1 helper \u65b9\u6cd5\u3002\u5b83\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u81f3\u5c11\u6709\u4e00\u4e2a\u4f9d\u8d56\u9879\u53ef\u7528\u3002","sidebar":"docs"},"api-reference/utils/waitForAny":{"id":"api-reference/utils/waitForAny","title":"waitForAny(dependencies)","description":"\u4e00\u4e2a\u8fd4\u56de\u4e00\u7ec4\u8868\u793a\u8bf7\u6c42\u4f9d\u8d56\u9879\u5f53\u524d\u72b6\u6001\u7684 Loadables \u7684\u5e76\u53d1 helper \u65b9\u6cd5\u3002\u5b83\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u81f3\u5c11\u6709\u4e00\u4e2a\u4f9d\u8d56\u9879\u53ef\u7528\u3002","sidebar":"docs"},"api-reference/utils/waitForNone":{"id":"api-reference/utils/waitForNone","title":"waitForNone(dependencies)","description":"\u4e00\u4e2a\u5e76\u53d1 helper \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u7ec4\u8868\u793a\u8bf7\u6c42\u7684\u4f9d\u8d56\u9879\u5f53\u524d\u72b6\u6001\u7684 Loadables\u3002","sidebar":"docs"},"basic-tutorial/atoms":{"id":"basic-tutorial/atoms","title":"Atom","description":"Atom \u5305\u542b\u6211\u4eec\u5e94\u7528\u4e2d\u72b6\u6001\u7684\u6765\u6e90\u3002\u5728\u6211\u4eec\u7684 Todo List \u4e2d\uff0c\u6765\u6e90\u5c06\u4f1a\u662f\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4ee3\u8868\u4e00\u4e2a Todo Item\u3002","sidebar":"docs"},"basic-tutorial/demo":{"id":"basic-tutorial/demo","title":"Demo (Todo List)","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"basic-tutorial/intro":{"id":"basic-tutorial/intro","title":"\u7b80\u4ecb","description":"\u672c\u7ae0\u8282\u5047\u5b9a\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 Recoil \u548c React\u3002 \u6709\u5173\u5982\u4f55\u4ece\u5934\u5f00\u59cb\u4f7f\u7528 Recoil \u548c React \u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5feb\u901f\u4e0a\u624b\u9875\u9762\u3002 \u5047\u5b9a\u4ee5\u4e0b\u5404\u7ae0\u8282\u4e2d\u7684\u7ec4\u4ef6\u5728\u7ec4\u4ef6\u6811\u4e2d\u5df2\u5177\u6709 ``\u3002","sidebar":"docs"},"basic-tutorial/performance":{"id":"basic-tutorial/performance","title":"Bonus: Performance","description":"Our existing implementation is perfectly valid, but there are some important performance implications to consider as our app evolves from being a small toy project to a million-line corporate program."},"basic-tutorial/selectors":{"id":"basic-tutorial/selectors","title":"Selector","description":"Selector \u4ee3\u8868\u4e00\u4e2a\u6d3e\u751f\u72b6\u6001\uff0c\u4f60\u53ef\u4ee5\u5c06\u6d3e\u751f\u72b6\u6001\u89c6\u4e3a\u5c06\u72b6\u6001\u4f20\u9012\u7ed9\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fee\u6539\u7ed9\u5b9a\u72b6\u6001\u7684\u7eaf\u51fd\u6570\u7684\u8f93\u51fa\u3002","sidebar":"docs"},"guides/asynchronous-data-queries":{"id":"guides/asynchronous-data-queries","title":"\u5f02\u6b65\u6570\u636e\u67e5\u8be2","description":"Recoil \u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u8fc7\u6570\u636e\u6d41\u56fe\u5c06\u72b6\u6001\u548c\u6d3e\u751f\u72b6\u6001\u6620\u5c04\u5230 React \u7ec4\u4ef6\u65b9\u6cd5\u3002\u5176\u771f\u6b63\u5f3a\u5927\u7684\u662f\uff0c\u56fe\u4e2d\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u5f02\u6b65\u7684\u3002\u8fd9\u4f7f\u5f97\u5728\u540c\u6b65 React \u7ec4\u4ef6\u6e32\u67d3\u5668\u4e2d\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\u53d8\u5f97\u66f4\u5bb9\u6613\u3002Recoil \u5141\u8bb8\u4f60\u5728 selector \u7684\u6570\u636e\u6d41\u56fe\u4e2d\u65e0\u7f1d\u6df7\u5408\u540c\u6b65\u548c\u5f02\u6b65\u51fd\u6570\u3002\u4e0d\u7528\u8fd4\u56de\u503c\u672c\u8eab\uff0c\u53ea\u9700\u4ece selector get \u56de\u8c03\u4e2d\u8fd4\u56de\u4e00\u4e2a\u503c\u7684 Promise\uff0c\u63a5\u53e3\u4ecd\u7136\u5b8c\u5168\u76f8\u540c\u3002\u56e0\u4e3a\u8fd9\u4e9b\u53ea\u662f selector\uff0c\u5176\u4ed6 selector \u4e5f\u53ef\u4ee5\u4f9d\u636e\u5b83\u4eec\u6765\u8fdb\u4e00\u6b65\u8f6c\u6362\u6570\u636e\u3002","sidebar":"docs"},"guides/atom-effects":{"id":"guides/atom-effects","title":"Atom Effects","description":"Atom Effects \u662f\u4e00\u4e2a\u65b0\u7684\u5b9e\u9a8c\u6027 API\uff0c\u7528\u4e8e\u7ba1\u7406\u526f\u4f5c\u7528\u548c\u521d\u59cb\u5316 Recoil atom\u3002\u5b83\u4eec\u6709\u5f88\u591a\u6709\u7528\u7684\u5e94\u7528\uff0c\u6bd4\u5982\u72b6\u6001\u6301\u4e45\u5316\u3001\u72b6\u6001\u540c\u6b65\u3001\u7ba1\u7406\u5386\u53f2\u3001\u65e5\u5fd7\u7b49\u3002\u5b83\u4eec\u88ab\u5b9a\u4e49\u4e3a atom \u5b9a\u4e49\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6bcf\u4e2a atom \u90fd\u53ef\u4ee5\u6307\u5b9a\u548c\u7ec4\u6210\u5b83\u4eec\u81ea\u5df1\u7684\u7b56\u7565\u3002\u8fd9\u4e2a API \u76ee\u524d\u4ecd\u5728\u53d1\u5c55\u4e2d\uff0c\u56e0\u6b64\u88ab\u6807\u8bb0\u4e3a _UNSTABLE\u3002","sidebar":"docs"},"guides/code-splitting":{"id":"guides/code-splitting","title":"Code Splitting","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"guides/dev-tools":{"id":"guides/dev-tools","title":"\u5f00\u53d1\u5de5\u5177","description":"Recoil \u5141\u8bb8\u4f60\u89c2\u5bdf\u548c\u66f4\u65b0 state \u7684\u53d8\u5316\u3002","sidebar":"docs"},"guides/migrating/from-mobx":{"id":"guides/migrating/from-mobx","title":"From MobX","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"guides/migrating/from-react-state":{"id":"guides/migrating/from-react-state","title":"From React State","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"guides/migrating/from-redux":{"id":"guides/migrating/from-redux","title":"From Redux","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"guides/testing":{"id":"guides/testing","title":"\u6d4b\u8bd5","description":"\u5728 React \u4e4b\u5916\u6d4b\u8bd5 Recoil Selectors","sidebar":"docs"},"guides/transitions":{"id":"guides/transitions","title":"React 18 Transitions","description":"React 18 offers a new hook useTransition() for transitioning to a new state while having control over what to render before the new state is ready. Recoil should be compatible with this approach and provides a consistent view with React state. However, React 18 may fallback from concurrent updates and does not yet officially support initiating transitions based on state changes to external stores. This is something the React team is looking into supporting, but until then we have added experimental support for this through the following hooks; other hooks should already fully support transitions, so only these variants are necessary. This API is considered experimental because there may be use cases we haven\u2019t found which are not handled.","sidebar":"docs"},"introduction/core-concepts":{"id":"introduction/core-concepts","title":"\u6838\u5fc3\u6982\u5ff5","description":"\u6982\u89c8","sidebar":"docs"},"introduction/getting-started":{"id":"introduction/getting-started","title":"\u5feb\u901f\u4e0a\u624b","description":"Create React App","sidebar":"docs"},"introduction/installation":{"id":"introduction/installation","title":"\u5b89\u88c5","description":"NPM","sidebar":"docs"},"introduction/motivation":{"id":"introduction/motivation","title":"\u52a8\u673a","description":"\u51fa\u4e8e\u517c\u5bb9\u6027\u548c\u7b80\u4fbf\u6027\u7684\u8003\u8651\uff0c\u76f8\u6bd4\u4f7f\u7528\u5916\u90e8\u7684\u5168\u5c40\u72b6\u6001\uff0c\u4f7f\u7528 React \u5185\u7f6e\u7684\u72b6\u6001\u7ba1\u7406\u80fd\u529b\u662f\u4e2a\u6700\u4f73\u7684\u9009\u62e9\u3002\u4f46\u662f React \u6709\u8fd9\u6837\u4e00\u4e9b\u5c40\u9650\u6027\uff1a","sidebar":"docs"},"mdx":{"id":"mdx","title":"Powered by MDX","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"recoil-relay/api/EnvironmentKey":{"id":"recoil-relay/api/EnvironmentKey","title":"EnvironmentKey","description":"An EnvironmentKey is class that can be used to match up a Relay Environment registered with ` in your ` with a GraphQL selector or atom effect that uses it to query.","sidebar":"recoil-relay"},"recoil-relay/api/graphQLMutationEffect":{"id":"recoil-relay/api/graphQLMutationEffect","title":"graphQLMutationEffect()","description":"The underlying atom effect for causing a local update to an atom to iniate commiting a GraphQL mutation to the server.","sidebar":"recoil-relay"},"recoil-relay/api/graphQLQueryEffect":{"id":"recoil-relay/api/graphQLQueryEffect","title":"graphQLQueryEffect()","description":"The underlying atom effect for syncing a Recoil atom with a GraphQL query.  It initializes an atom based on the results of a GraphQL query and subscribes to local mutations or updates.","sidebar":"recoil-relay"},"recoil-relay/api/graphQLSelector":{"id":"recoil-relay/api/graphQLSelector","title":"graphQLSelector()","description":"graphQLSelector() creates a Recoil selector which syncs with the provided Relay environment and GraphQL query or subscription.  The selector will automatically update with any deferred data, live queries, or if any local commits or updates are performed which mutate that part of the graph.  The selector acts like a local cache with the server as the source of truth.  It is writable and can be configured to commit mutations to the server when updated as a write-through cache.","sidebar":"recoil-relay"},"recoil-relay/api/graphQLSelectorFamily":{"id":"recoil-relay/api/graphQLSelectorFamily","title":"graphQLSelectorFamily()","description":"graphQLSelectorFamily() is similar to graphQLSelector() except that it returns a function which accepts a parameter and returns a selector for that parameter.  This basically allows us to pass parameters to the query from the calling component based on props or other state.","sidebar":"recoil-relay"},"recoil-relay/api/graphQLSubscriptionEffect":{"id":"recoil-relay/api/graphQLSubscriptionEffect","title":"graphQLSubscriptionEffect()","description":"The underlying atom effect for syncing a Recoil atom with a GraphQL subscription.  It initializes an atom based on the results of a GraphQL subscription and subscribes to updates from the server.","sidebar":"recoil-relay"},"recoil-relay/api/RecoilRelayEnvironment":{"id":"recoil-relay/api/RecoilRelayEnvironment","title":"<RecoilRelayEnvironment>","description":"A component that registers a Relay Environment to be used by GraphQL selectors or atom effects referenced by its child components with matching EnvironmentKey.","sidebar":"recoil-relay"},"recoil-relay/api/RecoilRelayEnvironmentProvider":{"id":"recoil-relay/api/RecoilRelayEnvironmentProvider","title":"<RecoilRelayEnvironmentProvider>","description":"The ` component enables you to use a Relay Environment with Recoil GraphQL selectors or atom effects in its child components.  The  component enables you to use a Relay Environment with Relay hooks in its child components.  ` is simply a convenience component which combines these two.","sidebar":"recoil-relay"},"recoil-relay/environment":{"id":"recoil-relay/environment","title":"Relay Environment","description":"To use GraphQL with the recoil-relay library you\'ll need to reference your Relay environment(s).  Each GraphQL selector or effect requires an environment option which can either reference a Relay Environment directly or be an EnvironmentKey that matches up with a `` component that registered a Relay environment.","sidebar":"recoil-relay"},"recoil-relay/graphql-effects":{"id":"recoil-relay/graphql-effects","title":"GraphQL Atom Effects","description":"The underlying GraphQL synchronization support is provided via atom effects.  While GraphQL selectors are provided as a convenience to make them easier to use, you could also apply these effects directly to atoms.  To use these, you\'ll need to either reference or register your Relay environment.","sidebar":"recoil-relay"},"recoil-relay/graphql-mutations":{"id":"recoil-relay/graphql-mutations","title":"GraphQL Mutations","description":"GraphQL Mutations","sidebar":"recoil-relay"},"recoil-relay/graphql-queries":{"id":"recoil-relay/graphql-queries","title":"GraphQL Queries","description":"GraphQL queries can be done using graphQLSelector() and graphQLSelectorFamily().  (The underlying support is provided via atom effects).  But first, make sure to setup your Relay environment.","sidebar":"recoil-relay"},"recoil-relay/graphql-subscriptions":{"id":"recoil-relay/graphql-subscriptions","title":"GraphQL Subscriptions","description":"While GraphQL queries will subscribe to changes from locally issued mutations or live updates, you may also want to subscribe to updates that are pushed by the server.  In this situation you can use a GraphQL _subscription_ instead of a GraphQL _query_.  GraphQL subscriptions require a different implementation on the server to support initiating remote updates.","sidebar":"recoil-relay"},"recoil-relay/introduction":{"id":"recoil-relay/introduction","title":"Recoil and GraphQL with Relay","description":"The recoil-relay NPM library helps Recoil perform type safe and efficient queries using GraphQL with the Relay library.  It provides selectors which can easily query with GraphQL.  The queries are synced with the Recoil data-flow graph so downstream selectors can derive state from them, they can depend on upstream Recoil state, and they are automatically subscribed to any changes in the graph from Relay.  Everything stays in sync automatically.","sidebar":"recoil-relay"},"recoil-sync/api/RecoilSync":{"id":"recoil-sync/api/RecoilSync","title":"<RecoilSync> - Recoil Sync Store","description":"Component from the Recoil Sync library to define an external store for atoms to sync with using the syncEffect() atom effect.","sidebar":"recoil-sync"},"recoil-sync/api/RecoilURLSync":{"id":"recoil-sync/api/RecoilURLSync","title":"<RecoilURLSync>","description":"A component from the Recoil Sync library to sync atoms using the syncEffect() or urlSyncEffect() atom effects with the browser URL.","sidebar":"recoil-sync"},"recoil-sync/api/RecoilURLSyncJSON":{"id":"recoil-sync/api/RecoilURLSyncJSON","title":"<RecoilURLSyncJSON>","description":"A component from the Recoil Sync library to sync atoms using the syncEffect() or urlSyncEffect() atom effects with the browser URL.","sidebar":"recoil-sync"},"recoil-sync/api/RecoilURLSyncTransit":{"id":"recoil-sync/api/RecoilURLSyncTransit","title":"<RecoilURLSyncTransit>","description":"A component from the Recoil Sync library to sync atoms using the syncEffect() or urlSyncEffect() atom effects with the browser URL.","sidebar":"recoil-sync"},"recoil-sync/api/syncEffect":{"id":"recoil-sync/api/syncEffect","title":"syncEffect(...)","description":"A function to get an atom effect for the recoil-sync library to synchronize an atom with external state defined with the `` component.","sidebar":"recoil-sync"},"recoil-sync/api/urlSyncEffect":{"id":"recoil-sync/api/urlSyncEffect","title":"urlSyncEffect(...)","description":"An optional effect that may be used instead of syncEffect() for URL Persistence in order to specify additional options, such as if state changes should replace the URL or push a new entry in the browser history stack.","sidebar":"recoil-sync"},"recoil-sync/implement-store":{"id":"recoil-sync/implement-store","title":"Implementing a Store","description":"While the library comes with some built-in stores, you can implement your own using `.   Specify an optional storeKey` to identify and match up which atoms should sync with which store.  Then, specify the following optional callbacks to define the behavior for your store:","sidebar":"recoil-sync"},"recoil-sync/introduction":{"id":"recoil-sync/introduction","title":"Recoil Sync Library","description":"The recoil-sync NPM package provides an add-on library to help synchronize Recoil state with external systems.  Simple asynchronous data queries can be implemented via selectors or useEffect(), or atom effects can be used for bi-directional syncing of individual atoms.  The recoil-sync add-on package provides some additional functionality:","sidebar":"recoil-sync"},"recoil-sync/sync-effect":{"id":"recoil-sync/sync-effect","title":"Sync Atom Effect - syncEffect()","description":"syncEffect() is an atom effect is used to tag atoms that should be synchronized and have them initialize their value with the external store.  The only required option is refine for input validation.  The itemKey option allows you to specify a key for this particular atom with the external store.  If not specified, it defaults to the atom\'s own key.  A storeKey can also be provided to match up which external store to sync with, if you have more than one.  There are additional options, such as read and write for more advanced cases.","sidebar":"recoil-sync"},"recoil-sync/url-persistence":{"id":"recoil-sync/url-persistence","title":"URL Persistence","description":"One of the built-in external store syncing mechanisms provided with the recoil-sync package is URL persistence.  This enables users to easily initialize atoms based on the URL, update the URL when atoms mutate, and subscribe to URL changes (such as the back button).  Atom state changes can be configured to either replace the current URL or push a new entry in the browser history stack.","sidebar":"recoil-sync"},"refine/api/Advanced_Checkers":{"id":"refine/api/Advanced_Checkers","title":"Advanced Refine Checkers","description":"In addition to collections and primitives, more complex types can be modeled using the following combinator checkers.","sidebar":"refine"},"refine/api/Checkers":{"id":"refine/api/Checkers","title":"Refine Checkers","description":"The core of Refine is the Checker type. Checkers are essentially just functions which take in a mixed (for Flow) or unknown (for TypeScript) value and return  a CheckResult...","sidebar":"refine"},"refine/api/Collection_Checkers":{"id":"refine/api/Collection_Checkers","title":"Refine Collection Checkers","description":"Collection checkers can be combined with primitive checkers to refine more complex values.","sidebar":"refine"},"refine/api/Primitive_Checkers":{"id":"refine/api/Primitive_Checkers","title":"Refine Primitive Checkers","description":"The starting place for building a Refine checker is with the primitive combinators.","sidebar":"refine"},"refine/api/Utilities":{"id":"refine/api/Utilities","title":"Refine Utilities","description":"In addition to the core Checker combinators provided by Refine, the library also exposes some utility functions to help with things like JSON parsing and assertion functions.","sidebar":"refine"},"refine/Introduction":{"id":"refine/Introduction","title":"Refine","description":"Refine is a type-refinement and validator combinator library for mixed / unknown values in Flow or TypeScript.","sidebar":"refine"}}}')}}]);