"use strict";(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[9048],{3905:function(e,n,r){r.d(n,{Zo:function(){return m},kt:function(){return y}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},m=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(r),y=o,v=u["".concat(c,".").concat(y)]||u[y]||s[y]||i;return r?t.createElement(v,a(a({ref:n},m),{},{components:r})):t.createElement(v,a({ref:n},m))}));function y(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9984:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return m},default:function(){return u}});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={title:"<RecoilRelayEnvironment>",sidebar_label:"<RecoilRelayEnvironment>"},c=void 0,p={unversionedId:"recoil-relay/api/RecoilRelayEnvironment",id:"recoil-relay/api/RecoilRelayEnvironment",title:"<RecoilRelayEnvironment>",description:"A component that registers a Relay Environment to be used by GraphQL selectors or atom effects referenced by its child components with matching EnvironmentKey.",source:"@site/docs/recoil-relay/api/RecoilRelayEnvironment.md",sourceDirName:"recoil-relay/api",slug:"/recoil-relay/api/RecoilRelayEnvironment",permalink:"/zh-hans/docs/recoil-relay/api/RecoilRelayEnvironment",editUrl:"https://github.com/facebookexperimental/Recoil/edit/docs/docs/i18n/zh-hans/docusaurus-plugin-content-docs/current/recoil-relay/api/RecoilRelayEnvironment.md",tags:[],version:"current",frontMatter:{title:"<RecoilRelayEnvironment>",sidebar_label:"<RecoilRelayEnvironment>"},sidebar:"recoil-relay",previous:{title:"EnvironmentKey",permalink:"/zh-hans/docs/recoil-relay/api/EnvironmentKey"},next:{title:"<RecoilRelayEnvironmentProvider>",permalink:"/zh-hans/docs/recoil-relay/api/RecoilRelayEnvironmentProvider"}},m=[{value:"Props",id:"props",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],s={toc:m};function u(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A component that registers a Relay Environment to be used by GraphQL ",(0,i.kt)("a",{parentName:"p",href:"/docs/recoil-relay/graphql-queries"},"selectors")," or ",(0,i.kt)("a",{parentName:"p",href:"/docs/recoil-relay/graphql-effects"},"atom effects")," referenced by its child components with matching ",(0,i.kt)("a",{parentName:"p",href:"/docs/recoil-relay/api/EnvironmentKey"},(0,i.kt)("inlineCode",{parentName:"a"},"EnvironmentKey")),"."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"props"},"Props"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"environment"))," - The Relay Environment object to register."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"environmentKey"))," - The ",(0,i.kt)("a",{parentName:"li",href:"/docs/recoil-relay/api/EnvironmentKey"},(0,i.kt)("inlineCode",{parentName:"a"},"EnvironmentKey"))," object to associate this environment with.")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const myEnvironmentKey = new EnvironmentKey('My Environment');\n\nfunction MyApp() {\n  return (\n    <RecoilRoot>\n      <RecoilRelayEnvironment\n        environment={myEnvironemnt}\n        environmentKey={myEnvironmentKey}>\n        {/** My App **/}\n      </RecoilRelayEnvironment>\n    </RecoilRoot>\n  )\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const myQuery = graphQLSelector({\n  key: 'MyQuery',\n  environment: myEnvironmentKey,\n  query: graphql`...`,\n  variables: {},\n});\n\nfunction MyComponent() {\n  const results = useRecoilValue(myQuery);\n}\n")))}u.isMDXComponent=!0}}]);