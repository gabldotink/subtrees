"use strict";(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[9210],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=p(r),m=a,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||i;return r?n.createElement(d,o(o({ref:t},s),{},{components:r})):n.createElement(d,o({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9558:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return f}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],c={title:"graphQLSubscriptionEffect()",sidebar_label:"graphQLSubscriptionEffect()"},l=void 0,p={unversionedId:"recoil-relay/api/graphQLSubscriptionEffect",id:"recoil-relay/api/graphQLSubscriptionEffect",title:"graphQLSubscriptionEffect()",description:"The underlying atom effect for syncing a Recoil atom with a GraphQL subscription.  It initializes an atom based on the results of a GraphQL subscription and subscribes to updates from the server.",source:"@site/docs/recoil-relay/api/graphQLSubscriptionEffect.md",sourceDirName:"recoil-relay/api",slug:"/recoil-relay/api/graphQLSubscriptionEffect",permalink:"/docs/recoil-relay/api/graphQLSubscriptionEffect",editUrl:"https://github.com/facebookexperimental/Recoil/edit/docs/docs/docs/recoil-relay/api/graphQLSubscriptionEffect.md",tags:[],version:"current",frontMatter:{title:"graphQLSubscriptionEffect()",sidebar_label:"graphQLSubscriptionEffect()"},sidebar:"recoil-relay",previous:{title:"graphQLQueryEffect()",permalink:"/docs/recoil-relay/api/graphQLQueryEffect"},next:{title:"graphQLMutationEffect()",permalink:"/docs/recoil-relay/api/graphQLMutationEffect"}},s=[],u={toc:s};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The underlying ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/atom-effects"},"atom effect")," for syncing a Recoil ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/core/atom"},"atom")," with a ",(0,i.kt)("strong",{parentName:"p"},"GraphQL subscription"),".  It initializes an atom based on the results of a GraphQL subscription and subscribes to updates from the server."),(0,i.kt)("hr",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function graphQLSubscriptionEffect<\n  TVariables: Variables,\n  TData: $ReadOnly<{[string]: mixed}>,\n  T = TData,\n  TRawResponse = void,\n>({\n  environment: IEnvironment | EnvironmentKey,\n  subscription: GraphQLSubscription<TVariables, TData, TRawResponse>,\n  variables: TVariables | null,\n  mapResponse: TData => T,\n}): AtomEffect<T>\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"environment"),": The Relay Environment or an ",(0,i.kt)("a",{parentName:"li",href:"/docs/recoil-relay/api/EnvironmentKey"},(0,i.kt)("inlineCode",{parentName:"a"},"EnvironmentKey"))," to match with the environment provided with ",(0,i.kt)("a",{parentName:"li",href:"/docs/recoil-relay/api/RecoilRelayEnvironment"},(0,i.kt)("inlineCode",{parentName:"a"},"<RecoilRelayEnvironemnt>")),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"subscription"),": The GraphQL subscription to query."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"variables"),": ",(0,i.kt)("a",{parentName:"li",href:"https://graphql.org/learn/queries/#variables"},"Variables")," object provided as input to the GraphQL query.  If ",(0,i.kt)("inlineCode",{parentName:"li"},"null"),", then skip query and use the default atom value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mapResponse"),": Callback to map the query response to the atom value.")),(0,i.kt)("hr",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const myAtom = atom({\n  key: 'MyQuery',\n  effects: [\n    graphQLSubscriptionEffect({\n      environment: myEnvironment,\n      query: graphql`\n        subscription MyEventSubscription($id: ID!) {\n          myevent(id: $id) {\n            id\n            name\n          }\n        }\n      `,\n      variables: {id: 123},\n    }),\n  ],\n});\n")))}f.isMDXComponent=!0}}]);