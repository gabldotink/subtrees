"use strict";(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[3217],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6136:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={title:"class Loadable",sidebar_label:"Loadable"},u=void 0,c={unversionedId:"api-reference/core/Loadable",id:"api-reference/core/Loadable",title:"class Loadable",description:"Un objet Loadable repr\xe9sente l'\xe9tat actuel d'un Recoil atome ou s\xe9lecteur. Cet \xe9tat peut avoir une valeur disponible, \xeatre dans un \xe9tat d'erreur ou encore \xeatre en attente de r\xe9solution asynchrone. Un Loadable a l'interface suivante:",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/api-reference/core/Loadable.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/Loadable",permalink:"/fr/docs/api-reference/core/Loadable",editUrl:"https://github.com/facebookexperimental/Recoil/edit/docs/docs/i18n/fr/docusaurus-plugin-content-docs/current/api-reference/core/Loadable.md",tags:[],version:"current",frontMatter:{title:"class Loadable",sidebar_label:"Loadable"},sidebar:"docs",previous:{title:"selector()",permalink:"/fr/docs/api-reference/core/selector"},next:{title:"useRecoilState()",permalink:"/fr/docs/api-reference/core/useRecoilState"}},s=[{value:"Exemple",id:"exemple",children:[],level:3}],p={toc:s};function d(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Un objet ",(0,o.kt)("inlineCode",{parentName:"p"},"Loadable")," repr\xe9sente l'\xe9tat actuel d'un Recoil ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/atom"},"atome")," ou ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/selector"},"s\xe9lecteur"),". Cet \xe9tat peut avoir une valeur disponible, \xeatre dans un \xe9tat d'erreur ou encore \xeatre en attente de r\xe9solution asynchrone. Un ",(0,o.kt)("inlineCode",{parentName:"p"},"Loadable")," a l'interface suivante:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"state"),": l'\xe9tat actuel de l'atome ou du s\xe9lecteur. Les valeurs possibles sont ",(0,o.kt)("inlineCode",{parentName:"li"},"'hasValue'"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"'hasError'"),", ou ",(0,o.kt)("inlineCode",{parentName:"li"},"'loading'"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"contents"),": La valeur repr\xe9sent\xe9e par ce ",(0,o.kt)("inlineCode",{parentName:"li"},"Loadable"),". Si l'\xe9tat est ",(0,o.kt)("inlineCode",{parentName:"li"},"hasValue"),", c'est la valeur r\xe9elle, si l'\xe9tat est ",(0,o.kt)("inlineCode",{parentName:"li"},"hasError"),", c'est l'objet ",(0,o.kt)("inlineCode",{parentName:"li"},"Error")," qui a \xe9t\xe9 lanc\xe9, et si l'\xe9tat est ",(0,o.kt)("inlineCode",{parentName:"li"},"loading"),", alors vous pouvez utiliser ",(0,o.kt)("inlineCode",{parentName:"li"},"toPromise()")," pour obtenir une ",(0,o.kt)("inlineCode",{parentName:"li"},"Promise")," de la valeur.")),(0,o.kt)("p",null,"Les chargeables contiennent \xe9galement des m\xe9thodes d'assistance pour acc\xe9der \xe0 l'\xe9tat actuel. ",(0,o.kt)("em",{parentName:"p"},"Consid\xe9rez cette API comme instable"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"getValue()")," - M\xe9thode pour acc\xe9der \xe0 la valeur qui correspond \xe0 la s\xe9mantique des s\xe9lecteurs React Suspense et Recoil. Si l'\xe9tat a une valeur, il renvoie une valeur, s'il contient une erreur, il renvoie cette erreur, et s'il est toujours en attente, il suspend l'ex\xe9cution ou le rendu pour propager l'\xe9tat en attente."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"toPromise()"),": renvoie une ",(0,o.kt)("inlineCode",{parentName:"li"},"Promise")," qui se r\xe9soudra lorsque le s\xe9lecteur sera r\xe9solu. Si le s\xe9lecteur est synchrone ou a d\xe9j\xe0 \xe9t\xe9 r\xe9solu, il renvoie une ",(0,o.kt)("inlineCode",{parentName:"li"},"Promise")," qui se r\xe9sout imm\xe9diatement."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"valueMaybe()")," - Renvoie la valeur si disponible, sinon renvoie ",(0,o.kt)("inlineCode",{parentName:"li"},"undefined")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"valueOrThrow()")," - Renvoie la valeur si disponible ou renvoie une erreur."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"map()")," - Prend une fonction pour transformer la valeur du Loadable et renvoie un nouveau Loadable avec la valeur transform\xe9e. La fonction de transformation obtient un param\xe8tre de la valeur et renvoie la nouvelle valeur; il peut \xe9galement propager des erreurs lanc\xe9es ou du suspense.")),(0,o.kt)("h3",{id:"exemple"},"Exemple"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"function UserInfo({userID}) {\n  const userNameLoadable = useRecoilValueLoadable(userNameQuery(userID));\n  switch (userNameLoadable.state) {\n    case 'hasValue':\n      return <div>{userNameLoadable.contents}</div>;\n    case 'loading':\n      return <div>Loading...</div>;\n    case 'hasError':\n      throw userNameLoadable.contents;\n  }\n}\n")))}d.isMDXComponent=!0}}]);