"use strict";(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[6854],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,g=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return n?o.createElement(g,s(s({ref:t},p),{},{components:n})):o.createElement(g,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8263:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),s=["components"],i={title:"Outils de d\xe9veloppement",sidebar_label:"Outils de d\xe9veloppement"},l=void 0,u={unversionedId:"guides/dev-tools",id:"guides/dev-tools",title:"Outils de d\xe9veloppement",description:"Recoil a des fonctionnalit\xe9s pour vous permettre d'observer et de mettre \xe0 jour les changements d'\xe9tat.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/guides/dev-tools.md",sourceDirName:"guides",slug:"/guides/dev-tools",permalink:"/fr/docs/guides/dev-tools",editUrl:"https://github.com/facebookexperimental/Recoil/edit/docs/docs/i18n/fr/docusaurus-plugin-content-docs/current/guides/dev-tools.md",tags:[],version:"current",frontMatter:{title:"Outils de d\xe9veloppement",sidebar_label:"Outils de d\xe9veloppement"},sidebar:"docs",previous:{title:"Transitions",permalink:"/fr/docs/guides/transitions"},next:{title:"<RecoilRoot />",permalink:"/fr/docs/api-reference/core/RecoilRoot"}},p=[{value:"<em>NOTE IMPORTANTE</em>",id:"note-importante",children:[],level:2},{value:"Observation de tous les changements d&#39;\xe9tat",id:"observation-de-tous-les-changements-d\xe9tat",children:[],level:2},{value:"Observation des changements d&#39;\xe9tat sur demande",id:"observation-des-changements-d\xe9tat-sur-demande",children:[],level:2},{value:"Voyage dans le temps",id:"voyage-dans-le-temps",children:[],level:2}],c={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Recoil a des fonctionnalit\xe9s pour vous permettre d'observer et de mettre \xe0 jour les changements d'\xe9tat."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"note-importante"},(0,a.kt)("em",{parentName:"h2"},"NOTE IMPORTANTE")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Cette API est actuellement en cours de d\xe9veloppement et changera. Merci de restez \xe0 l'\xe9coute..."))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"observation-de-tous-les-changements-d\xe9tat"},"Observation de tous les changements d'\xe9tat"),(0,a.kt)("p",null,"Vous pouvez utiliser un hook tel que ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/core/useRecoilSnapshot"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"useRecoilSnapshot()")))," ou ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/core/useRecoilTransactionObserver"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"useRecoilTransactionObserver_UNSTABLE()")))," pour vous abonner aux changements d'\xe9tat et obtenir un ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/core/Snapshot"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"Snapshot")))," (instantan\xe9) du nouvel \xe9tat."),(0,a.kt)("p",null,"Une fois que vous avez un ",(0,a.kt)("inlineCode",{parentName:"p"},"instantan\xe9"),", vous pouvez utiliser des m\xe9thodes telles que ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"getLoadable()")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"getPromise()"))," et ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"getInfo_UNSTABLE()"))," pour inspecter l'\xe9tat et utiliser ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"getNodes_UNSTABLE()"))," pour it\xe9rer sur l'ensemble des atomes connus."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function DebugObserver(): React.Node {\n  const snapshot = useRecoilSnapshot();\n  useEffect(() => {\n    console.debug('Les atomes suivants on \xe9t\xe9 modifi\xe9s:');\n    for (const node of snapshot.getNodes_UNSTABLE({isModified: true})) {\n      console.debug(node.key, snapshot.getLoadable(node));\n    }\n  }, [snapshot]);\n\n  return null;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function MyApp() {\n  return (\n    <RecoilRoot>\n      <DebugObserver />\n      ...\n    </RecoilRoot>\n  );\n}\n")),(0,a.kt)("h2",{id:"observation-des-changements-d\xe9tat-sur-demande"},"Observation des changements d'\xe9tat sur demande"),(0,a.kt)("p",null,"Ou, vous pouvez utiliser le hook ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/core/useRecoilCallback"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"useRecoilCallback()")))," pour obtenir un ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/core/Snapshot"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"Snapshot")))," (instantan\xe9) \xe0 la demande."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function DebugButton(): React.Node {\n  const onClick = useRecoilCallback(({snapshot}) => async () => {\n    console.debug('Atom values:');\n    for (const node of snapshot.getNodes_UNSTABLE()) {\n      const value = await snapshot.getPromise(node);\n      console.debug(node.key, value);\n    }\n  }, []);\n\n  return <button onClick={onClick}>Dump State</button>\n}\n")),(0,a.kt)("h2",{id:"voyage-dans-le-temps"},"Voyage dans le temps"),(0,a.kt)("p",null,"Le hook ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/core/useGotoRecoilSnapshot"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"useGotoRecoilSnapshot()")))," peut \xeatre utilis\xe9 pour mettre \xe0 jour l'int\xe9gralit\xe9 de l'\xe9tat Recoil pour qu'il corresponde \xe0 l'instantan\xe9 fourni. Cet exemple conserve un historique des changements d'\xe9tat avec la possibilit\xe9 de revenir en arri\xe8re et de restaurer l'\xe9tat global pr\xe9c\xe9dent."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Snapshot")," fournit \xe9galement une m\xe9thode ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"getID ()")),". Cela peut \xeatre utilis\xe9, par exemple, pour vous aider \xe0 d\xe9terminer si vous revenez \xe0 un \xe9tat ant\xe9rieur connu pour \xe9viter de mettre \xe0 jour votre historique des instantan\xe9s."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function TimeTravelObserver() {\n  const [snapshots, setSnapshots] = useState([]);\n\n  const snapshot = useRecoilSnapshot();\n  useEffect(() => {\n    if (snapshots.every(s => s.getID() !== snapshot.getID())) {\n      setSnapshots([...snapshots, snapshot]);\n    }\n  }, [snapshot]);\n\n  const gotoSnapshot = useGotoRecoilSnapshot();\n\n  return (\n    <ol>\n      {snapshots.map((snapshot, i) => (\n        <li key={i}>\n          Snapshot {i}\n          <button onClick={() => gotoSnapshot(snapshot)}>\n            Restore\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n}\n")))}d.isMDXComponent=!0}}]);