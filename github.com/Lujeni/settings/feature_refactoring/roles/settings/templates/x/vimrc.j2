" {{ ansible_managed }}
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
    Plug 'SirVer/ultisnips'
    Plug 'pearofducks/ansible-vim'
    Plug 'tmhedberg/SimpylFold'
    Plug 'Valloric/YouCompleteMe'
    Plug 'airblade/vim-gitgutter'
    Plug 'fatih/vim-go'
    Plug 'honza/vim-snippets'
    Plug 'jstemmer/gotags'
    Plug 'junegunn/fzf'
    Plug 'junegunn/fzf.vim'
    Plug 'junegunn/seoul256.vim'
    Plug 'kien/ctrlp.vim'
    Plug 'lepture/vim-jinja'
    Plug 'majutsushi/tagbar'
    Plug 'nvie/vim-flake8'
    Plug 'pearofducks/ansible-vim'
    Plug 'scrooloose/nerdtree' 
    Plug 'scrooloose/syntastic'
    Plug 'terryma/vim-multiple-cursors'
    Plug 'tpope/vim-fugitive'
call plug#end()

autocmd! bufwritepost .vimrc source %
autocmd vimenter * NERDTree

au BufRead,BufNewFile */role/*.yml set filetype=yaml.ansible
au BufRead,BufNewFile */role/*.yaml set filetype=yaml.ansible

filetype off
filetype indent on              " load filetype-specific indent files
filetype plugin on

syntax on

colorscheme seoul256

set guifont=Monospace\ 3
set nocompatible
set t_Co=256
set autoindent                  " indent when moving to the next line while writing code
set backspace=2                 " make backspace work list most other apps
set clipboard=unnamed           " system clipboard
set colorcolumn=79              " display vertical bar
set cursorline                  " show a visual line under the cursor's current line
set encoding=utf-8              " default encoding
set expandtab                   " expand tabs into spaces
set foldenable                  " fold by default
set foldlevel=99                " open most folds by default
set foldmethod=indent           " fold based on indent
set foldnestmax=10              " deepest fold is 10 levels
set hlsearch                    " highlight matches
set incsearch                   " search as characters are entered
set number                      " show line numbers
set shiftwidth=4                " when using the >> or << commands, shift lines by 4 spaces
set showcmd                     " show command in bottom bar
set showmatch                   " show the matching part of the pair for [] {} and ()
set softtabstop=4               " number of spaces in tab when editing
set tabstop=4                   " number of visual spaces per TAB

nmap <leader>n :NERDTreeToggle<CR>
map <right> <esc>
map <left> <esc>
map <up> <esc>
map <down> <esc>
imap <right> <esc>
imap <left> <esc>
imap <up> <esc>
imap <down> <esc>

let mapleader=","               " leader is comma

" CtrlP settings
let g:ctrlp_match_window = 'bottom,order:ttb'   "order matching files top to bottom with
let g:ctrlp_switch_buffer = 0                   " always open files in new buffers

" NERDTree settings
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.DS_Store', '\~$', '\.swp', '\.pyc']
let g:nerdtree_tabs_open_on_gui_startup=1
let g:nerdtree_tabs_open_on_console_startup=1

" Syntastic settings
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_go_checkers = ['golint', 'govet', 'errcheck']
let g:syntastic_mode_map = { 'mode': 'active', 'passive_filetypes': ['go']}

" YouCompleteMe settings
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Syntastic settings
let python_highlight_all=1

" SimpylFold
let g:SimpylFold_docstring_preview=1

