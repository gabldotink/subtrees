---
- name: configure | hugo | conf
  template: src=config.toml.j2 dest="{{ blog_root_dir }}/config.toml" owner=nginx group=nginx mode=0644
  register: hugo_changed

- name: configure | hugo | content
  file: path="{{ blog_root_dir }}/{{ item }}" state=directory owner=nginx group=nginx mode=0755
  with_items:
    - "content/about"
    - "content/post"
    - "static/images"

- name: configure | hugo | content post
  copy: src="{{ item }}" dest="{{ blog_root_dir }}/content/post/" owner=nginx group=nginx mode=0755
  with_fileglob:
    - "content/post/*"
  register: hugo_changed

- name: configure | hugo | content about
  copy: src="{{ item }}" dest="{{ blog_root_dir }}/content/about/" owner=nginx group=nginx mode=0755
  with_fileglob:
    - "content/about/*"
  register: hugo_changed

- name: configure | hugo | avatar
  copy: src="avatar.png" dest="{{ blog_root_dir }}/static/images/" owner=nginx group=nginx mode=0755

- name: configure | hugo | avatar fake retina
  copy: src="avatar.png" dest="{{ blog_root_dir }}/static/images/avatar@2x.png" owner=nginx group=nginx mode=0755

- name: configure | hugo | img
  copy: src="{{ item }}" dest="{{ blog_root_dir }}/static/images/" owner=nginx group=nginx mode=0755
  with_fileglob:
    - "static/images/*"

- name: configure | hugo | serv
  shell: "cd {{ blog_root_dir }} && hugo"
  when: "{{ hugo_changed is defined and hugo_changed.changed }}"
  notify: reload service nginx

- name: configure | nginx | www-interfaces directory
  file: path=/etc/nginx.d/www-interfaces/ state=directory owner=nginx group=nginx mode=0775

- name: configure | nginx | conf
  template: src=nginx.d/blog.j2 dest=/etc/nginx.d/www-interfaces/blog.conf owner=nginx group=nginx mode=0644
  notify: reload service nginx
